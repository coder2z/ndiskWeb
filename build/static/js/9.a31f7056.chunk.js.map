{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Aria2.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Common/DomainInput.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Setting/Captcha.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","Image","Category","Storage","Group","Person","InsertDriveFile","Share","Dashboard","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","setNews","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","form","marginTop","marginBottom","formContainer","SiteInformation","loading","setLoading","siteName","siteTitle","siteDes","siteICPId","siteScript","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","authn_enabled","groups","setGroups","httpAlert","setHttpAlert","checked","FormControlLabel","control","Switch","label","ID","toString","Name","buttonMargin","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","rowsMax","SizeInput","max","suffix","unit","setUnit","first","transform","Math","round","style","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","onedrive_chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","JSON","parse","themeString","stringify","Table","TableHead","TableRow","TableCell","TableBody","component","scope","helperText","onBlur","length","themeCopy","resStr","deleteTheme","Delete","Alert","severity","Link","href","newTheme","Aria2","aria2_rpcurl","aria2_token","aria2_temp_path","aria2_options","aria2_interval","aria2_call_timeout","server","token","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","cardContainer","cover","card","flex","bg","dialogFooter","policies","img","AddPolicy","dividers","sm","Card","CardActionArea","CardMedia","image","CardContent","tableContainer","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","page","setPage","pageSize","setPageSize","total","setTotal","addDialog","setAddDialog","filter","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","page_size","order_by","conditions","Boolean","TableContainer","size","column","row","hover","policyTypeMap","Type","toLocaleString","sizeToString","delete","currentTarget","Edit","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","DomainInput","domain","setDomain","protocol","setProtocol","setError","replace","startAdornment","MagicVar","isFile","isSlave","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","viewButtonLabel","textTransform","code","fontFamily","steps","optional","COSGuide","props","activeStep","setActiveStep","Set","skipped","setSkipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","SecretKey","AccessKey","BaseURL","Server","IsPrivate","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","MaxSize","OptionsSerialized","file_type","setPolicy","policyID","setPolicyID","region","setRegion","Stepper","index","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","pattern","BucketName","RadioGroup","Radio","Collapse","in","getNumber","stepContental","policyCopy","parseInt","split","prevActiveStep","prevSkipped","newSkipped","values","add","LocalGuide","OneDriveGuide","od_proxy","od_driver","useSharePoint","setUseSharePoint","od_redirect","httpsAlert","setHttpsAlert","handleOptionChange","URL","placeholder","OSSGuide","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","submitPolicy","RemoteGuide","mimetype","pre","overflow","randomStr","minlength","secret","UpyunGuide","regions","S3Guide","alertOpen","setAlertOpen","Autocomplete","freeSolo","onInputChange","_","renderOption","Fragment","renderInput","params","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","join","PolicyList","pid","MaxStorage","GroupForm","group","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","compress_size","decompress_size","setGroup","groupCopy","input","handleOptionCheckChange","archive_task","EditGroupPreload","UserFilter","setSearch","group_id","status","setInput","keywords","setKeywords","nick","email","highlight","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","selected","setSelected","searches","isSelected","indexOf","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","File","setFiles","deleteBatch","force","DeleteForever","Size","UserID","formatLocalTime","CreatedAt","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Download","downloads","setDownloads","Source","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","src","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","Chip","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","Captcha","captcha_type","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","captcha_TCaptcha_CaptchaAppId","captcha_TCaptcha_AppSecretKey","captcha_TCaptcha_SecretId","captcha_TCaptcha_SecretKey","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/9.a31f7056.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Assignment,\n    Category,\n    CloudDownload,\n    Contacts,\n    Group,\n    Home,\n    Image,\n    InsertDriveFile,\n    Language,\n    ListAlt,\n    Mail,\n    Palette,\n    Person,\n    Settings,\n    SettingsEthernet,\n    Share,\n    Storage,\n} from \"@material-ui/icons\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport UserAvatar from \"../Navbar/UserAvatar\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    sub: {\n        paddingLeft: 36,\n        color: theme.palette.text.secondary,\n    },\n    subMenu: {\n        backgroundColor: theme.palette.background.default,\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    active: {\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.main,\n        \"&:hover\": {\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\n        },\n    },\n    activeText: {\n        fontWeight: 500,\n    },\n    activeIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst items = [\n    {\n        title: \"面板首页\",\n        icon: <Home />,\n        path: \"home\",\n    },\n    {\n        title: \"参数设置\",\n        icon: <Settings />,\n        sub: [\n            {\n                title: \"站点信息\",\n                path: \"basic\",\n                icon: <Language />,\n            },\n            {\n                title: \"注册与登录\",\n                path: \"access\",\n                icon: <Contacts />,\n            },\n            {\n                title: \"邮件\",\n                path: \"mail\",\n                icon: <Mail />,\n            },\n            {\n                title: \"上传与下载\",\n                path: \"upload\",\n                icon: <SettingsEthernet />,\n            },\n            // {\n            //     title: \"外观\",\n            //     path: \"theme\",\n            //     icon: <Palette />,\n            // },\n            // {\n            //     title: \"离线下载\",\n            //     path: \"aria2\",\n            //     icon: <CloudDownload />,\n            // },\n            {\n                title: \"图像处理\",\n                path: \"image\",\n                icon: <Image />,\n            },\n            {\n                title: \"验证码\",\n                path: \"captcha\",\n                icon: <Category />,\n            },\n        ],\n    },\n    {\n        title: \"存储策略\",\n        icon: <Storage />,\n        path: \"policy\",\n    },\n    {\n        title: \"用户组\",\n        icon: <Group />,\n        path: \"group\",\n    },\n    {\n        title: \"用户\",\n        icon: <Person />,\n        path: \"user\",\n    },\n    {\n        title: \"文件\",\n        icon: <InsertDriveFile />,\n        path: \"file\",\n    },\n    {\n        title: \"分享\",\n        icon: <Share />,\n        path: \"share\",\n    },\n    // {\n    //     title: \"持久任务\",\n    //     icon: <Assignment />,\n    //     sub: [\n    //         {\n    //             title: \"离线下载\",\n    //             path: \"download\",\n    //             icon: <CloudDownload />,\n    //         },\n    //         {\n    //             title: \"常规任务\",\n    //             path: \"task\",\n    //             icon: <ListAlt />,\n    //         },\n    //     ],\n    // },\n];\n\nexport default function Dashboard({ content }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(!pathHelper.isMobile());\n    const [menuOpen, setMenuOpen] = useState(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        SetSubTitle(\"仪表盘\");\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n    }, []);\n\n    const { path } = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\n                        Cloudreve 仪表盘\n                    </Typography>\n                    <UserAvatar />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.noPadding}>\n                    {items.map((item) => {\n                        if (item.path !== undefined) {\n                            return (\n                                <ListItem\n                                    onClick={() =>\n                                        history.push(\"/admin/\" + item.path)\n                                    }\n                                    button\n                                    className={clsx({\n                                        [classes.active]: location.pathname.startsWith(\n                                            \"/admin/\" + item.path\n                                        ),\n                                    })}\n                                    key={item.title}\n                                >\n                                    <ListItemIcon\n                                        className={clsx({\n                                            [classes.activeIcon]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                    >\n                                        {item.icon}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        className={clsx({\n                                            [classes.activeText]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                        primary={item.title}\n                                    />\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            <ExpansionPanel\n                                key={item.title}\n                                square\n                                expanded={menuOpen === item.title}\n                                onChange={(event, isExpanded) => {\n                                    setMenuOpen(isExpanded ? item.title : null);\n                                }}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1d-content\"\n                                    id=\"panel1d-header\"\n                                >\n                                    <ListItem button key={item.title}>\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\n                                        <ListItemText primary={item.title} />\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <List className={classes.subMenu}>\n                                        {item.sub.map((sub) => (\n                                            <ListItem\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                }\n                                                className={clsx({\n                                                    [classes.sub]: open,\n                                                    [classes.active]: location.pathname.startsWith(\n                                                        \"/admin/\" + sub.path\n                                                    ),\n                                                })}\n                                                button\n                                                key={sub.title}\n                                            >\n                                                <ListItemIcon\n                                                    className={clsx({\n                                                        [classes.activeIcon]: location.pathname.startsWith(\n                                                            \"/admin/\" + sub.path\n                                                        ),\n                                                    })}\n                                                >\n                                                    {sub.icon}\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    primary={sub.title}\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        );\n                    })}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content(path)}\n            </main>\n        </div>\n    );\n}\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Description,\n    Favorite,\n    FileCopy,\n    Forum,\n    GitHub,\n    Home,\n    Launch,\n    Lock,\n    People,\n    Public,\n    Telegram,\n} from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    CartesianGrid,\n    Legend,\n    Line,\n    LineChart,\n    Tooltip,\n    XAxis,\n    YAxis,\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    },\n    logo: {\n        width: 70,\n    },\n    logoContainer: {\n        padding: theme.spacing(3),\n        display: \"flex\",\n    },\n    title: {\n        marginLeft: 16,\n    },\n    cloudreve: {\n        fontSize: 25,\n        color: theme.palette.text.secondary,\n    },\n    version: {\n        color: theme.palette.text.hint,\n    },\n    links: {\n        padding: theme.spacing(3),\n    },\n    iconRight: {\n        minWidth: 0,\n    },\n    userIcon: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    fileIcon: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    publicIcon: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    secretIcon: {\n        backgroundColor: red[100],\n        color: red[800],\n    },\n}));\n\nexport default function Index() {\n    const classes = useStyles();\n    const [lineData, setLineData] = useState([]);\n    const [news, setNews] = useState([]);\n    const [newsUsers, setNewsUsers] = useState({});\n    const [open, setOpen] = React.useState(false);\n    const [siteURL, setSiteURL] = React.useState(\"\");\n    const [statistics, setStatistics] = useState({\n        fileTotal: 0,\n        userTotal: 0,\n        publicShareTotal: 0,\n        secretShareTotal: 0,\n    });\n    const [version, setVersion] = useState({\n        backend: \"-\",\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const ResetSiteURL = () => {\n        setOpen(false);\n        API.patch(\"/admin/setting\", {\n            options: [\n                {\n                    key: \"siteURL\",\n                    value: window.location.origin,\n                },\n            ],\n        })\n            .then(() => {\n                setSiteURL(window.location.origin);\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/summary\")\n            .then((response) => {\n                const data = [];\n                response.data.date.forEach((v, k) => {\n                    data.push({\n                        name: v,\n                        file: response.data.files[k],\n                        user: response.data.users[k],\n                        share: response.data.shares[k],\n                    });\n                });\n                setLineData(data);\n                setStatistics({\n                    fileTotal: response.data.fileTotal,\n                    userTotal: response.data.userTotal,\n                    publicShareTotal: response.data.publicShareTotal,\n                    secretShareTotal: response.data.secretShareTotal,\n                });\n                setVersion(response.data.version);\n                setSiteURL(response.data.siteURL);\n                if (\n                    response.data.siteURL === \"\" ||\n                    response.data.siteURL !== window.location.origin\n                ) {\n                    setOpen(true);\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        axios\n            .get(\"/api/v3/admin/news\")\n            .then((response) => {\n                setNews(response.data.data);\n                const res = {};\n                response.data.included.forEach((v) => {\n                    if (v.type === \"users\") {\n                        res[v.id] = v.attributes;\n                    }\n                });\n                setNewsUsers(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={3}>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"确定站点URL设置\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {siteURL === \"\" &&\n                                \"您尚未设定站点URL，是否要将其设定为当前的 \" +\n                                    window.location.origin +\n                                    \" ?\"}\n                            {siteURL !== \"\" &&\n                                \"您设置的站点URL与当前实际不一致，是否要将其设定为当前的 \" +\n                                    window.location.origin +\n                                    \" ?\"}\n                        </Typography>\n                        <Typography>\n                            此设置非常重要，请确保其与您站点的实际地址一致。你可以在\n                            参数设置 - 站点信息 中更改此设置。\n                        </Typography>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"default\">\n                        忽略\n                    </Button>\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\n                        更改\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        趋势\n                    </Typography>\n                    <ResponsiveContainer\n                        width=\"100%\"\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\n                    >\n                        <LineChart width={1200} height={300} data={lineData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                name={\"文件\"}\n                                type=\"monotone\"\n                                dataKey=\"file\"\n                                stroke=\"#3f51b5\"\n                            />\n                            <Line\n                                name={\"用户\"}\n                                type=\"monotone\"\n                                dataKey=\"user\"\n                                stroke=\"#82ca9d\"\n                            />\n                            {/* <Line\n                                name={\"分享\"}\n                                type=\"monotone\"\n                                dataKey=\"share\"\n                                stroke=\"#e91e63\"\n                            /> */}\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        总计\n                    </Typography>\n                    <Divider />\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.userIcon}>\n                                    <People />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.userTotal}\n                                secondary=\"注册用户\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.fileIcon}>\n                                    <FileCopy />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.fileTotal}\n                                secondary=\"文件总数\"\n                            />\n                        </ListItem>\n                        {/* <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.publicIcon}>\n                                    <Public />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.publicShareTotal}\n                                secondary=\"公开分享总数\"\n                            />\n                        </ListItem> */}\n                        {/* <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.secretIcon}>\n                                    <Lock />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.secretShareTotal}\n                                secondary=\"私密分享总数\"\n                            />\n                        </ListItem> */}\n                    </List>\n                </Paper>\n            </Grid>\n            {/* <Grid item xs={12} md={4} lg={3}>\n                <Paper>\n                    <div className={classes.logoContainer}>\n                        <img\n                            alt=\"cloudreve\"\n                            className={classes.logo}\n                            src={\"/static/img/cloudreve.svg\"}\n                        />\n                        <div className={classes.title}>\n                            <Typography className={classes.cloudreve}>\n                                Cloudreve\n                            </Typography>\n                            <Typography className={classes.version}>\n                                {version.backend}{\" \"}\n                                {version.is_pro === \"true\" && (\n                                    <Chip size=\"small\" label=\"Pro\" />\n                                )}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div>\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主页\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://docs.cloudreve.org/\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Description />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文档\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://forum.cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Forum />\n                                </ListItemIcon>\n                                <ListItemText primary=\"讨论社区\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://t.me/cloudreve_official\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Telegram />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Telegram 群组\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://docs.cloudreve.org/use/pro/jie-shao\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\n                                    <Favorite />\n                                </ListItemIcon>\n                                <ListItemText primary=\"升级到捐助版\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Paper>\n            </Grid> */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {news &&\n                            news.map((v) => (\n                                <>\n                                    <ListItem\n                                        button\n                                        alignItems=\"flex-start\"\n                                        onClick={() =>\n                                            window.open(\n                                                \"https://forum.cloudreve.org/d/\" +\n                                                    v.id\n                                            )\n                                        }\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar\n                                                alt=\"Travis Howard\"\n                                                src={\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ] &&\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ].avatarUrl\n                                                }\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={v.attributes.title}\n                                            secondary={\n                                                <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.inline\n                                                        }\n                                                        color=\"textPrimary\"\n                                                    >\n                                                        {newsUsers[\n                                                            v.relationships\n                                                                .startUser.data\n                                                                .id\n                                                        ] &&\n                                                            newsUsers[\n                                                                v.relationships\n                                                                    .startUser\n                                                                    .data.id\n                                                            ].username}{\" \"}\n                                                    </Typography>\n                                                    发表于{\" \"}\n                                                    <TimeAgo\n                                                        datetime={\n                                                            v.attributes\n                                                                .startTime\n                                                        }\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </React.Fragment>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider />\n                                </>\n                            ))}\n                    </List>\n                </Paper>\n            </Grid> */}\n        </Grid>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function SiteInformation() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        siteURL: \"\",\n        siteName: \"\",\n        siteTitle: \"\",\n        siteDes: \"\",\n        siteICPId: \"\",\n        siteScript: \"\",\n        pwa_small_icon: \"\",\n        pwa_medium_icon: \"\",\n        pwa_large_icon: \"\",\n        pwa_display: \"\",\n        pwa_theme_color: \"\",\n        pwa_background_color: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        基本信息\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteName}\n                                    onChange={handleChange(\"siteName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的主标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    副标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteTitle}\n                                    onChange={handleChange(\"siteTitle\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的副标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点描述\n                                </InputLabel>\n                                <Input\n                                    value={options.siteDes}\n                                    onChange={handleChange(\"siteDes\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点描述信息，可能会在分享页面摘要内展示\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点URL\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.siteURL}\n                                    onChange={handleChange(\"siteURL\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    非常重要，请确保与实际情况一致。使用云存储策略、支付平台时，请填入可以被外网访问的地址。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    网站备案号\n                                </InputLabel>\n                                <Input\n                                    value={options.siteICPId}\n                                    onChange={handleChange(\"siteICPId\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    工信部网站ICP备案号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    页脚代码\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    value={options.siteScript}\n                                    onChange={handleChange(\"siteScript\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    在页面底部插入的自定义HTML代码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        渐进式应用 (PWA)\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_small_icon}\n                                    onChange={handleChange(\"pwa_small_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    扩展名为 ico 的小图标地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_medium_icon}\n                                    onChange={handleChange(\"pwa_medium_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    192x192 的中等图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_large_icon}\n                                    onChange={handleChange(\"pwa_large_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    512x512 的大图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    展示模式\n                                </InputLabel>\n                                <Select\n                                    value={options.pwa_display}\n                                    onChange={handleChange(\"pwa_display\")}\n                                >\n                                    <MenuItem value={\"fullscreen\"}>\n                                        fullscreen\n                                    </MenuItem>\n                                    <MenuItem value={\"standalone\"}>\n                                        standalone\n                                    </MenuItem>\n                                    <MenuItem value={\"minimal-ui\"}>\n                                        minimal-ui\n                                    </MenuItem>\n                                    <MenuItem value={\"browser\"}>\n                                        browser\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    PWA 应用添加后的展示模式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主题色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_theme_color}\n                                    onChange={handleChange(\"pwa_theme_color\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值，影响 PWA\n                                    启动画面上状态栏、内容页中状态栏、地址栏的颜色\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    背景色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_background_color}\n                                    onChange={handleChange(\n                                        \"pwa_background_color\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nexport default function AlertDialog({ title, msg, open, onClose }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Typography>{msg}</Typography>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    知道了\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport AlertDialog from \"../Dialogs/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Access() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        register_enabled: \"1\",\n        default_group: \"1\",\n        email_active: \"0\",\n        login_captcha: \"0\",\n        reg_captcha: \"0\",\n        forget_captcha: \"0\",\n        authn_enabled: \"0\",\n    });\n    const [siteURL, setSiteURL] = useState(\"\");\n    const [groups, setGroups] = useState([]);\n    const [httpAlert, setHttpAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleInputChange = (name) => (event) => {\n        const value = event.target.value;\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [...Object.keys(options), \"siteURL\"],\n        })\n            .then((response) => {\n                setSiteURL(response.data.siteURL);\n                delete response.data.siteURL;\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                title={\"提示\"}\n                msg={\n                    \"Web Authn 需要您的站点启用 HTTPS，并确认 参数设置 - 站点信息 - 站点URL 也使用了 HTTPS 后才能开启。\"\n                }\n                onClose={() => setHttpAlert(false)}\n                open={httpAlert}\n            />\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        注册与登录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.register_enabled === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"register_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许新用户注册\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，无法再通过前台注册新的用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.email_active === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"email_active\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"邮件激活\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，新用户注册需要点击邮件中的激活链接才能完成。请确认邮件发送设置是否正确，否则激活邮件无法送达\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reg_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"reg_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"注册验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用注册表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.login_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"login_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"登录验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用登录表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.forget_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"forget_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"找回密码验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用找回密码表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {/* <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.authn_enabled === \"1\"\n                                            }\n                                            onChange={(e) => {\n                                                if (\n                                                    !siteURL.startsWith(\n                                                        \"https://\"\n                                                    )\n                                                ) {\n                                                    setHttpAlert(true);\n                                                    return;\n                                                }\n                                                handleChange(\"authn_enabled\")(\n                                                    e\n                                                );\n                                            }}\n                                        />\n                                    }\n                                    label=\"Web Authn\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户使用绑定的外部验证器登录，站点必须启动\n                                    HTTPS 才能使用。\n                                </FormHelperText>\n                            </FormControl>\n                        </div> */}\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认用户组\n                                </InputLabel>\n                                <Select\n                                    value={options.default_group}\n                                    onChange={handleInputChange(\n                                        \"default_group\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户注册后的初始用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    buttonMargin: {\n        marginLeft: 8,\n    },\n}));\n\nexport default function Mail() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [test, setTest] = useState(false);\n    const [tesInput, setTestInput] = useState(\"\");\n    const [options, setOptions] = useState({\n        fromName: \"\",\n        fromAdress: \"\",\n        smtpHost: \"\",\n        smtpPort: \"\",\n        replyTo: \"\",\n        smtpUser: \"\",\n        smtpPass: \"\",\n        smtpEncryption: \"\",\n        mail_keepalive: \"30\",\n        mail_activation_template: \"\",\n        mail_reset_pwd_template: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const sendTestMail = () => {\n        setLoading(true);\n        API.post(\"/admin/mailTest\", {\n            to: tesInput,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"测试邮件已发送\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const reload = () => {\n        API.get(\"/admin/reload/email\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={test}\n                onClose={() => setTest(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">发件测试</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography>\n                            发送测试邮件前，请先保存已更改的邮件设置；\n                        </Typography>\n                        <Typography>\n                            邮件发送结果不会立即反馈，如果您长时间未收到测试邮件，请检查\n                            Cloudreve 在终端输出的错误日志。\n                        </Typography>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"收件人地址\"\n                        value={tesInput}\n                        onChange={(e) => setTestInput(e.target.value)}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTest(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => sendTestMail()}\n                        disabled={loading}\n                        color=\"primary\"\n                    >\n                        发送\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        发信\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人名\n                                </InputLabel>\n                                <Input\n                                    value={options.fromName}\n                                    onChange={handleChange(\"fromName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    邮件中展示的发件人姓名\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人邮箱\n                                </InputLabel>\n                                <Input\n                                    type={\"email\"}\n                                    required\n                                    value={options.fromAdress}\n                                    onChange={handleChange(\"fromAdress\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件邮箱的地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 服务器\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpHost}\n                                    onChange={handleChange(\"smtpHost\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址，不含端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 端口\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.smtpPort}\n                                    onChange={handleChange(\"smtpPort\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 用户名\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpUser}\n                                    onChange={handleChange(\"smtpUser\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱用户名，一般与邮箱地址相同\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={options.smtpPass}\n                                    onChange={handleChange(\"smtpPass\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱密码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    回信邮箱\n                                </InputLabel>\n                                <Input\n                                    value={options.replyTo}\n                                    onChange={handleChange(\"replyTo\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户回复系统发送的邮件时，用于接收回信的邮箱\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.smtpEncryption === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"smtpEncryption\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"使用加密连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否使用SSL加密连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 连接有效期 (秒)\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.mail_keepalive}\n                                    onChange={handleChange(\"mail_keepalive\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    有效期内建立的 SMTP\n                                    连接会被新邮件发送请求复用\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        邮件模板\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    新用户激活\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_activation_template}\n                                    onChange={handleChange(\n                                        \"mail_activation_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    新用户注册后激活邮件的模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    重置密码\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_reset_pwd_template}\n                                    onChange={handleChange(\n                                        \"mail_reset_pwd_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    密码重置邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    {\"   \"}\n                    <Button\n                        className={classes.buttonMargin}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={() => setTest(true)}\n                    >\n                        发送测试邮件\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\n\nconst unitTransform = (v) => {\n    if (v < 1024) {\n        return [Math.round(v), 1];\n    }\n    if (v < 1024 * 1024) {\n        return [Math.round(v / 1024), 1024];\n    }\n    if (v < 1024 * 1024 * 1024) {\n        return [Math.round(v / (1024 * 1024)), 1024 * 1024];\n    }\n    if (v < 1024 * 1024 * 1024 * 1024) {\n        return [Math.round(v / (1024 * 1024 * 1024)), 1024 * 1024 * 1024];\n    }\n    return [\n        Math.round(v / (1024 * 1024 * 1024 * 1024)),\n        1024 * 1024 * 1024 * 1024,\n    ];\n};\n\nexport default function SizeInput({\n    onChange,\n    min,\n    value,\n    required,\n    label,\n    max,\n    suffix,\n}) {\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [unit, setUnit] = useState(1);\n    let first = true;\n\n    const transform = useCallback(() => {\n        const res = unitTransform(value);\n        if (first && value !== 0) {\n            setUnit(res[1]);\n            first = false;\n        }\n        return res;\n    }, [value]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                style={{ width: 200 }}\n                value={transform()[0]}\n                type={\"number\"}\n                inputProps={{ min: min, step: 1 }}\n                onChange={(e) => {\n                    if (e.target.value * unit < max) {\n                        onChange({\n                            target: {\n                                value: (e.target.value * unit).toString(),\n                            },\n                        });\n                    } else {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            \"超出最大尺寸限制\",\n                            \"warning\"\n                        );\n                    }\n                }}\n                required={required}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={unit}\n                            onChange={(e) => {\n                                if (transform()[0] * e.target.value < max) {\n                                    onChange({\n                                        target: {\n                                            value: (\n                                                transform()[0] * e.target.value\n                                            ).toString(),\n                                        },\n                                    });\n                                    setUnit(e.target.value);\n                                } else {\n                                    ToggleSnackbar(\n                                        \"top\",\n                                        \"right\",\n                                        \"超出最大尺寸限制\",\n                                        \"warning\"\n                                    );\n                                }\n                            }}\n                        >\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024}>\n                                KB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024}>\n                                MB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024}>\n                                GB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\n                                TB{suffix && suffix}\n                            </MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function UploadDownload() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        max_worker_num: \"1\",\n        max_parallel_transfer: \"1\",\n        temp_path: \"\",\n        maxEditSize: \"0\",\n        onedrive_chunk_retries: \"0\",\n        archive_timeout: \"0\",\n        download_timeout: \"0\",\n        preview_timeout: \"0\",\n        doc_preview_timeout: \"0\",\n        upload_credential_timeout: \"0\",\n        upload_session_timeout: \"0\",\n        slave_api_timeout: \"0\",\n        onedrive_monitor_timeout: \"0\",\n        share_download_session_timeout: \"0\",\n        onedrive_callback_check: \"0\",\n        reset_after_upload_failed: \"0\",\n        onedrive_source_timeout: \"0\",\n    });\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        存储与传输\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Worker 数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_worker_num}\n                                    onChange={handleChange(\"max_worker_num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列最多并行执行的任务数，保存后需要重启\n                                    Cloudreve 生效\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中转并行传输\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_parallel_transfer}\n                                    onChange={handleChange(\n                                        \"max_parallel_transfer\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列中转任务传输时，最大并行协程数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时目录\n                                </InputLabel>\n                                <Input\n                                    value={options.temp_path}\n                                    onChange={handleChange(\"temp_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用于存放打包下载、解压缩、压缩等任务产生的临时文件的目录路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <SizeInput\n                                    value={options.maxEditSize}\n                                    onChange={handleChange(\"maxEditSize\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"文本文件在线编辑大小\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    文本文件可在线编辑的最大大小，超出此大小的文件无法在线编辑\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 分片错误重试\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1,\n                                    }}\n                                    value={options.onedrive_chunk_retries}\n                                    onChange={handleChange(\n                                        \"onedrive_chunk_retries\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive\n                                    存储策略分片上传失败后重试的最大次数，只适用于服务端上传或中转\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reset_after_upload_failed ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"reset_after_upload_failed\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"上传校验失败时强制重置连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，如果本次策略、头像等数据上传校验失败，服务器会强制重置连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        有效期 (秒)\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    打包下载\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.archive_timeout}\n                                    onChange={handleChange(\"archive_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.download_timeout}\n                                    onChange={handleChange(\"download_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    预览链接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.preview_timeout}\n                                    onChange={handleChange(\"preview_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Office 文档预览连接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.doc_preview_timeout}\n                                    onChange={handleChange(\n                                        \"doc_preview_timeout\"\n                                    )}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传凭证\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.upload_credential_timeout}\n                                    onChange={handleChange(\n                                        \"upload_credential_timeout\"\n                                    )}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.upload_session_timeout}\n                                    onChange={handleChange(\n                                        \"upload_session_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    超出后不再处理此上传的回调请求\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    从机API请求\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.slave_api_timeout}\n                                    onChange={handleChange(\"slave_api_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    分享下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={\n                                        options.share_download_session_timeout\n                                    }\n                                    onChange={handleChange(\n                                        \"share_download_session_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    设定时间内重复下载分享文件，不会被记入总下载次数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 客户端上传监控间隔\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.onedrive_monitor_timeout}\n                                    onChange={handleChange(\n                                        \"onedrive_monitor_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    每间隔所设定时间，Cloudreve 会向 OneDrive\n                                    请求检查客户端上传情况已确保客户端上传可控\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 回调等待\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.onedrive_callback_check}\n                                    onChange={handleChange(\n                                        \"onedrive_callback_check\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive\n                                    客户端上传完成后，等待回调的最大时间，如果超出会被认为上传失败\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 下载请求缓存\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        max: 3659,\n                                        step: 1,\n                                    }}\n                                    value={options.onedrive_source_timeout}\n                                    onChange={handleChange(\n                                        \"onedrive_source_timeout\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 获取文件下载 URL\n                                    后可将结果缓存，减轻热门文件下载API请求频率\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Add, Menu } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport { CompactPicker } from \"react-color\";\n\nconst useStyles = makeStyles((theme) => ({\n    picker: {\n        \"& div\": {\n            boxShadow: \"none !important\",\n        },\n        marginTop: theme.spacing(1),\n    },\n    \"@global\": {\n        \".compact-picker:parent \": {\n            boxShadow: \"none !important\",\n        },\n    },\n    statusBar: {\n        height: 24,\n        width: \"100%\",\n    },\n    fab: {\n        textAlign: \"right\",\n    },\n}));\n\nexport default function CreateTheme({ open, onClose, onSubmit }) {\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n                contrastText: \"#fff\",\n            },\n            secondary: {\n                main: \"#d81b60\",\n                contrastText: \"#fff\",\n            },\n        },\n    });\n\n    const subTheme = useCallback(() => {\n        return createMuiTheme(theme);\n    }, [theme]);\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\n            <DialogContent>\n                <Grid container>\n                    <Grid spacing={2} md={8} xs={12} container>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#f44336\",\n                                        \"#ff9800\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#03a9f4\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffc107\",\n                                        \"#FCC400\",\n                                        \"#8bc34a\",\n                                        \"#4caf50\",\n                                        \"#009688\",\n                                        \"#2196f3\",\n                                        \"#3f51b5\",\n                                        \"#e91e63\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#194D33\",\n                                        \"#0C797D\",\n                                        \"#0062B1\",\n                                        \"#673ab7\",\n                                        \"#9c27b0\",\n                                    ]}\n                                    color={theme.palette.primary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#ff1744\",\n                                        \"#ff3d00\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#00e5ff\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffea00\",\n                                        \"#ffc400\",\n                                        \"#c6ff00\",\n                                        \"#00e676\",\n                                        \"#76ff03\",\n                                        \"#00b0ff\",\n                                        \"#2979ff\",\n                                        \"#f50057\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#1de9b6\",\n                                        \"#0C797D\",\n                                        \"#3d5afe\",\n                                        \"#651fff\",\n                                        \"#d500f9\",\n                                    ]}\n                                    color={theme.palette.secondary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.primary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.secondary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid spacing={2} md={4} xs={12}>\n                        <ThemeProvider theme={subTheme()}>\n                            <div\n                                className={classes.statusBar}\n                                style={{\n                                    backgroundColor: subTheme().palette.primary\n                                        .dark,\n                                }}\n                            />\n                            <AppBar position=\"static\">\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        color=\"inherit\"\n                                        aria-label=\"menu\"\n                                    >\n                                        <Menu />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        Color\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            <div style={{ padding: 16 }}>\n                                <TextField\n                                    fullWidth\n                                    color={\"secondary\"}\n                                    label={\"文字输入\"}\n                                />\n                                <div\n                                    className={classes.fab}\n                                    style={{ paddingTop: 64 }}\n                                >\n                                    <Fab color=\"secondary\" aria-label=\"add\">\n                                        <Add />\n                                    </Fab>\n                                </div>\n                            </div>\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\n                    创建\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport CreateTheme from \"../Dialogs/CreateTheme\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 500,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    colorContainer: {\n        display: \"flex\",\n    },\n    colorDot: {\n        width: 20,\n        height: 20,\n        borderRadius: \"50%\",\n        marginLeft: 6,\n    },\n}));\n\nexport default function Theme() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [theme, setTheme] = useState({});\n    const [options, setOptions] = useState({\n        themes: \"{}\",\n        defaultTheme: \"\",\n        home_view_method: \"icon\",\n        share_view_method: \"list\",\n    });\n    const [themeConfig, setThemeConfig] = useState({});\n    const [themeConfigError, setThemeConfigError] = useState({});\n    const [create, setCreate] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteTheme = (color) => {\n        if (color === options.defaultTheme) {\n            ToggleSnackbar(\"top\", \"right\", \"不能删除默认配色\", \"warning\");\n            return;\n        }\n        if (Object.keys(theme).length <= 1) {\n            ToggleSnackbar(\"top\", \"right\", \"请至少保留一个配色方案\", \"warning\");\n            return;\n        }\n        const themeCopy = { ...theme };\n        delete themeCopy[color];\n        const resStr = JSON.stringify(themeCopy);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    const addTheme = (newTheme) => {\n        setCreate(false);\n        if (theme[newTheme.palette.primary.main] !== undefined) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                \"主色调不能与已有配色重复\",\n                \"warning\"\n            );\n            return;\n        }\n        const res = {\n            ...theme,\n            [newTheme.palette.primary.main]: newTheme,\n        };\n        const resStr = JSON.stringify(res);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    useEffect(() => {\n        const res = JSON.parse(options.themes);\n        const themeString = {};\n\n        Object.keys(res).forEach((k) => {\n            themeString[k] = JSON.stringify(res[k]);\n        });\n\n        setTheme(res);\n        setThemeConfig(themeString);\n    }, [options.themes]);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        主题配色\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>关键色</TableCell>\n                                        <TableCell>色彩配置</TableCell>\n                                        <TableCell>操作</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(theme).map((k) => (\n                                        <TableRow key={k}>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                <div\n                                                    className={\n                                                        classes.colorContainer\n                                                    }\n                                                >\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .primary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .secondary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    error={themeConfigError[k]}\n                                                    helperText={\n                                                        themeConfigError[k] &&\n                                                        \"格式不正确\"\n                                                    }\n                                                    fullWidth\n                                                    multiline\n                                                    onChange={(e) => {\n                                                        setThemeConfig({\n                                                            ...themeConfig,\n                                                            [k]: e.target.value,\n                                                        });\n                                                    }}\n                                                    onBlur={(e) => {\n                                                        try {\n                                                            const res = JSON.parse(\n                                                                e.target.value\n                                                            );\n                                                            if (\n                                                                !(\n                                                                    \"palette\" in\n                                                                    res\n                                                                ) ||\n                                                                !(\n                                                                    \"primary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .primary\n                                                                ) ||\n                                                                !(\n                                                                    \"secondary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .secondary\n                                                                )\n                                                            ) {\n                                                                throw e;\n                                                            }\n                                                            setTheme({\n                                                                ...theme,\n                                                                [k]: res,\n                                                            });\n                                                        } catch (e) {\n                                                            setThemeConfigError(\n                                                                {\n                                                                    ...themeConfigError,\n                                                                    [k]: true,\n                                                                }\n                                                            );\n                                                            return;\n                                                        }\n                                                        setThemeConfigError({\n                                                            ...themeConfigError,\n                                                            [k]: false,\n                                                        });\n                                                    }}\n                                                    value={themeConfig[k]}\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <IconButton\n                                                    onClick={() =>\n                                                        deleteTheme(k)\n                                                    }\n                                                >\n                                                    <Delete />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                            <div>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    style={{ marginTop: 8 }}\n                                    onClick={() => setCreate(true)}\n                                >\n                                    新建配色方案\n                                </Button>\n                            </div>\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\n                                <Typography variant=\"body2\">\n                                    完整的配置项可在{\" \"}\n                                    <Link\n                                        href={\n                                            \"https://material-ui.com/zh/customization/default-theme/\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        默认主题 - Material-UI\n                                    </Link>{\" \"}\n                                    查阅。\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认配色\n                                </InputLabel>\n                                <Select\n                                    value={options.defaultTheme}\n                                    onChange={handleChange(\"defaultTheme\")}\n                                >\n                                    {Object.keys(theme).map((k) => (\n                                        <MenuItem key={k} value={k}>\n                                            <div\n                                                className={\n                                                    classes.colorContainer\n                                                }\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .primary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .secondary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好配色时，站点默认使用的配色方案\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        界面\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    个人文件列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.home_view_method}\n                                    onChange={handleChange(\"home_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        小图标\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，个人文件页面列表默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目录分享页列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.share_view_method}\n                                    onChange={handleChange(\"share_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        小图标\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，目录分享页面的默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n\n            <CreateTheme\n                onSubmit={addTheme}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Aria2() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        aria2_rpcurl: \"\",\n        aria2_token: \"\",\n        aria2_temp_path: \"\",\n        aria2_options: \"\",\n        aria2_interval: \"0\",\n        aria2_call_timeout: \"0\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const reload = () => {\n        API.get(\"/admin/reload/aria2\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const test = () => {\n        setLoading(true);\n        API.post(\"/admin/aria2/test\", {\n            server: options.aria2_rpcurl,\n            token: options.aria2_token,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"连接成功，Aria2 版本为：\" + response.data,\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Aria2\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\n                                <Typography variant=\"body2\">\n                                    Cloudreve 的离线下载功能由{\" \"}\n                                    <Link\n                                        href={\"https://aria2.github.io/\"}\n                                        target={\"_blank\"}\n                                    >\n                                        Aria2\n                                    </Link>{\" \"}\n                                    驱动。如需使用，请在同一设备上以和运行\n                                    Cloudreve 相同的用户身份启动 Aria2， 并在\n                                    Aria2 的配置文件中开启 RPC\n                                    服务。更多信息及指引请参考文档的{\" \"}\n                                    <Link\n                                        href={\n                                            \"https://docs.cloudreve.org/use/aria2\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        离线下载\n                                    </Link>{\" \"}\n                                    章节。\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 服务器地址\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.aria2_rpcurl}\n                                    onChange={handleChange(\"aria2_rpcurl\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    包含端口的完整 RPC\n                                    服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用\n                                    Aria2 服务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC Secret\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_token}\n                                    onChange={handleChange(\"aria2_token\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    RPC 授权令牌，与 Aria2\n                                    配置文件中保持一致，未设置请留空。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时下载目录\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_temp_path}\n                                    onChange={handleChange(\"aria2_temp_path\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    离线下载临时下载目录的\n                                    <strong>绝对路径</strong>，Cloudreve\n                                    进程需要此目录的读、写、执行权限。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态刷新间隔 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={options.aria2_interval}\n                                    onChange={handleChange(\"aria2_interval\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 调用超时 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={options.aria2_call_timeout}\n                                    onChange={handleChange(\n                                        \"aria2_call_timeout\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    调用 RPC 服务时最长等待时间\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    全局任务参数\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    required\n                                    value={options.aria2_options}\n                                    onChange={handleChange(\"aria2_options\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    创建下载任务时携带的额外设置参数，以 JSON\n                                    编码后的格式书写，您可也可以将这些设置写在\n                                    Aria2 配置文件里，可用参数请查阅官方文档\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    <Button\n                        style={{ marginLeft: 8 }}\n                        disabled={loading}\n                        onClick={() => test()}\n                        variant={\"outlined\"}\n                        color={\"secondary\"}\n                    >\n                        测试连接\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function ImageSetting() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        gravatar_server: \"\",\n        avatar_path: \"\",\n        avatar_size: \"\",\n        avatar_size_l: \"\",\n        avatar_size_m: \"\",\n        avatar_size_s: \"\",\n        thumb_width: \"\",\n        thumb_height: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        头像\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Gravatar 服务器\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.gravatar_server}\n                                    onChange={handleChange(\"gravatar_server\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Gravatar 服务器地址，可选择使用国内镜像\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    头像存储路径\n                                </InputLabel>\n                                <Input\n                                    value={options.avatar_path}\n                                    onChange={handleChange(\"avatar_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户上传自定义头像的存储路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={options.avatar_size}\n                                    onChange={handleChange(\"avatar_size\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"头像文件大小限制\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可上传头像文件的最大大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_s}\n                                    onChange={handleChange(\"avatar_size_s\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_m}\n                                    onChange={handleChange(\"avatar_size_m\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_l}\n                                    onChange={handleChange(\"avatar_size_l\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        缩略图\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_width}\n                                    onChange={handleChange(\"thumb_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_height}\n                                    onChange={handleChange(\"thumb_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        display: \"flex\",\n    },\n    cover: {\n        width: 100,\n        height: 60,\n    },\n    card: {},\n    content: {\n        flex: \"1 0 auto\",\n    },\n    bg: {\n        backgroundColor: theme.palette.background.default,\n        padding: \"24px 24px\",\n    },\n    dialogFooter: {\n        justifyContent: \"space-between\",\n    },\n}));\n\nconst policies = [\n    {\n        name: \"本机存储\",\n        img: \"local.png\",\n        path: \"/admin/policy/add/local\",\n    },\n    {\n        name: \"从机存储\",\n        img: \"remote.png\",\n        path: \"/admin/policy/add/remote\",\n    },\n    {\n        name: \"七牛\",\n        img: \"qiniu.png\",\n        path: \"/admin/policy/add/qiniu\",\n    },\n    {\n        name: \"阿里云 OSS\",\n        img: \"oss.png\",\n        path: \"/admin/policy/add/oss\",\n    },\n    {\n        name: \"又拍云\",\n        img: \"upyun.png\",\n        path: \"/admin/policy/add/upyun\",\n    },\n    {\n        name: \"腾讯云 COS\",\n        img: \"cos.png\",\n        path: \"/admin/policy/add/cos\",\n    },\n    {\n        name: \"OneDrive\",\n        img: \"onedrive.png\",\n        path: \"/admin/policy/add/onedrive\",\n    },\n    {\n        name: \"Amazon S3\",\n        img: \"s3.png\",\n        path: \"/admin/policy/add/s3\",\n    },\n];\n\nexport default function AddPolicy({ open, onClose }) {\n    const classes = useStyles();\n\n    const location = useHistory();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"sm\"}\n            fullWidth\n        >\n            <DialogTitle id=\"alert-dialog-title\">选择存储方式</DialogTitle>\n            <DialogContent dividers className={classes.bg}>\n                <Grid container spacing={2}>\n                    {policies.map((v) => (\n                        <Grid item sm={12} md={6} key={v.path}>\n                            <Card className={classes.card}>\n                                <CardActionArea\n                                    onClick={() => {\n                                        location.push(v.path);\n                                        onClose();\n                                    }}\n                                    className={classes.cardContainer}\n                                >\n                                    <CardMedia\n                                        className={classes.cover}\n                                        image={\"/static/img/\" + v.img}\n                                    />\n                                    <CardContent className={classes.content}>\n                                        <Typography\n                                            variant=\"subtitle1\"\n                                            color=\"textSecondary\"\n                                        >\n                                            {v.name}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions className={classes.dialogFooter}>\n                {/* <Button\n                    onClick={() =>\n                        window.open(\n                            \"https://docs.cloudreve.org/use/policy/compare\"\n                        )\n                    }\n                    color=\"primary\"\n                >\n                    存储策略对比\n                </Button> */}\n                <Button onClick={onClose} color=\"primary\">\n                    取消\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport { policyTypeMap } from \"../../../config\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"类型\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属文件数\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        label: \"数据量\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Policy() {\n    const classes = useStyles();\n    // const [loading, setLoading] = useState(false);\n    // const [tab, setTab] = useState(0);\n    const [policies, setPolicies] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [filter, setFilter] = useState(\"all\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    const loadList = () => {\n        API.post(\"/admin/policy/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n            conditions: filter === \"all\" ? {} : { type: filter },\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, filter]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/policy/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => setAddDialog(true)}\n                    variant={\"contained\"}\n                >\n                    添加存储策略\n                </Button>\n                <div className={classes.headerRight}>\n                    <Select\n                        style={{\n                            marginRight: 8,\n                        }}\n                        value={filter}\n                        onChange={(e) => setFilter(e.target.value)}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"local\"}>本机</MenuItem>\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\n                        <MenuItem value={\"s3\"}>Amazon S3</MenuItem>\n                    </Select>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {policies.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {policyTypeMap[row.Type] !==\n                                            undefined &&\n                                            policyTypeMap[row.Type]}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID][0].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(statics[row.ID][1])}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={(e) => {\n                                                    setEditID(row.ID);\n                                                    handleClick(e);\n                                                }}\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n            <Menu\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\n                    }}\n                >\n                    专家模式编辑\n                </MenuItem>\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\n                    }}\n                >\n                    向导模式编辑\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default function DomainInput({ onChange, value, required, label }) {\n    const [domain, setDomain] = useState(\"\");\n    const [protocol, setProtocol] = useState(\"https://\");\n    const [error, setError] = useState();\n\n    useState(() => {\n        value = value ? value : \"\";\n        if (value.startsWith(\"https://\")) {\n            setDomain(value.replace(\"https://\", \"\"));\n            setProtocol(\"https://\");\n        } else {\n            if (value !== \"\") {\n                setDomain(value.replace(\"http://\", \"\"));\n                setProtocol(\"http://\");\n            }\n        }\n    }, [value]);\n\n    useEffect(() => {\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\n            setError(\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\n            );\n        } else {\n            setError(\"\");\n        }\n    }, [protocol]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                error={error !== \"\"}\n                value={domain}\n                onChange={(e) => {\n                    setDomain(e.target.value);\n                    onChange({\n                        target: {\n                            value: protocol + e.target.value,\n                        },\n                    });\n                }}\n                required={required}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        <Select\n                            value={protocol}\n                            onChange={(e) => {\n                                setProtocol(e.target.value);\n                                onChange({\n                                    target: {\n                                        value: e.target.value + domain,\n                                    },\n                                });\n                            }}\n                        >\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {error !== \"\" && (\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\n            )}\n        </FormControl>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\n\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {isFile ? \"文件名魔法变量\" : \"路径魔法变量\"}\n            </DialogTitle>\n            <DialogContent>\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>魔法变量</TableCell>\n                                <TableCell>描述</TableCell>\n                                <TableCell>示例</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{randomkey16}\"}\n                                </TableCell>\n                                <TableCell>16位随机字符</TableCell>\n                                <TableCell>N6IimT5XZP324ACK</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{randomkey8}\"}\n                                </TableCell>\n                                <TableCell>8位随机字符</TableCell>\n                                <TableCell>gWz78q30</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{timestamp}\"}\n                                </TableCell>\n                                <TableCell>秒级时间戳</TableCell>\n                                <TableCell>1582692933</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{timestamp_nano}\"}\n                                </TableCell>\n                                <TableCell>纳秒级时间戳</TableCell>\n                                <TableCell>1582692933231834600</TableCell>\n                            </TableRow>\n                            {!isSlave && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{uid}\"}\n                                    </TableCell>\n                                    <TableCell>用户ID</TableCell>\n                                    <TableCell>1</TableCell>\n                                </TableRow>\n                            )}\n                            {isFile && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{originname}\"}\n                                    </TableCell>\n                                    <TableCell>原始文件名</TableCell>\n                                    <TableCell>MyPico.mp4</TableCell>\n                                </TableRow>\n                            )}\n                            {!isFile && !isSlave && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{path}\"}\n                                    </TableCell>\n                                    <TableCell>用户上传路径</TableCell>\n                                    <TableCell>/我的文件/学习资料/</TableCell>\n                                </TableRow>\n                            )}\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{date}\"}\n                                </TableCell>\n                                <TableCell>日期</TableCell>\n                                <TableCell>20060102</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{datetime}\"}\n                                </TableCell>\n                                <TableCell>日期时间</TableCell>\n                                <TableCell>20060102150405</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{year}\"}\n                                </TableCell>\n                                <TableCell>年份</TableCell>\n                                <TableCell>2006</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{month}\"}\n                                </TableCell>\n                                <TableCell>月份</TableCell>\n                                <TableCell>01</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{day}\"}\n                                </TableCell>\n                                <TableCell>日</TableCell>\n                                <TableCell>02</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{hour}\"}\n                                </TableCell>\n                                <TableCell>小时</TableCell>\n                                <TableCell>15</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{minute}\"}\n                                </TableCell>\n                                <TableCell>分钟</TableCell>\n                                <TableCell>04</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{second}\"}\n                                </TableCell>\n                                <TableCell>秒</TableCell>\n                                <TableCell>05</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Select from \"@material-ui/core/Select\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"云函数回调\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function COSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"cos\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [region, setRegion] = useState(\"ap-chengdu\");\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = policy.Server;\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const creatCallback = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/scf\", {\n            id: policyID,\n            region: region,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\n                setActiveStep(6);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cos5\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    COS 管理控制台\n                                </Link>\n                                创建存储桶。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建存储桶的基础配置页面，将\n                                <code>空间名称</code>填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        空间名称\n                                    </InputLabel>\n                                    <Input\n                                        inputProps={{\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\n                                            title:\n                                                \"空间名格式不正确, 举例：ccc-1252109809\",\n                                        }}\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的访问权限类型，推荐选择\n                                <code>私有读写</code>\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有读写\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读私有写\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的基础配置，填写\n                                <code>基本信息</code>栏目下 给出的{\" \"}\n                                <code>访问域名</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.Server}\n                                    onChange={handleChange(\"Server\")}\n                                    required\n                                    label={\"访问域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://console.cloud.tencent.com/cdn/access/guid\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        腾讯云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS\n                                    存储桶。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在腾讯云\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cam/capi\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    访问密钥\n                                </Link>\n                                页面获取\n                                一对访问密钥，并填写在下方。请确保这对密钥拥有\n                                COS 和 SCF 服务的访问权限。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretId\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContental}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 客户端直传需要借助腾讯云的\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/scf/index?rid=16\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    云函数\n                                </Link>\n                                产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\n                                如果是作为公有使用，请务必创建回调云函数。\n                                <br />\n                                <br />\n                            </Typography>\n                            <Typography variant={\"body2\"}>\n                                Cloudreve 可以尝试帮你自动创建回调云函数，请选择\n                                COS 存储桶 所在地域后继续。\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶所在地区\n                                    </InputLabel>\n                                    <Select\n                                        value={region}\n                                        onChange={(e) =>\n                                            setRegion(e.target.value)\n                                        }\n                                        required\n                                    >\n                                        <MenuItem value={\"ap-beijing\"}>\n                                            华北地区(北京)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-chengdu\"}>\n                                            西南地区(成都)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou\"}>\n                                            华南地区(广州)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou-open\"}>\n                                            华南地区(广州Open)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-hongkong\"}>\n                                            港澳台地区(中国香港)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-mumbai\"}>\n                                            亚太南部(孟买)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-shanghai\"}>\n                                            华东地区(上海)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-singapore\"}>\n                                            亚太东南(新加坡)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-siliconvalley\"}>\n                                            美国西部(硅谷)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-toronto\"}>\n                                            北美地区(多伦多)\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => creatCallback()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我创建\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 6 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function LocalGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"local\",\n                  Name: \"\",\n                  DirNameRule: \"uploads/{uid}/{path}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const checkPathSetting = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/path\", {\n            path: policy.DirNameRule,\n        })\n            .then(() => {\n                setActiveStep(1);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={checkPathSetting}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport AlertDialog from \"../../Dialogs/Alert\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"应用授权\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"账号授权\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function OneDriveGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\n        props.policy && props.policy.OptionsSerialized.od_proxy\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\n            : false\n    );\n    const [useSharePoint, setUseSharePoint] = useState(\n        props.policy && props.policy.OptionsSerialized.od_driver\n            ? props.policy.OptionsSerialized.od_driver !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"onedrive\",\n                  Name: \"\",\n                  BucketName: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"https://graph.microsoft.com/v1.0\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      od_redirect: \"\",\n                      od_proxy: \"\",\n                      od_driver: \"\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [httpsAlert, setHttpsAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [\"siteURL\"],\n        })\n            .then((response) => {\n                if (!response.data.siteURL.startsWith(\"https://\")) {\n                    setHttpsAlert(true);\n                }\n                if (policy.OptionsSerialized.od_redirect === \"\") {\n                    setPolicy({\n                        ...policy,\n                        OptionsSerialized: {\n                            ...policy.OptionsSerialized,\n                            od_redirect: new URL(\n                                \"/api/v3/callback/onedrive/auth\",\n                                response.data.siteURL\n                            ).toString(),\n                        },\n                    });\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const statOAuth = () => {\n        setLoading(true);\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\")\n            .then((response) => {\n                window.location.href = response.data;\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // baseURL处理\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\n            policyCopy.BaseURL =\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\n        } else {\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\n        }\n\n        if (!useCDN) {\n            policyCopy.OptionsSerialized.od_proxy = \"\";\n        }\n\n        if (!useSharePoint) {\n            policyCopy.OptionsSerialized.od_driver = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={httpsAlert}\n                onClose={() => setHttpsAlert(false)}\n                title={\"警告\"}\n                msg={\n                    \"您必须启用 HTTPS 才能使用 OneDrive/SharePoint 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} OneDrive/SharePoint 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (国际版账号)\n                                </Link>{\" \"}\n                                或者{\" \"}\n                                <Link\n                                    href={\n                                        \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (世纪互联账号)\n                                </Link>\n                                并登录，登录后进入\n                                <code>Azure Active Directory</code>管理面板。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入左侧 <code>应用注册</code> 菜单，并点击{\" \"}\n                                <code>新注册</code> 按钮。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写应用注册表单。其中，名称可任取；\n                                <code>受支持的帐户类型</code> 选择为\n                                <code>\n                                    任何组织目录(任何 Azure AD 目录 -\n                                    多租户)中的帐户\n                                </code>\n                                ；<code>重定向 URI (可选)</code>\n                                请选择<code>Web</code>，并填写\n                                <code>\n                                    {policy.OptionsSerialized.od_redirect}\n                                </code>\n                                ； 其他保持默认即可\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                创建完成后进入应用管理的<code>概览</code>\n                                页面，复制<code>应用程序(客户端) ID</code>\n                                并填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        应用程序(客户端) ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入应用管理页面左侧的<code>证书和密码</code>\n                                菜单，点击\n                                <code>新建客户端密码</code>\n                                按钮，<code>截止期限</code>选择为\n                                <code>从不</code>\n                                。创建完成后将客户端密码的值填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        客户端密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择您的 Microsoft 365 账号类型：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\n                                                \"https://graph.microsoft.com/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"国际版\"\n                                        />\n                                        <FormControlLabel\n                                            value={\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"世纪互联版\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>7</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否将文件存放在 SharePoint 中？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useSharePoint.toString()}\n                                        onChange={(e) => {\n                                            setUseSharePoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"存到指定 SharePoint 中\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"存到账号默认 OneDrive 驱动器中\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useSharePoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SharePoint 站点地址\n                                        </InputLabel>\n                                        <Input\n                                            placeholder={\n                                                \"https://example.sharepoint.com/sites/demo\"\n                                            }\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                            required={useSharePoint}\n                                            label={\"SharePoint 站点地址\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>8</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要在文件下载时替换为使用自建的反代服务器？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN.toString()}\n                                        onChange={(e) => {\n                                            setUseCDN(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useCDN}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <DomainInput\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                            required={useCDN}\n                                            label={\"反代服务器地址\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>9</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}\n                                ，但是你需要点击下方按钮，并使用 OneDrive\n                                登录授权以完成初始化后才能使用。\n                                日后你可以在存储策略列表页面重新进行授权。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={statOAuth}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    转到授权页面\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}></div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已添加！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function OSSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"oss\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      server_side_endpoint: \"\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        if (!useLanEndpoint) {\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://oss.console.aliyun.com/overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    OSS 管理控制台\n                                </Link>\n                                创建 Bucket。注意：创建空间类型只能选择\n                                <code>标准存储</code>或<code>低频访问</code>\n                                ，暂不支持<code>归档存储</code>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您创建 Bucket 时指定的\n                                <code>Bucket 名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Bucket 名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的概览页面，填写\n                                <code>访问域名</code>栏目下\n                                <code>外网访问</code> 一行中间的{\" \"}\n                                <code>EndPoint（地域节点）</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        inputProps={{\n                                            pattern:\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                            title:\n                                                \"格式不合法，只需输入域名部分即可\",\n                                        }}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                如果您的 Cloudreve\n                                部署在阿里云计算服务中，并且与 OSS\n                                处在同一可用区下，您可以额外指定使用内网\n                                EndPoint\n                                以节省流量开始。是否要在服务端发送请求时使用 OSS\n                                内网 EndPoint？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useLanEndpoint.toString()}\n                                        onChange={(e) => {\n                                            setUseLanEndpoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useLanEndpoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            内网 EndPoint\n                                        </InputLabel>\n                                        <Input\n                                            required={useLanEndpoint}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                            inputProps={{\n                                                pattern:\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                                title:\n                                                    \"格式不合法，只需输入域名部分即可\",\n                                            }}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>7</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://cdn.console.aliyun.com/domain/list\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        阿里云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS\n                                    Bucket。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在阿里云\n                                <Link\n                                    href={\n                                        \"https://usercenter.console.aliyun.com/#/manage/ak\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    安全信息管理\n                                </Link>\n                                页面获取 用户 AccessKey，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Access Key Secret\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(8, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    // const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"qiniu\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      mimetype: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 七牛 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用七牛存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.qiniu.com/create\"}\n                                    target={\"_blank\"}\n                                >\n                                    七牛控制面板\n                                </Link>\n                                创建对象存储资源。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储空间名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公有\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写您为存储空间绑定的 CDN 加速域名。\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"CDN 加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在七牛控制面板进入 个人中心 -\n                                密钥管理，在下方填写获得到的 AK、SK。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件 MimeType？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .mimetype === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"image/*\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {getNumber(4, [\n                                        policy.MaxSize !== \"0\",\n                                        policy.OptionsSerialized.file_type !==\n                                            \"\",\n                                    ])}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\n                                    隔开。七牛服务器会侦测文件内容以判断\n                                    MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            MimeType 列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport { randomStr } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontSize: \"14px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储端配置\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"remote\",\n                  Name: \"\",\n                  Server: \"https://example.com:5212\",\n                  SecretKey: randomStr(64),\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: policy.Server,\n            secret: policy.SecretKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}从机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                        从机存储策略允许你使用同样运行了 Cloudreve\n                        的服务器作为存储端， 用户上传下载流量通过 HTTP 直传。\n                    </Alert>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                将和主站相同版本的 Cloudreve\n                                程序拷贝至要作为从机的服务器上。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                                可将您的密钥填入下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机密钥\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            minlength: 64,\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                修改从机配置文件。\n                                <br />\n                                在从机端 Cloudreve 的同级目录下新建\n                                <code>conf.ini</code>\n                                文件，填入从机配置，启动/重启从机端 Cloudreve。\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                            </Typography>\n                            <pre>\n                                [System]\n                                <br />\n                                Mode = slave\n                                <br />\n                                Listen = :5212\n                                <br />\n                                <br />\n                                [Slave]\n                                <br />\n                                Secret = {policy.SecretKey}\n                                <br />\n                                <br />\n                                [CORS]\n                                <br />\n                                AllowOrigins = *<br />\n                                AllowMethods = OPTIONS,GET,POST\n                                <br />\n                                AllowHeaders = *<br />\n                            </pre>\n                            <Typography variant={\"body2\"}>\n                                从机端配置文件格式大致与主站端相同，区别在于：\n                                <ul>\n                                    <li>\n                                        <code>System</code>\n                                        分区下的\n                                        <code>mode</code>\n                                        字段必须更改为<code>slave</code>\n                                    </li>\n                                    <li>\n                                        必须指定<code>Slave</code>分区下的\n                                        <code>Secret</code>\n                                        字段，其值为第二步里填写或生成的密钥。\n                                    </li>\n                                    <li>\n                                        必须启动跨域配置，即<code>CORS</code>\n                                        字段的内容，\n                                        具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过\n                                        Web 端向从机上传文件。\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写从机地址。\n                                <br />\n                                如果主站启用了\n                                HTTPS，从机也需要启用，并在下方填入 HTTPS\n                                协议的地址。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机地址\n                                    </InputLabel>\n                                    <Input\n                                        fullWidth\n                                        required\n                                        type={\"url\"}\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={() => testSlave()}\n                                    variant={\"outlined\"}\n                                    color={\"primary\"}\n                                >\n                                    测试从机通信\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function UpyunGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"upyun\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"false\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      token: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用又拍云存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.upyun.com/services/create/file/\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    又拍云面板\n                                </Link>\n                                创建云存储服务。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写所创建的服务名称：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        服务名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用\n                                HTTPS：\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。\n                                <br />\n                                前往所创建云存储服务的 功能配置 面板，转到\n                                访问配置 选项卡，开启 Token 防盗链并设定密码。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"已开启 Token 防盗链\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"未开启 Token 防盗链\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsPrivate === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    填写您所设置的 Token 防盗链 密钥\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Token 防盗链 密钥\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                            required={\n                                                policy.IsPrivate === \"true\"\n                                            }\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"path\");\n                                    }}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setMagicVar(\"file\");\n                                    }}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"开启 Token 防盗链后无法使用直链功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AlertDialog from \"../../Dialogs/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nconst regions = {\n    \"us-east-2\": \"US East (Ohio)\",\n    \"us-east-1\": \"US East (N. Virginia)\",\n    \"us-west-1\": \"US West (N. California)\",\n    \"us-west-2\": \"US West (Oregon)\",\n    \"af-south-1\": \"Africa (Cape Town)\",\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\n    \"ca-central-1\": \"Canada (Central)\",\n    \"cn-north-1\": \"China (Beijing)\",\n    \"cn-northwest-1\": \"China (Ningxia)\",\n    \"eu-central-1\": \"Europe (Frankfurt)\",\n    \"eu-west-1\": \"Europe (Ireland)\",\n    \"eu-west-2\": \"Europe (London)\",\n    \"eu-south-1\": \"Europe (Milan)\",\n    \"eu-west-3\": \"Europe (Paris)\",\n    \"eu-north-1\": \"Europe (Stockholm)\",\n    \"me-south-1\": \"Middle East (Bahrain)\",\n    \"sa-east-1\": \"South America (São Paulo)\",\n};\n\nexport default function S3Guide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(true);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"s3\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      region: \"us-east-2\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={alertOpen}\n                onClose={() => setAlertOpen(false)}\n                title={\"警告\"}\n                msg={\n                    \"S3 类型存储策略目前仅可用于自己使用，或者是给受信任的用户组使用。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} Amazon S3 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                Cloudreve 主站需要启用 CORS 支持，具体步骤如下：\n                                <br />\n                                修改 Cloudreve 配置文件，新增以下 CORS\n                                配置项，保存并重启 Cloudreve。\n                                <pre>\n                                    [CORS]\n                                    <br />\n                                    AllowOrigins = *<br />\n                                    AllowMethods = OPTIONS,GET,POST\n                                    <br />\n                                    AllowHeaders = *<br />\n                                </pre>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往 AWS S3\n                                控制台创建存储桶，在下方填写您创建存储桶时指定的\n                                <code>存储桶名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的公共访问权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"阻止全部公共访问权限\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许公共读取\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                (可选) 指定存储桶的 EndPoint（地域节点），\n                                填写为完整的 URL 格式，比如{\" \"}\n                                <code>https://bucket.region.example.com</code>。\n                                留空则将使用系统生成的默认接入点。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择存储桶所在的区域，或者手动输入区域代码\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <Autocomplete\n                                        options={Object.keys(regions)}\n                                        freeSolo\n                                        value={policy.OptionsSerialized.region}\n                                        onInputChange={(_, value) =>\n                                            handleOptionChange(\"region\")({\n                                                target: { value: value },\n                                            })\n                                        }\n                                        renderOption={(option) => (\n                                            <React.Fragment>\n                                                {regions[option]}\n                                            </React.Fragment>\n                                        )}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                style={{ width: \"100%\" }}\n                                                {...params}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用 CDN 加速访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    CDN 加速域名\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                获取访问密钥，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                S3 Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function AddPolicyParent() {\n    const classes = useStyles();\n\n    const { type } = useParams();\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {type === \"local\" && <LocalGuide />}\n                {type === \"remote\" && <RemoteGuide />}\n                {type === \"qiniu\" && <QiniuGuide />}\n                {type === \"oss\" && <OSSGuide />}\n                {type === \"upyun\" && <UpyunGuide />}\n                {type === \"cos\" && <COSGuide />}\n                {type === \"onedrive\" && <OneDriveGuide />}\n                {type === \"s3\" && <S3Guide />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport API from \"../../../../middleware/Api\";\n\nexport default function EditPro(props) {\n    const [, setLoading] = useState(false);\n    const [policy, setPolicy] = useState(props.policy);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\n            <TableContainer>\n                <form onSubmit={submitPolicy}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>设置项</TableCell>\n                                <TableCell>值</TableCell>\n                                <TableCell>描述</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    ID\n                                </TableCell>\n                                <TableCell>{policy.ID}</TableCell>\n                                <TableCell>存储策略编号</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    类型\n                                </TableCell>\n                                <TableCell>{policy.Type}</TableCell>\n                                <TableCell>存储策略类型</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    名称\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            required\n                                            value={policy.Name}\n                                            onChange={handleChange(\"Name\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储策名称</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Server\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.Server}\n                                            onChange={handleChange(\"Server\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储端 Endpoint</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    BucketName\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BucketName}\n                                            onChange={handleChange(\n                                                \"BucketName\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储桶标识</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    私有空间\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsPrivate}\n                                            onChange={handleChange(\"IsPrivate\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否为私有空间</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    文件资源根URL\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    预览/获取文件外链时生成URL的前缀\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    AccessKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.AccessKey}\n                                            onChange={handleChange(\"AccessKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>AccessKey / 刷新Token</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    SecretKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.SecretKey}\n                                            onChange={handleChange(\"SecretKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>SecretKey</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    最大单文件尺寸 (Bytes)\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min: 0,\n                                                step: 1,\n                                            }}\n                                            value={policy.MaxSize}\n                                            onChange={handleChange(\"MaxSize\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    最大可上传的文件尺寸，填写为0表示不限制\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    自动重命名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.AutoRename}\n                                            onChange={handleChange(\n                                                \"AutoRename\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否根据规则对上传物理文件重命名\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储路径\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.DirNameRule}\n                                            onChange={handleChange(\n                                                \"DirNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储路径</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储文件名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储文件名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许获取外链\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsOriginLinkEnable}\n                                            onChange={handleChange(\n                                                \"IsOriginLinkEnable\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    又拍云防盗链 Token\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许文件扩展名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>留空表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许的 MimeType\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对七牛存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 重定向地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_redirect\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_redirect\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>一般添加后无需修改</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 反代服务器地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 OneDrive 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive/SharePoint 驱动器资源标识\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 OneDrive\n                                    存储策略有效，留空则使用用户的默认 OneDrive\n                                    驱动器\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Amazon S3 Region\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.region\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"region\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 Amazon S3 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    内网 EndPoint\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对 OSS 存储策略有效</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Button\n                        type={\"submit\"}\n                        color={\"primary\"}\n                        variant={\"contained\"}\n                        style={{ margin: 8 }}\n                    >\n                        保存更改\n                    </Button>\n                </form>\n            </TableContainer>\n        </div>\n    );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport EditPro from \"./Guid/EditPro\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function EditPolicyPreload() {\n    const classes = useStyles();\n    const [type, setType] = useState(\"\");\n    const [policy, setPolicy] = useState({});\n\n    const { mode, id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setType(\"\");\n        API.get(\"/admin/policy/\" + id)\n            .then((response) => {\n                response.data.IsOriginLinkEnable = response.data\n                    .IsOriginLinkEnable\n                    ? \"true\"\n                    : \"false\";\n                response.data.AutoRename = response.data.AutoRename\n                    ? \"true\"\n                    : \"false\";\n                response.data.MaxSize = response.data.MaxSize.toString();\n                response.data.IsPrivate = response.data.IsPrivate\n                    ? \"true\"\n                    : \"false\";\n                response.data.OptionsSerialized.file_type = response.data\n                    .OptionsSerialized.file_type\n                    ? response.data.OptionsSerialized.file_type.join(\",\")\n                    : \"\";\n                setPolicy(response.data);\n                setType(response.data.Type);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {mode === \"guide\" && (\n                    <>\n                        {type === \"local\" && <LocalGuide policy={policy} />}\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\n                        {type === \"cos\" && <COSGuide policy={policy} />}\n                        {type === \"onedrive\" && (\n                            <OneDriveGuide policy={policy} />\n                        )}\n                        {type === \"s3\" && <S3Guide policy={policy} />}\n                    </>\n                )}\n\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属用户数\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        label: \"最大容量\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Group() {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [policies, setPolicies] = React.useState({});\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/group/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setGroups(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n                setPolicies(response.data.policies);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/group/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/group/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户组\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {groups.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.PolicyList !== null &&\n                                            row.PolicyList.map((pid, key) => {\n                                                let res = \"\";\n                                                if (policies[pid]) {\n                                                    res += policies[pid].Name;\n                                                }\n                                                if (\n                                                    key !==\n                                                    row.PolicyList.length - 1\n                                                ) {\n                                                    res += \" / \";\n                                                }\n                                                return res;\n                                            })}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(row.MaxStorage)}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/group/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\n// function getStyles(name, personName, theme) {\n//     return {\n//         fontWeight:\n//             personName.indexOf(name) === -1\n//                 ? theme.typography.fontWeightRegular\n//                 : theme.typography.fontWeightMedium\n//     };\n// }\n\nexport default function GroupForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [group, setGroup] = useState(\n        props.group\n            ? props.group\n            : {\n                  ID: 0,\n                  Name: \"\",\n                  MaxStorage: \"1073741824\", // 转换类型\n                  ShareEnabled: \"true\", // 转换类型\n                  WebDAVEnabled: \"true\", // 转换类型\n                  SpeedLimit: \"0\", // 转换类型\n                  PolicyList: 1, // 转换类型,至少选择一个\n                  OptionsSerialized: {\n                      // 批量转换类型\n                      share_download: \"true\",\n                      aria2_options: \"{}\", // json decode\n                      compress_size: \"0\",\n                      decompress_size: \"0\",\n                  },\n              }\n    );\n    const [policies, setPolicies] = useState({});\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            [name]: value,\n        });\n    };\n\n    const handleOptionCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: value,\n            },\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const groupCopy = {\n            ...group,\n            OptionsSerialized: { ...group.OptionsSerialized },\n        };\n\n        // 布尔值转换\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n            groupCopy[v] = groupCopy[v] === \"true\";\n        });\n        [\n            \"archive_download\",\n            \"archive_task\",\n            \"one_time_download\",\n            \"share_download\",\n            \"aria2\",\n        ].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] =\n                    groupCopy.OptionsSerialized[v] === \"true\";\n            }\n        });\n\n        // 整型转换\n        [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n            groupCopy[v] = parseInt(groupCopy[v]);\n        });\n        [\"compress_size\", \"decompress_size\"].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] = parseInt(\n                    groupCopy.OptionsSerialized[v]\n                );\n            }\n        });\n        groupCopy.PolicyList = [parseInt(groupCopy.PolicyList)];\n        // JSON转换\n        try {\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\n                groupCopy.OptionsSerialized.aria2_options\n            );\n        } catch (e) {\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/group\", {\n            group: groupCopy,\n        })\n            .then(() => {\n                history.push(\"/admin/group\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户组已\" + (props.group ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {group.ID === 0 && \"新建用户组\"}\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        {group.ID !== 3 && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            用户组名\n                                        </InputLabel>\n                                        <Input\n                                            value={group.Name}\n                                            onChange={handleChange(\"Name\")}\n                                            required\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            用户组的名称\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            存储策略\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-mutiple-chip-label\"\n                                            id=\"demo-mutiple-chip\"\n                                            value={group.PolicyList}\n                                            onChange={handleChange(\n                                                \"PolicyList\"\n                                            )}\n                                            input={\n                                                <Input id=\"select-multiple-chip\" />\n                                            }\n                                        >\n                                            {Object.keys(policies).map(\n                                                (pid) => (\n                                                    <MenuItem\n                                                        key={pid}\n                                                        value={pid}\n                                                    >\n                                                        {policies[pid]}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                        <FormHelperText id=\"component-helper-text\">\n                                            指定用户组的存储策略。\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <SizeInput\n                                            value={group.MaxStorage}\n                                            onChange={handleChange(\n                                                \"MaxStorage\"\n                                            )}\n                                            min={0}\n                                            max={9223372036854775807}\n                                            label={\"初始容量\"}\n                                            required\n                                        />\n                                    </FormControl>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        用户组下的用户初始可用最大容量\n                                    </FormHelperText>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={group.SpeedLimit}\n                                    onChange={handleChange(\"SpeedLimit\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"下载限速\"}\n                                    suffix={\"/s\"}\n                                    required\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                填写为 0 表示不限制。开启限制后，\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\n                            </FormHelperText>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.ShareEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"ShareEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"允许创建分享\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法创建分享链接\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法下载别人创建的文件分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {/* {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.WebDAVEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"WebDAVEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"WebDAV\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法通过 WebDAV\n                                        协议连接至网盘\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )} */}\n\n                        {/* <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .one_time_download ===\n                                                \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"one_time_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"禁止多次下载请求\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\n                                </FormHelperText>\n                            </FormControl>\n                        </div> */}\n\n                        {/* {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .aria2 === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"aria2\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"离线下载\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否允许用户创建离线下载任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )} */}\n\n                        {/* <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Aria2 任务参数\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        value={\n                                            group.OptionsSerialized\n                                                .aria2_options\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_options\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        此用户组创建离线下载任务时额外携带的参数，以\n                                        JSON\n                                        编码后的格式书写，您可也可以将这些设置写在\n                                        Aria2 配置文件里，可用参数请查阅官方文档\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </Collapse>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"打包下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户多选文件打包下载\n                                </FormHelperText>\n                            </FormControl>\n                        </div> */}\n\n                        {/* {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .archive_task === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"archive_task\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"压缩/解压缩 任务\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否用户创建 压缩/解压缩 任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )} */}\n\n                        <Collapse\n                            in={group.OptionsSerialized.archive_task === \"true\"}\n                        >\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .compress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"compress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待压缩文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .decompress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"decompress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待解压文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport GroupForm from \"./GroupForm\";\n\nexport default function EditGroupPreload() {\n    const [group, setGroup] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setGroup({});\n        API.get(\"/admin/group/\" + id)\n            .then((response) => {\n                // 布尔值转换\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\n                });\n                [\n                    \"archive_download\",\n                    \"archive_task\",\n                    \"one_time_download\",\n                    \"share_download\",\n                    \"aria2\",\n                ].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[v] = response.data\n                            .OptionsSerialized[v]\n                            ? \"true\"\n                            : \"false\";\n                    }\n                });\n\n                // 整型转换\n                [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                [\"compress_size\", \"decompress_size\"].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[\n                            v\n                        ] = response.data.OptionsSerialized[v].toString();\n                    }\n                });\n                response.data.PolicyList = response.data.PolicyList[0];\n\n                // JSON转换\n                if (\n                    response.data.OptionsSerialized.aria2_options === undefined\n                ) {\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\n                } else {\n                    try {\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\n                            response.data.OptionsSerialized.aria2_options\n                        );\n                    } catch (e) {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            \"Aria2 设置项格式错误\",\n                            \"warning\"\n                        );\n                        return;\n                    }\n                }\n                setGroup(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        group_id: \"all\",\n        status: \"all\",\n    });\n    const [groups, setGroups] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                nick: keywords,\n                email: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户组\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.group_id}\n                        onChange={handleChange(\"group_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {groups.map((v) => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户状态\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.status}\n                        onChange={handleChange(\"status\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"0\"}>正常</MenuItem>\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 昵称 / 用户名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport UserFilter from \"../Dialogs/UserFilter\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Group() {\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/user/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const block = (id) => {\n        setLoading(true);\n        API.patch(\"/admin/user/ban/\" + id)\n            .then((response) => {\n                setUsers(\n                    users.map((v) => {\n                        if (v.ID === id) {\n                            const newUser = { ...v, Status: response.data };\n                            return newUser;\n                        }\n                        return v;\n                    })\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = users.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <UserFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    style={{ alignSelf: \"center\" }}\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/user/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < users.length\n                                        }\n                                        checked={\n                                            users.length > 0 &&\n                                            selected.length === users.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"nick\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"nick\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        昵称\n                                        {orderBy[0] === \"nick\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 170 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"email\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"email\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        Email\n                                        {orderBy[0] === \"email\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    用户组\n                                </TableCell>\n                                <TableCell style={{ minWidth: 50 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 80 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"storage\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"storage\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        已用空间\n                                        {orderBy[0] === \"storage\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Nick}</TableCell>\n                                    <TableCell>{row.Email}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/group/edit/\" +\n                                                row.Group.ID\n                                            }\n                                        >\n                                            {row.Group.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && (\n                                            <Typography\n                                                style={{\n                                                    color:\n                                                        theme.palette.success\n                                                            .main,\n                                                }}\n                                                variant={\"body2\"}\n                                            >\n                                                正常\n                                            </Typography>\n                                        )}\n                                        {row.Status === 1 && (\n                                            <Typography\n                                                color={\"textSecondary\"}\n                                                variant={\"body2\"}\n                                            >\n                                                未激活\n                                            </Typography>\n                                        )}\n                                        {row.Status === 2 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                被封禁\n                                            </Typography>\n                                        )}\n                                        {row.Status === 3 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                超额封禁\n                                            </Typography>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Storage)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/user/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"封禁/解封\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() => block(row.ID)}\n                                                size={\"small\"}\n                                            >\n                                                <Block />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\nexport default function UserForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState(\n        props.user\n            ? props.user\n            : {\n                  ID: 0,\n                  Email: \"\",\n                  Nick: \"\",\n                  Password: \"\", // 为空时只读\n                  Status: \"0\", // 转换类型\n                  GroupID: \"2\", // 转换类型\n              }\n    );\n    const [groups, setGroups] = useState([]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setUser({\n            ...user,\n            [name]: event.target.value,\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const userCopy = { ...user };\n\n        // 整型转换\n        [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\n            userCopy[v] = parseInt(userCopy[v]);\n        });\n\n        setLoading(true);\n        API.post(\"/admin/user\", {\n            user: userCopy,\n            password: userCopy.Password,\n        })\n            .then(() => {\n                history.push(\"/admin/user\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户已\" + (props.user ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {user.ID === 0 && \"创建用户\"}\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    邮箱\n                                </InputLabel>\n                                <Input\n                                    value={user.Email}\n                                    type={\"email\"}\n                                    onChange={handleChange(\"Email\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    昵称\n                                </InputLabel>\n                                <Input\n                                    value={user.Nick}\n                                    onChange={handleChange(\"Nick\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={user.Password}\n                                    onChange={handleChange(\"Password\")}\n                                    required={user.ID === 0}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {user.ID !== 0 && \"留空表示不修改\"}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={user.GroupID}\n                                    onChange={handleChange(\"GroupID\")}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户所属用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态\n                                </InputLabel>\n                                <Select\n                                    value={user.Status}\n                                    onChange={handleChange(\"Status\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\n                                    <MenuItem value={\"3\"}>\n                                        超额使用被封禁\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport UserForm from \"./UserForm\";\n\nexport default function EditUserPreload() {\n    const [user, setUser] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setUser({});\n        API.get(\"/admin/user/\" + id)\n            .then((response) => {\n                // 整型转换\n                [\"Status\", \"GroupID\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                setUser(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        policy_id: \"all\",\n        user_id: \"\",\n    });\n    const [policies, setPolicies] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        存储策略\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.policy_id}\n                        onChange={handleChange(\"policy_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {policies.map((v) => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport FileFilter from \"../Dialogs/FileFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function File() {\n    const classes = useStyles();\n    const [files, setFiles] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/file/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setFiles(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n                setUsers(response.data.users);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = (force) => () => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: selected, force: force })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = files.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <FileFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/file/import\")}\n                    variant={\"contained\"}\n                    style={{\n                        alignSelf: \"center\",\n                    }}\n                >\n                    从外部导入\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch(false)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"强制删除\">\n                            <IconButton\n                                onClick={deleteBatch(true)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <DeleteForever />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < files.length\n                                        }\n                                        checked={\n                                            files.length > 0 &&\n                                            selected.length === files.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 250 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        文件名\n                                        {orderBy[0] === \"name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 70 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    上传者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    上传于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {files.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/api/v3/admin/file/preview/\" +\n                                                row.ID\n                                            }\n                                        >\n                                            {row.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Size)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\n\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        is_dir: \"all\",\n        user_id: \"\",\n    });\n    const [keywords, setKeywords] = useState(\"\");\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                source_name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        源文件类型\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.is_dir}\n                        onChange={handleChange(\"is_dir\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"1\"}>目录</MenuItem>\n                        <MenuItem value={\"0\"}>文件</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete, FilterList } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Share() {\n    const classes = useStyles();\n    const [shares, setShares] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [ids, setIds] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const loadList = () => {\n        API.post(\"/admin/share/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setIds(response.data.ids);\n                setShares(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = shares.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < shares.length\n                                        }\n                                        checked={\n                                            shares.length > 0 &&\n                                            selected.length === shares.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 200 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"source_name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"source_name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        对象名\n                                        {orderBy[0] === \"source_name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"views\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"views\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        浏览\n                                        {orderBy[0] === \"views\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"downloads\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"downloads\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        下载\n                                        {orderBy[0] === \"downloads\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    自动过期\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    分享于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {shares.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/s/\" +\n                                                ids[row.ID] +\n                                                (row.Password === \"\"\n                                                    ? \"\"\n                                                    : \"?password=\" +\n                                                      row.Password)\n                                            }\n                                        >\n                                            {row.SourceName}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Views}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Downloads}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.RemainDownloads > -1 &&\n                                            row.RemainDownloads + \" 次下载后\"}\n                                        {row.RemainDownloads === -1 && \"无\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport { sizeToString } from \"../../../utils\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Download() {\n    const classes = useStyles();\n    const [downloads, setDownloads] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/download/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setDownloads(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = downloads.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < downloads.length\n                                        }\n                                        checked={\n                                            downloads.length > 0 &&\n                                            selected.length === downloads.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    源地址\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 150 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"total_size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"total_size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"total_size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {downloads.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Source}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"就绪\"}\n                                        {row.Status === 1 && \"下载中\"}\n                                        {row.Status === 2 && \"暂停中\"}\n                                        {row.Status === 3 && \"出错\"}\n                                        {row.Status === 4 && \"完成\"}\n                                        {row.Status === 5 && \"取消/停止\"}\n                                        {row.Status === 6 && \"未知\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.TotalSize)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Delete } from \"@material-ui/icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\nimport API from \"../../../middleware/Api\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Task() {\n    const classes = useStyles();\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/task/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setTasks(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = tasks.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < tasks.length\n                                        }\n                                        checked={\n                                            tasks.length > 0 &&\n                                            selected.length === tasks.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    最后进度\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    错误信息\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {getTaskType(row.Type)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskStatus(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskProgress(\n                                            row.Type,\n                                            row.Progress\n                                        )}\n                                    </TableCell>\n                                    <TableCell className={classes.noWrap}>\n                                        {getError(row.Error)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { Dialog } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fade from \"@material-ui/core/Fade\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\nimport PathSelector from \"../../FileManager/PathSelector\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    userSelect: {\n        width: 400,\n        borderRadius: 0,\n    },\n}));\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value]);\n\n    return debouncedValue;\n}\n\nexport default function Import() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        policy: 1,\n        userInput: \"\",\n        src: \"\",\n        dst: \"\",\n        recursive: true,\n    });\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [policies, setPolicies] = useState({});\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectRemote, setSelectRemote] = useState(false);\n    const [selectLocal, setSelectLocal] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.checked,\n        });\n    };\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (user === null) {\n            ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.post(\"/admin/task/import\", {\n            uid: user.ID,\n            policy_id: parseInt(options.policy),\n            src: options.src,\n            dst: options.dst,\n            recursive: options.recursive,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/admin/file\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"导入任务已创建，您可以在“持久任务”中查看执行情况\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\n\n    useEffect(() => {\n        if (debouncedSearchTerm !== \"\") {\n            API.post(\"/admin/user/list\", {\n                page: 1,\n                page_size: 10000,\n                order_by: \"id asc\",\n                searches: {\n                    nick: debouncedSearchTerm,\n                    email: debouncedSearchTerm,\n                },\n            })\n                .then((response) => {\n                    setUsers(response.data.items);\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                });\n        }\n    }, [debouncedSearchTerm]);\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const selectUser = (u) => {\n        setOptions({\n            ...options,\n            userInput: \"\",\n        });\n        setUser(u);\n    };\n\n    const setMoveTarget = (setter) => (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setter(path === \"//\" ? \"/\" : path);\n    };\n\n    const openPathSelector = (isSrcSelect) => {\n        if (isSrcSelect) {\n            if (\n                !policies[options.policy] ||\n                policies[options.policy].Type === \"local\" ||\n                policies[options.policy].Type === \"remote\"\n            ) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"选择的存储策略只支持手动输入路径\",\n                    \"warning\"\n                );\n                return;\n            }\n            setSelectRemote(true);\n        } else {\n            if (user === null) {\n                ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n                return;\n            }\n            setSelectLocal(true);\n        }\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={selectRemote}\n                onClose={() => setSelectRemote(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\"/admin/file/folders/policy/\" + options.policy}\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            src: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectRemote(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={selectLocal}\n                onClose={() => setSelectLocal(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\n                        \"/admin/file/folders/user/\" +\n                        (user === null ? 0 : user.ID)\n                    }\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            dst: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectLocal(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        导入外部目录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                您可以将存储策略中已有文件、目录结构导入到\n                                Cloudreve\n                                中，导入操作不会额外占用物理存储空间，但仍会正常扣除用户已用容量空间，空间不足时将停止导入。\n                            </Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    存储策略\n                                </InputLabel>\n                                <Select\n                                    labelId=\"demo-mutiple-chip-label\"\n                                    id=\"demo-mutiple-chip\"\n                                    value={options.policy}\n                                    onChange={handleChange(\"policy\")}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                >\n                                    {Object.keys(policies).map((pid) => (\n                                        <MenuItem key={pid} value={pid}>\n                                            {policies[pid].Name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要导入文件目前存储所在的存储策略\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目标用户\n                                </InputLabel>\n                                <Input\n                                    value={options.userInput}\n                                    onChange={(e) => {\n                                        handleChange(\"userInput\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    startAdornment={\n                                        user !== null && (\n                                            <InputAdornment position=\"start\">\n                                                <Chip\n                                                    size=\"small\"\n                                                    onDelete={() => {\n                                                        setUser(null);\n                                                    }}\n                                                    label={user.Nick}\n                                                />\n                                            </InputAdornment>\n                                        )\n                                    }\n                                    disabled={user !== null}\n                                />\n                                <Popper\n                                    open={\n                                        options.userInput !== \"\" &&\n                                        users.length > 0\n                                    }\n                                    anchorEl={anchorEl}\n                                    placement={\"bottom\"}\n                                    transition\n                                >\n                                    {({ TransitionProps }) => (\n                                        <Fade\n                                            {...TransitionProps}\n                                            timeout={350}\n                                        >\n                                            <Paper\n                                                className={classes.userSelect}\n                                            >\n                                                {users.map((u) => (\n                                                    <MenuItem\n                                                        key={u.Email}\n                                                        onClick={() =>\n                                                            selectUser(u)\n                                                        }\n                                                    >\n                                                        {u.Nick}{\" \"}\n                                                        {\"<\" + u.Email + \">\"}\n                                                    </MenuItem>\n                                                ))}\n                                            </Paper>\n                                        </Fade>\n                                    )}\n                                </Popper>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要将文件导入到哪个用户的文件系统中，可通过昵称、邮箱搜索用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    原始目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.src}\n                                    onChange={(e) => {\n                                        handleChange(\"src\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(true)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要导入的目录在存储端的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目的目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.dst}\n                                    onChange={(e) => {\n                                        handleChange(\"dst\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(false)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要将目录导入到用户文件系统中的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.recursive}\n                                            onChange={handleCheckChange(\n                                                \"recursive\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"递归导入子目录\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否将目录下的所有子目录递归导入\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        创建导入任务\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Captcha() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        captcha_type: \"normal\",\n        captcha_height: \"1\",\n        captcha_width: \"1\",\n        captcha_mode: \"3\",\n        captcha_CaptchaLen: \"\",\n        captcha_ReCaptchaKey: \"\",\n        captcha_ReCaptchaSecret: \"\",\n        captcha_TCaptcha_CaptchaAppId: \"\",\n        captcha_TCaptcha_AppSecretKey: \"\",\n        captcha_TCaptcha_SecretId: \"\",\n        captcha_TCaptcha_SecretKey: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        验证码\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    验证码类型\n                                </InputLabel>\n                                <Select\n                                    value={options.captcha_type}\n                                    onChange={handleChange(\"captcha_type\")}\n                                    required\n                                >\n                                    <MenuItem value={\"normal\"}>普通</MenuItem>\n                                    <MenuItem value={\"recaptcha\"}>\n                                        reCAPTCHA V2\n                                    </MenuItem>\n                                    <MenuItem value={\"tcaptcha\"}>\n                                        腾讯云验证码\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    验证码类型\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                {options.captcha_type === \"normal\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            普通验证码\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        宽度\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_width}\n                                        onChange={handleChange(\"captcha_width\")}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        高度\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_height}\n                                        onChange={handleChange(\n                                            \"captcha_height\"\n                                        )}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        模式\n                                    </InputLabel>\n                                    <Select\n                                        value={options.captcha_mode}\n                                        onChange={handleChange(\"captcha_mode\")}\n                                        required\n                                    >\n                                        <MenuItem value={\"0\"}>数字</MenuItem>\n                                        <MenuItem value={\"1\"}>字母</MenuItem>\n                                        <MenuItem value={\"2\"}>算数</MenuItem>\n                                        <MenuItem value={\"3\"}>\n                                            数字+字母\n                                        </MenuItem>\n                                    </Select>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        验证码的形式\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"recaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            reCAPTCHA V2\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Site KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaKey}\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 网站密钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Secret\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_ReCaptchaSecret\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaSecret\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 秘钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"tcaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            腾讯云验证码\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SecretId\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/capi\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                访问密钥页面\n                                            </Link>{\" \"}\n                                            获取到的的 SecretId\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SecretKey\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/capi\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                访问密钥页面\n                                            </Link>{\" \"}\n                                            获取到的的 SecretKey\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APPID\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_CaptchaAppId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_CaptchaAppId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                图形验证页面\n                                            </Link>{\" \"}\n                                            获取到的的 APPID\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            App Secret Key\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_AppSecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_AppSecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                图形验证页面\n                                            </Link>{\" \"}\n                                            获取到的的 App Secret Key\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport Dashboard from \"./component/Admin/Dashboard\";\nimport { useHistory } from \"react-router\";\nimport Auth from \"./middleware/Auth\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { zhCN } from \"@material-ui/core/locale\";\n\nimport Index from \"./component/Admin/Index\";\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\nimport Access from \"./component/Admin/Setting/Access\";\nimport Mail from \"./component/Admin/Setting/Mail\";\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\nimport Theme from \"./component/Admin/Setting/Theme\";\nimport Aria2 from \"./component/Admin/Setting/Aria2\";\nimport ImageSetting from \"./component/Admin/Setting/Image\";\nimport Policy from \"./component/Admin/Policy/Policy\";\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\nimport Group from \"./component/Admin/Group/Group\";\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\nimport User from \"./component/Admin/User/User\";\nimport UserForm from \"./component/Admin/User/UserForm\";\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\nimport File from \"./component/Admin/File/File\";\nimport Share from \"./component/Admin/Share/Share\";\nimport Download from \"./component/Admin/Task/Download\";\nimport Task from \"./component/Admin/Task/Task\";\nimport Import from \"./component/Admin/File/Import\";\nimport Captcha from \"./component/Admin/Setting/Captcha\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    content: {\n        flexGrow: 1,\n        padding: 0,\n        minWidth: 0,\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst theme = createMuiTheme(\n    {\n        palette: {\n            background: {},\n        },\n    },\n    zhCN\n);\n\nexport default function Admin() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        const user = Auth.GetUser();\n        if (user && user.group) {\n            if (user.group.id !== 1) {\n                history.push(\"/home\");\n                return;\n            }\n            setShow(true);\n            return;\n        }\n        history.push(\"/login\");\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AlertBar />\n                    {show && (\n                        <Dashboard\n                            content={(path) => (\n                                <Switch>\n                                    <Route path={`${path}/home`} exact>\n                                        <Index />\n                                    </Route>\n\n                                    <Route path={`${path}/basic`}>\n                                        <SiteInformation />\n                                    </Route>\n\n                                    <Route path={`${path}/access`}>\n                                        <Access />\n                                    </Route>\n\n                                    <Route path={`${path}/mail`}>\n                                        <Mail />\n                                    </Route>\n\n                                    <Route path={`${path}/upload`}>\n                                        <UploadDownload />\n                                    </Route>\n\n                                    <Route path={`${path}/theme`}>\n                                        <Theme />\n                                    </Route>\n\n                                    <Route path={`${path}/aria2`}>\n                                        <Aria2 />\n                                    </Route>\n\n                                    <Route path={`${path}/image`}>\n                                        <ImageSetting />\n                                    </Route>\n\n                                    <Route path={`${path}/captcha`}>\n                                        <Captcha />\n                                    </Route>\n\n                                    <Route path={`${path}/policy`} exact>\n                                        <Policy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/add/:type`}\n                                        exact\n                                    >\n                                        <AddPolicy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/edit/:mode/:id`}\n                                        exact\n                                    >\n                                        <EditPolicyPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/group`} exact>\n                                        <Group />\n                                    </Route>\n\n                                    <Route path={`${path}/group/add`} exact>\n                                        <GroupForm />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/group/edit/:id`}\n                                        exact\n                                    >\n                                        <EditGroupPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/user`} exact>\n                                        <User />\n                                    </Route>\n\n                                    <Route path={`${path}/user/add`} exact>\n                                        <UserForm />\n                                    </Route>\n\n                                    <Route path={`${path}/user/edit/:id`} exact>\n                                        <EditUserPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/file`} exact>\n                                        <File />\n                                    </Route>\n\n                                    <Route path={`${path}/file/import`} exact>\n                                        <Import />\n                                    </Route>\n\n                                    <Route path={`${path}/share`} exact>\n                                        <Share />\n                                    </Route>\n\n                                    <Route path={`${path}/download`} exact>\n                                        <Download />\n                                    </Route>\n\n                                    <Route path={`${path}/task`} exact>\n                                        <Task />\n                                    </Route>\n                                </Switch>\n                            )}\n                        />\n                    )}\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n"],"sourceRoot":""}