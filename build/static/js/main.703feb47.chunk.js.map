{"version":3,"sources":["redux/explorer/action.ts","middleware/Api.js","utils/page.js","component/Dial/AutoHidden.js","redux/explorer/reducer.ts","component/Placeholder/TextLoading.js","middleware/Auth.ts","utils/index.js","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/FileManager/Modals.js","component/Viewer/Text.js","component/Viewer/Code.js","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/FileManager/ImgPreview.js","loader/utils.js","loader/index.js","component/Upload/FileList.js","component/Dial/Create.js","component/Upload/Uploader.js","config.js","actions/explorer.js","actions/index.js","component/FileManager/TypeIcon.js","utils/datetime.js","redux/viewUpdate/action.ts","serviceWorker.js","middleware/AuthRoute.js","component/Share/NotFound.js","middleware/v1.js","middleware/Init.js","component/Common/ICPFooter.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","redux/explorer/index.ts","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/FileManager.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","App.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","component/FileManager/PathSelector.js"],"names":["setFileList","list","type","setDirList","setSortMethod","method","setSideBar","open","sortMethodFuncs","sizePos","a","b","size","sizeRes","namePos","name","localeCompare","navigator","languages","language","numeric","ignorePunctuation","nameRev","timePos","Date","parse","date","timeRev","updateFileList","dispatch","getState","sortMethod","viewUpdate","dirList","filter","x","fileList","sortFunc","sort","changeSortMethod","explorer","toggleObjectInfoSidebar","closeContextMenu","baseURL","getBaseURL","instance","axios","create","withCredentials","crossDomain","AppError","message","code","error","this","stack","Error","prototype","Object","constructor","interceptors","response","use","rawData","data","undefined","Auth","signout","window","location","href","msg","Promise","reject","statusHelper","isHomePage","path","isSharePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","AutoHidden","children","enable","useState","hidden","setHidden","prev","scrollY","lastUpdate","useEffect","addEventListener","e","currentTarget","handleNavigation","in","initState","dndSignal","dndTarget","dndSource","selected","selectProps","isMultiple","withFolder","withFile","lastSelect","file","id","index","shiftSelectedIds","imgPreview","first","other","keywords","fileSave","sideBarOpen","checkSelectedProps","length","forEach","value","state","action","assign","target","source","addedSelected","targets","newSelected","fileIds","filteredSelected","includes","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","className","TextLoading","useTheme","classes","palette","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","oldUser","SetPreference","key","preference","GetPreference","sizeToString","bytes","i","Math","floor","log","pow","toFixed","fixUrlHash","setCookie","days","setTime","getTime","document","cookie","setGetParameter","paramName","paramValue","url","indexOf","prefix","substring","suffix","history","pushState","allowSharePreview","shareInfo","allowPreview","userInfo","uid","checkGetParameters","field","changeThemeColor","color","querySelector","setAttribute","bufferDecode","Uint8Array","from","atob","c","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","substr","split","slice","join","filePath","hex2bin","hex","parseInt","toString","padStart","pathJoin","parts","sep","separator","map","part","RegExp","basename","pathList","pop","filename","randomStr","result","characters","charactersLength","charAt","random","getNumber","base","conditions","v","isMac","platform","toUpperCase","vhCheck","vh","innerHeight","documentElement","style","setProperty","icon","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","useDispatch","ToggleThemeMode","useCallback","toggleDaylightMode","isDayLight","isDark","title","placement","classNames","onClick","sideButton","marginRight","sortOptions","SubActions","isSmall","share","inherit","viewMethod","explorerViewMethod","OpenLoadingDialog","changeViewMethod","ChangeSortMethod","SetShareUserPopover","setShareUserPopover","anchorSort","setAnchorSort","selectedIndex","setSelectedIndex","toggleViewMethod","newMethod","fontSize","anchorEl","Boolean","onClose","option","event","0","1","2","3","4","5","handleMenuItemClick","creator","nick","height","src","fab","margin","top","right","bottom","left","zIndex","badge","fabProgress","green","wrapper","spacing","buttonSuccess","SaveButton","buttonClassname","clsx","status","disabled","aria-label","avatar","blue","loadingContainer","display","loading","marginTop","marginLeft","LoadingDialog","modals","text","loadingText","Dialog","aria-labelledby","DialogContent","DialogContentText","CircularProgress","contentFix","buttonProgress","secondary","light","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","ToggleSnackbar","vertical","horizontal","toggleSnackbar","SetModalsLoading","setModalsLoading","RefreshFileList","refreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","DialogActions","Button","preventDefault","dirs","items","push","API","post","src_dir","dst","then","catch","modalsLoading","widthAnimation","shareUrl","minWidth","flexCenter","alignItems","noFlex","scoreCalc","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","handleExpand","panel","isExpanded","handleCheck","setTimeout","maxWidth","fullWidth","Divider","List","onChange","aria-controls","ListItem","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","edge","onMouseDown","on","onIcon","Visibility","offIcon","VisibilityOff","labelWidth","Select","labelId","MenuItem","Typography","TextField","onFocus","select","autoFocus","inputProps","readonly","label","submitFormBody","is_dir","DecompressDialog","CompressDialog","fileName","setFileName","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","downloaded","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","getSource","get","pathHelper","pathname","score","scoreHandler","archiveDownload","Download","dragMove","callback","reqURL","downloadPath","encodeURIComponent","put","postBody","refreshStorage","submitRemove","delete","submitMove","patch","DragSelectedPath","closeAllModals","doMove","openLoadingDialog","submitRename","findIndex","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","setMoveTarget","remoteDownloadNext","onSubmit","createNewFolder","createNewFile","copy","move","remove","music","controls","remoteDownload","placeholder","torrentDownload","decompress","compress","Component","Modals","connect","withRouter","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","setLoading","math","useRouteMatch","$vm","createRef","useLocation","query","URLSearchParams","search","useParams","SetSubTitle","changeSubTitle","params","requestURL","responseType","textdata","Buffer","toBase64","resolve","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","current","$img2Url","console","elevation","ref","onSave","toolbar","h1","h2","h3","h4","img","link","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","extension","codePreviewSuffix","Array","Set","keys","k","fallback","options","readOnly","extraEditorClassName","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","setUserPopover","openURL","sigOut","reload","setSessionStatus","user","Popover","transformOrigin","visitorMenu","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","group","UserAvatarPopover","userPopoverAnchorEl","anchor","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","handleDrawerToggle","mobileOpen","loadUploader","openDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","iOS","process","browser","test","userAgent","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","saveFile","isPreviewable","openPreview","allowArchiveDownload","navigateTo","openShareDialog","openRenameDialog","openMoveDialog","openRemoveDialog","changeContextMenu","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerOpen","drawerClose","Navbar","drawerToggleAction","openCreateFolderDialog","searchMyFile","openMusicDialog","showImgPreivew","withTheme","flexShrink","drawerDesktop","mixins","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","minHeight","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","component","groupName","UserInfo","backgroundImage","backgroundSize","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","ImagPreviewComponent","photoIndex","isOpen","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","isFunction","val","noop","newScript","scriptElem","createElement","hasOwnProperty","call","body","appendChild","keyIterator","cols","next","parallel","tasks","each","hasError","successed","ret","task","err","args","series","thunk","nextKey","nextThunk","isArray","iterator","loadedScript","pendingScripts","failedScript","addCache","entry","removeFailedScript","script","node","parentNode","removeChild","uploaderLoader","WrappedComponent","ScriptLoader","context","isScriptLoaded","isScriptLoadSucceed","_isMounted","scripts","onComplete","loadNewScript","taskComplete","callbacks","startLoadingScripts","policyType","onScriptLoaded","defaultProps","hoistStatics","FileList","files","openFileList","cancelUpload","addNewFile","getElementsByClassName","click","getProgressBackground","lighten","darken","filesNow","fileID","f","splice","errMsg","ignoreMsg","Slide","direction","inRef","bind","enQueue","setComplete","setError","fullScreen","isWidthDown","TransitionComponent","Transition","AppBar","Toolbar","flex","dialogContent","minHight","item","progressContainer","progress","progressContent","TypeIcon","isUpload","listAction","plupload","formatSize","speed","loaded","errorStatus","successStatus","reQueue","progressBar","wordBreak","withWidth","UploadButton","setOpen","queued","setQueued","OpenNewFolderDialog","OpenNewFileDialog","openCreateFileDialog","Queued","openUpload","uploadButton","contains","uploadClicked","Badge","badgeContent","invisible","Backdrop","SpeedDial","ariaLabel","tooltipTitle","SpeedDialIcon","openIcon","FabProps","SpeedDialAction","tooltipOpen","UploaderComponent","uploader","addFile","fileAdd","currntPath","enqueFiles","isDsStore","removeFile","relativePath","pathCache","Qiniu","runtimes","browse_button","drop_element","max_file_size","policy","maxSize","dragdrop","chunk_size","getChunkSize","saveType","filters","mime_types","allowedType","extensions","multi_selection","uptoken_url","uptoken","domain","max_retries","get_new_uptoken","auto_start","log_level","init","FilesAdded","BeforeUpload","QueueChanged","UploadProgress","UploadComplete","Fresh","FileUploaded","errTip","FilesRemoved","onError","setRef","Uploader","forwardRef","msDocPreviewSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","xml","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","policyTypeMap","local","remote","qiniu","upyun","oss","cos","onedrive","s3","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","removeSelectedTargets","addSelectedTargets","router","isShare","shareDownload","previewPath","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","begin","min","end","max","newShiftSelected","setLastSelect","setNavigator","navigatorLoading","navigateUp","pathSplit","newPath","dragAndDrop","menuType","setNavigatorLoadingStatus","setNavigatorError","openResaveDialog","applyThemes","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","enableLoadUploader","setSiteConfig","config","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","fileSuffix","getColor","getColorValue","iconClassName","dayjs","extend","utc","timezone","preferTimeZone","timeZone","refreshTimeZone","formatLocalTime","time","format","tz","validateTimeZone","setSubtitle","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","match","AuthRoute","rest","render","to","emptyContainer","emptyInfoBig","Notice","initUserConfig","themes","enableUploaderLoad","uploadConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","icp","ICPFooter","siteICPId","show","setShow","pageHelper","Link","rel","primaryColor","secondaryColor","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaContainer","required","Input","autoComplete","captchaPlaceholder","alt","ReCAPTCHA","handleExpired","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","reset","onExpired","onErrored","token","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","elem","childProps","displayName","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","res","ticket","randstr","isValidate","submit","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","useRef","normal","captchaParamsRef","CaptchaRender","validate","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","flexDirection","form","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","ApplyThemes","SetSessionStatus","afterLogin","removeItem","Paper","login","V1","headers","account_token","userName","Password","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","Fingerprint","VpnKey","SmallIconCompoment","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","isFolder","Folder","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","divider","boxSizing","fontWeight","FileIconCompoment","showPicIcon","pic","hide","picPreview","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","active","isActive","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","renderItem","actions","reducers","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","clickUpload","renderMenuItems","visibleCount","condition","dense","allowRemoteDownload","Menu","menuOpen","anchorReference","anchorPosition","allowSource","Archive","InfoOutlined","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","TableRow","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","userSelect","FolderDropWarpper","isListView","useDrop","accept","drop","collect","isOver","canDrop","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","selectFileAction","handleIconClick","stopPropagation","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","ExplorerCompoment","ClickAway","dataset","clickaway","DELETE_FILE","SELECT_ALL","away","showView","listView","Table","table","TableHead","TableSortLabel","changeSort","visuallyHidden","TableBody","normalView","flexFix","data-clickAway","typeHeader","Grid","xs","md","sm","lg","view","rootTable","rootShare","navigatorError","errorBox","errorMsg","navigatorErrorMsg","emptyIcon","emptyInfoSmall","Explorer","drawerDesktopOpen","navigateToPath","hint","upButton","clickAway","clip","expandMore","textTransform","PathButton","inputRef","more","last","DropDownItem","setActiveStatus","DropDown","timer","clearTimeout","shouldClose","element","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","apiURL","parent","objects","pathTemp","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","force","overflowInitLock","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","ListLoading","drawerContainer","placeContent","fileIcon","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setTarget","details","setDetails","propsItem","d","t","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","datetime","query_date","locale","Hidden","Clear","Drawer","gutterBottom","FileManager","DndProvider","backend","HTML5Backend","DragLayer","VideoViewer","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","SearchResult","page","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","Card","CardHeader","subheader","create_date","Pagination","count","ceil","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","CardActions","disableActionSpacing","MyShare","SelectFileDialog","setFiles","dividers","FormGroup","row","FormControlLabel","control","filesCopy","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","actionButton","infoTitle","infoValue","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","mode","gid","indexes","newExpanded","CardContent","LinearProgress","completedLength","newIndex","newFiles","deleteFile","HighlightOff","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","downloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","cursor","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","openResave","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","DocViewer","setURL","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","account","ID","CreatedAt","Name","Root","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","origin","TableContainer","align","clipboard","writeText","accountCopy","deleteAccount","footer","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","changeView","loadSetting","useGravatar","changeNick","uploadAvatar","formData","FormData","append","fileInput","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","add","credential","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","secondColor","firstColor","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","PDFViewer","App","themeConfig","prefersDarkMode","useMediaQuery","useMemo","prefer","createMuiTheme","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","resave","doNavigate","defaultStatus","rawStore","configCache","InitSiteConfig","QQLogin","black","contrastText","bgSelected","ErrorBoundary","errorInfo","componentStack","Admin","hash","fetch","contentType","ready","unregister","checkValidServiceWorker","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","getElementById","PathSelectorCompoment","selectedTarget","toBeLoad","back","paths","api","unshift","handleSelect","selector","primaryTypographyProps","buttonIcon","iconWhite","maxHeight"],"mappings":"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","file":"static/js/main.703feb47.chunk.js","sourcesContent":["import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\nimport { closeContextMenu } from \"../viewUpdate/action\";\n\nexport interface ActionSetFileList extends AnyAction {\n    type: \"SET_FILE_LIST\";\n    list: CloudreveFile[];\n}\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\n    return {\n        type: \"SET_FILE_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetDirList extends AnyAction {\n    type: \"SET_DIR_LIST\";\n    list: CloudreveFile[];\n}\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\n    return {\n        type: \"SET_DIR_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetSortMethod extends AnyAction {\n    type: \"SET_SORT_METHOD\";\n    method: SortMethod;\n}\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\n    return {\n        type: \"SET_SORT_METHOD\",\n        method,\n    };\n};\n\nexport const setSideBar = (open: boolean) => {\n    return {\n        type: \"SET_SIDE_BAR\",\n        open,\n    };\n};\n\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\nconst sortMethodFuncs: Record<SortMethod, SortFunc> = {\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.size - b.size;\n    },\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.size - a.size;\n    },\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.name.localeCompare(\n            b.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.name.localeCompare(\n            a.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.date) - Date.parse(b.date);\n    },\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.date) - Date.parse(a.date);\n    },\n};\n\nexport const updateFileList = (\n    list: CloudreveFile[]\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        // TODO: define state type\n        const { sortMethod } = state.viewUpdate;\n        const dirList = list.filter((x) => {\n            return x.type === \"dir\";\n        });\n        const fileList = list.filter((x) => {\n            return x.type === \"file\";\n        });\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n\nexport const changeSortMethod = (\n    method: SortMethod\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { fileList, dirList } = state.explorer;\n        const sortFunc = sortMethodFuncs[method];\n        dispatch(setSortMethod(method));\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n\nexport const toggleObjectInfoSidebar = (\n    open: boolean\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        if (open) {\n            dispatch(closeContextMenu());\n        }\n        dispatch(setSideBar(true));\n    };\n};\n","import axios from \"axios\";\nimport Auth from \"./Auth\";\n\nexport const baseURL = \"/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n    crossDomain: true,\n});\n\nfunction AppError(message, code, error) {\n    this.code = code;\n    this.message = message || \"未知错误\";\n    this.message += error ? \" \" + error : \"\";\n    this.stack = new Error().stack;\n}\nAppError.prototype = Object.create(Error.prototype);\nAppError.prototype.constructor = AppError;\n\ninstance.interceptors.response.use(\n    function (response) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // 登录过期\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href = \"/login\";\n            }\n\n            // 非管理员\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/home\";\n            }\n            throw new AppError(\n                response.rawData.msg,\n                response.rawData.code,\n                response.rawData.error\n            );\n        }\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n","const statusHelper = {\n    isHomePage(path) {\n        return path === \"/home\";\n    },\n    isSharePage(path) {\n        return path && path.startsWith(\"/s/\");\n    },\n    isAdminPage(path) {\n        return path && path.startsWith(\"/admin\");\n    },\n    isLoginPage(path) {\n        return path && path.startsWith(\"/login\");\n    },\n    isMobile() {\n        return window.innerWidth < 600;\n    },\n};\nexport default statusHelper;\n","import React, { useState, useEffect } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction AutoHidden({ children, enable }) {\n    const [hidden, setHidden] = useState(false);\n\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        const handleNavigation = (e) => {\n            const window = e.currentTarget;\n\n            if (prev > window.scrollY) {\n                if (lastUpdate - window.scrollY > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(false);\n                }\n            } else if (prev < window.scrollY) {\n                if (window.scrollY - lastUpdate > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(true);\n                }\n            }\n            prev = window.scrollY;\n        };\n        if (enable) {\n            window.addEventListener(\"scroll\", (e) => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable]);\n\n    return <Zoom in={!hidden}>{children}</Zoom>;\n}\n\nexport default AutoHidden;\n","/* eslint-disable no-case-declarations */\nimport { AnyAction } from \"redux\";\nimport { CloudreveFile } from \"../../types\";\n\ninterface SelectProps {\n    isMultiple: boolean;\n    withFolder: boolean;\n    withFile: boolean;\n}\n\nexport interface ExplorerState {\n    dndSignal: boolean;\n    dndTarget: any;\n    dndSource: any;\n    fileList: CloudreveFile[];\n    dirList: CloudreveFile[];\n    selected: CloudreveFile[];\n    selectProps: SelectProps;\n    lastSelect: {\n        file: CloudreveFile;\n        index: number;\n    };\n    shiftSelectedIds: string[];\n    imgPreview: {\n        first: CloudreveFile;\n        other: [];\n    };\n    keywords: string;\n    fileSave: boolean;\n    sideBarOpen: boolean;\n}\n\nexport const initState: ExplorerState = {\n    dndSignal: false,\n    dndTarget: null,\n    dndSource: null,\n    fileList: [],\n    dirList: [],\n    selected: [],\n    selectProps: {\n        isMultiple: false,\n        withFolder: false,\n        withFile: false,\n    },\n    lastSelect: {\n        file: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n        },\n        index: -1,\n    },\n    shiftSelectedIds: [],\n    imgPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n        },\n        other: [],\n    },\n    keywords: \"\",\n    fileSave: false,\n    sideBarOpen: false,\n};\n\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\n    const isMultiple = selected.length > 1;\n    let withFolder = false;\n    let withFile = false;\n    selected.forEach((value) => {\n        if (value.type === \"dir\") {\n            withFolder = true;\n        } else if (value.type === \"file\") {\n            withFile = true;\n        }\n    });\n    return {\n        isMultiple,\n        withFolder,\n        withFile,\n    };\n};\n\nconst explorer = (\n    state: ExplorerState = initState,\n    action: AnyAction\n): ExplorerState => {\n    switch (action.type) {\n        case \"DRAG_AND_DROP\":\n            return Object.assign({}, state, {\n                dndSignal: !state.dndSignal,\n                dndTarget: action.target,\n                dndSource: action.source,\n            });\n        case \"SET_FILE_LIST\":\n            return Object.assign({}, state, {\n                fileList: action.list,\n            });\n        case \"SET_DIR_LIST\":\n            return Object.assign({}, state, {\n                dirList: action.list,\n            });\n        case \"ADD_SELECTED_TARGETS\":\n            const addedSelected = [...state.selected, ...action.targets];\n            return Object.assign({}, state, {\n                selected: addedSelected,\n                selectProps: checkSelectedProps(addedSelected),\n            });\n        case \"SET_SELECTED_TARGET\":\n            const newSelected = action.targets;\n            return Object.assign({}, state, {\n                selected: newSelected,\n                selectProps: checkSelectedProps(newSelected),\n            });\n        case \"RMOVE_SELECTED_TARGETS\":\n            const { fileIds } = action;\n            const filteredSelected = state.selected.filter((file) => {\n                return !fileIds.includes(file.id);\n            });\n            return Object.assign({}, state, {\n                selected: filteredSelected,\n                selectProps: checkSelectedProps(filteredSelected),\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                },\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                },\n                keywords: action.keywords,\n            });\n        case \"SHOW_IMG_PREIVEW\":\n            return Object.assign({}, state, {\n                imgPreview: {\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"SAVE_FILE\":\n            return {\n                ...state,\n                fileSave: !state.fileSave,\n            };\n        case \"SET_LAST_SELECT\":\n            const { file, index } = action;\n            return {\n                ...state,\n                lastSelect: {\n                    file,\n                    index,\n                },\n            };\n        case \"SET_SHIFT_SELECTED_IDS\":\n            const { shiftSelectedIds } = action;\n            return {\n                ...state,\n                shiftSelectedIds,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                },\n                keywords: \"\",\n            };\n        case \"SET_SIDE_BAR\":\n            return {\n                ...state,\n                sideBarOpen: action.open,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default explorer;\n","import React from \"react\";\nimport { Code } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10,\n        },\n    },\n}));\n\nconst MyLoader = (props) => (\n    <Code\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction TextLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default TextLoading;\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb: any) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser() {\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\n    },\n    SetUser(newUser: any) {\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    Check(): boolean {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null) {\n            return !Auth.GetUser().anonymous;\n        }\n        return false;\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        const oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key: string, value: any) {\n        let preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        preference = preference == null ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    GetPreference(key: string): any | null {\n        const preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        if (preference && preference[key]) {\n            return preference[key];\n        }\n        return null;\n    },\n};\n\nexport default Auth;\n","export const sizeToString = (bytes) => {\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = (path) => {\n    return path;\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    let url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        const prefix = url.substring(0, url.indexOf(paramName));\n        let suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const allowSharePreview = () => {\n    if (!window.isSharePage) {\n        return true;\n    }\n    if (window.isSharePage) {\n        if (window.shareInfo.allowPreview) {\n            return true;\n        }\n        if (window.userInfo.uid === -1) {\n            return false;\n        }\n        return true;\n    }\n};\n\nexport const checkGetParameters = (field) => {\n    const url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = (color) => {\n    const metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\"\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport const decode = (c) => {\n    let e = c.height,\n        a = c.width,\n        b = document.createElement(\"canvas\");\n    b.height = e;\n    b.width = a;\n    b = b.getContext(\"2d\");\n    b.drawImage(c, 0, 0);\n    c = b.getImageData(0, 0, a, e);\n    b = [];\n    for (let d = 0; d < a * e * 4; d += 4)\n        0 !== (d + 4) % (4 * a) &&\n            [].push.apply(b, [].slice.call(c.data, d, d + 3));\n    c = e = 0;\n    for (\n        a = \"\";\n        c < b.length &&\n        (16 >= c ||\n            (0 === b[c] % 2 ? (e++, (a += \"1\")) : ((e = 0), (a += \"0\")),\n            17 !== e));\n        c++\n    );\n    a = a.slice(0, -16);\n    a = a.replace(/[\\s]/g, \"\").replace(/(\\d{16})(?=\\d)/g, \"$1 \");\n    e = \"\";\n    a = a.split(\" \");\n    for (c = 0; c < a.length; c++) {\n        b = a[c];\n        if (16 === b.length) {\n            b = parseInt(b, 2);\n            e += String.fromCharCode(b);\n        }\n    }\n    return e;\n};\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    const folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex) {\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\n}\n\nexport function pathJoin(parts, sep) {\n    const separator = sep || \"/\";\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n\nexport function basename(path) {\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function filename(path) {\n    const pathList = path.split(\"/\");\n    return pathList.pop();\n}\n\nexport function randomStr(length) {\n    let result = \"\";\n    const characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n    return result;\n}\n\nexport function getNumber(base, conditions) {\n    conditions.forEach((v) => {\n        if (v) {\n            base++;\n        }\n    });\n    return base;\n}\n\nexport const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n};\n\nexport function vhCheck() {\n    const vh = window.innerHeight;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleDaylightMode } from \"../../actions\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(() => ({\n    icon: {\n        color: \"rgb(255, 255, 255)\",\n        opacity: \"0.54\",\n    },\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const ThemeType = useSelector(\n        (state) => state.siteConfig.theme.palette.type\n    );\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\n        dispatch,\n    ]);\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n    const toggleMode = () => {\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\n        ToggleThemeMode();\n    };\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={isDayLight ? \"切换到深色模式\" : \"切换到浅色模式\"}\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position,\n                })}\n                onClick={toggleMode}\n                color=\"inherit\"\n            >\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","import React, { useCallback, useState } from \"react\";\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"../../../middleware/Auth\";\nimport { changeViewMethod, setShareUserPopover } from \"../../../actions\";\nimport { changeSortMethod } from \"../../../redux/explorer/action\";\n\nconst useStyles = makeStyles((theme) => ({\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\",\n    },\n}));\n\nconst sortOptions = [\"A-Z\", \"Z-A\", \"最早\", \"最新\", \"最小\", \"最大\"];\n\nexport default function SubActions({ isSmall, share, inherit }) {\n    const dispatch = useDispatch();\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const OpenLoadingDialog = useCallback(\n        (method) => dispatch(changeViewMethod(method)),\n        [dispatch]\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(changeSortMethod(method)),\n        [dispatch]\n    );\n    const SetShareUserPopover = useCallback(\n        (e) => dispatch(setShareUserPopover(e)),\n        [dispatch]\n    );\n    const [anchorSort, setAnchorSort] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const showSortOptions = (e) => {\n        setAnchorSort(e.currentTarget);\n    };\n    const handleMenuItemClick = (e, index) => {\n        setSelectedIndex(index);\n        const optionsTable = {\n            0: \"namePos\",\n            1: \"nameRev\",\n            2: \"timePos\",\n            3: \"timeRev\",\n            4: \"sizePos\",\n            5: \"sizeRes\",\n        };\n        ChangeSortMethod(optionsTable[index]);\n        setAnchorSort(null);\n    };\n\n    const toggleViewMethod = () => {\n        const newMethod =\n            viewMethod === \"icon\"\n                ? \"list\"\n                : viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        OpenLoadingDialog(newMethod);\n    };\n\n    const classes = useStyles();\n    return (\n        <>\n            {viewMethod === \"icon\" && (\n                <IconButton\n                    title=\"列表展示\"\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            {viewMethod === \"list\" && (\n                <IconButton\n                    title=\"小图标展示\"\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {viewMethod === \"smallIcon\" && (\n                <IconButton\n                    title=\"大图标展示\"\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            <IconButton\n                title=\"排序方式\"\n                className={classes.sideButton}\n                onClick={showSortOptions}\n                color={inherit ? \"inherit\" : \"default\"}\n            >\n                <TextTotateVerticalIcon\n                    fontSize={isSmall ? \"small\" : \"default\"}\n                />\n            </IconButton>\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorSort}\n                open={Boolean(anchorSort)}\n                onClose={() => setAnchorSort(null)}\n            >\n                {sortOptions.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n            {share && (\n                <IconButton\n                    title={\"由 \" + share.creator.nick + \" 创建\"}\n                    className={classes.sideButton}\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\n                    style={{ padding: 5 }}\n                >\n                    <Avatar\n                        style={{ height: 23, width: 23 }}\n                        src={\"/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\n                    />\n                </IconButton>\n            )}\n        </>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status === \"success\",\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status === \"success\" ? (\n                                <CheckIcon />\n                            ) : (\n                                <SaveIcon />\n                            )}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\" && (\n                        <CircularProgress\n                            size={68}\n                            className={classes.fabProgress}\n                        />\n                    )}\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    loadingContainer: {\n        display: \"flex\",\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20,\n    },\n});\n\nexport default function LoadingDialog() {\n    const classes = useStyles();\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>{text}</div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n} from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CopyDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">复制到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        复制到 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Checkbox,\n    FormControl,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\n\nconst useStyles = makeStyles((theme) => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n    },\n    flexCenter: {\n        alignItems: \"center\",\n    },\n    noFlex: {\n        display: \"block\",\n    },\n    scoreCalc: {\n        marginTop: 10,\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: \"auto\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false,\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        preview: true,\n    });\n\n    const handleChange = (prop) => (event) => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const randomPassword = () => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random().toString(36).substr(2).slice(2, 8),\n            showPassword: true,\n        });\n    };\n\n    const handleExpand = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = (prop) => () => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\",\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(() => {\n            setShareURL(\"\");\n        }, 500);\n    };\n\n    const submitShare = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire ? values.downloads : -1,\n            expire: values.expires,\n            preview: shareOption.preview,\n        };\n\n        API.post(\"/share\", submitFormBody)\n            .then((response) => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false,\n                });\n                setShareOption({\n                    password: false,\n                    expire: false,\n                });\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = (event) => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">创建分享链接</DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"使用密码保护\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        分享密码\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip title=\"随机生成\">\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    <ToggleIcon\n                                                        on={values.showPassword}\n                                                        onIcon={<Visibility />}\n                                                        offIcon={\n                                                            <VisibilityOff />\n                                                        }\n                                                    />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"自动过期\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.downloads}\n                                        onChange={handleChange(\"downloads\")}\n                                    >\n                                        <MenuItem value={1}>1 次下载</MenuItem>\n                                        <MenuItem value={2}>2 次下载</MenuItem>\n                                        <MenuItem value={3}>3 次下载</MenuItem>\n                                        <MenuItem value={4}>4 次下载</MenuItem>\n                                        <MenuItem value={5}>5 次下载</MenuItem>\n                                        <MenuItem value={20}>\n                                            20 次下载\n                                        </MenuItem>\n                                        <MenuItem value={50}>\n                                            50 次下载\n                                        </MenuItem>\n                                        <MenuItem value={100}>\n                                            100 次下载\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>或者</Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.expires}\n                                        onChange={handleChange(\"expires\")}\n                                    >\n                                        <MenuItem value={300}>5 分钟</MenuItem>\n                                        <MenuItem value={3600}>1 小时</MenuItem>\n                                        <MenuItem value={24 * 3600}>\n                                            1 天\n                                        </MenuItem>\n                                        <MenuItem value={7 * 24 * 3600}>\n                                            7 天\n                                        </MenuItem>\n                                        <MenuItem value={30 * 24 * 3600}>\n                                            30 天\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>后过期</Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"允许预览\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    是否允许在分享页面预览文件内容\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label=\"分享链接\"\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                <Button onClick={onClose}>关闭</Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            创建分享链接\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { filePath } from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function DecompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        API.post(\"/file/decompress\", {\n            src: filePath(props.selected[0]),\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"解压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">解压送至</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        解压送至 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        API.post(\"/file/compress\", {\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            name: fileName,\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">存放到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField\n                            onChange={(e) => setFileName(e.target.value)}\n                            value={fileName}\n                            fullWidth\n                            autoFocus\n                            id=\"standard-basic\"\n                            label=\"压缩文件名\"\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={\n                            selectedPath === \"\" ||\n                            fileName === \"\" ||\n                            props.modalsLoading\n                        }\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    closeAllModals,\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n    refreshStorage,\n    openLoadingDialog,\n} from \"../../actions/index\";\nimport PathSelector from \"./PathSelector\";\nimport API, { baseURL } from \"../../middleware/Api\";\nimport {\n    withStyles,\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\n\nconst styles = (theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newFileName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        downloadURL: \"\",\n        remoteDownloadPathSelect: false,\n        source: \"\",\n        purchaseCallback: null,\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    newNameSuffix = \"\";\n    downloaded = false;\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n        if (this.props.loading !== nextProps.loading) {\n            // 打包下载\n            if (nextProps.loading === true) {\n                if (nextProps.loadingText === \"打包中...\") {\n                    if (\n                        pathHelper.isSharePage(this.props.location.pathname) &&\n                        this.props.share &&\n                        this.props.share.score > 0\n                    ) {\n                        this.scoreHandler(this.archiveDownload);\n                        return;\n                    }\n                    this.archiveDownload();\n                } else if (nextProps.loadingText === \"获取下载地址...\") {\n                    if (\n                        pathHelper.isSharePage(this.props.location.pathname) &&\n                        this.props.share &&\n                        this.props.share.score > 0\n                    ) {\n                        this.scoreHandler(this.Download);\n                        return;\n                    }\n                    this.Download();\n                }\n            }\n            return;\n        }\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            const name = nextProps.selected[0].name;\n            this.setState({\n                newName: name,\n            });\n            return;\n        }\n        if (\n            this.props.modalsStatus.getSource !==\n                nextProps.modalsStatus.getSource &&\n            nextProps.modalsStatus.getSource === true\n        ) {\n            API.get(\"/file/source/\" + this.props.selected[0].id)\n                .then((response) => {\n                    this.setState({\n                        source: response.data.url,\n                    });\n                })\n                .catch((error) => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n    };\n\n    scoreHandler = (callback) => {\n        callback();\n    };\n\n    Download = () => {\n        let reqURL = \"\";\n        if (this.props.selected[0].key) {\n            const downloadPath =\n                this.props.selected[0].path === \"/\"\n                    ? this.props.selected[0].path + this.props.selected[0].name\n                    : this.props.selected[0].path +\n                      \"/\" +\n                      this.props.selected[0].name;\n            reqURL =\n                \"/share/download/\" +\n                this.props.selected[0].key +\n                \"?path=\" +\n                encodeURIComponent(downloadPath);\n        } else {\n            reqURL = \"/file/download/\" + this.props.selected[0].id;\n        }\n\n        API.put(reqURL)\n            .then((response) => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    archiveDownload = () => {\n        const dirs = [],\n            items = [];\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null;\n        });\n\n        let reqURL = \"/file/archive\";\n        const postBody = {\n            items: items,\n            dirs: dirs,\n        };\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            reqURL = \"/share/archive/\" + window.shareInfo.key;\n            postBody[\"path\"] = this.props.selected[0].path;\n        }\n\n        API.post(reqURL, postBody)\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    window.location.assign(response.data);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.onClose();\n                this.props.refreshStorage();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    submitRemove = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs,\n            },\n        })\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    setTimeout(this.props.refreshFileList, 500);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.props.setModalsLoading(false);\n                this.props.refreshStorage();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                ? \"/\"\n                : this.state.selectedPath,\n        })\n            .then(() => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(\"处理中...\");\n            this.submitMove();\n        }\n    };\n\n    submitRename = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const newName = this.state.newName;\n\n        const src = {\n            dirs: [],\n            items: [],\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"新名称与已有文件重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件夹名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitCreateNewFile = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFileName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/file/create\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFileName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitTorrentDownload = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\n            dst:\n                this.state.selectedPath === \"//\"\n                    ? \"/\"\n                    : this.state.selectedPath,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已创建\",\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitDownload = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/url\", {\n            url: this.state.downloadURL,\n            dst:\n                this.state.selectedPath === \"//\"\n                    ? \"/\"\n                    : this.state.selectedPath,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已创建\",\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name,\n        });\n    };\n\n    remoteDownloadNext = () => {\n        this.props.closeAllModals();\n        this.setState({\n            remoteDownloadPathSelect: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newFileName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            downloadURL: \"\",\n            shareUrl: \"\",\n            remoteDownloadPathSelect: false,\n            source: \"\",\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Loading />\n                <Dialog\n                    open={this.props.modalsStatus.getSource}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        获取文件外链\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"外链地址\"\n                                type=\"text\"\n                                value={this.state.source}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.createNewFolder}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">新建文件夹</DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"文件夹名称\"\n                                type=\"text\"\n                                value={this.state.newFolderName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFolder}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFolderName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.createNewFile}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">新建文件</DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFile}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFileName\"\n                                label=\"文件名称\"\n                                type=\"text\"\n                                value={this.state.newFileName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFile}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFileName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.rename}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    fullWidth={true}\n                >\n                    <DialogTitle id=\"form-dialog-title\">重命名</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            输入{\" \"}\n                            <strong>\n                                {this.props.selected.length === 1\n                                    ? this.props.selected[0].name\n                                    : \"\"}\n                            </strong>{\" \"}\n                            的新名称：\n                        </DialogContentText>\n                        <form onSubmit={this.submitRename}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newName\"\n                                label=\"新名称\"\n                                type=\"text\"\n                                value={this.state.newName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRename}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <CopyDialog\n                    open={this.props.modalsStatus.copy}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.move}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">移动至</DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                移动至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitMove}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remove}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">删除对象</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            确定要删除\n                            {this.props.selected.length === 1 && (\n                                <strong> {this.props.selected[0].name} </strong>\n                            )}\n                            {this.props.selected.length > 1 && (\n                                <span>\n                                    这{this.props.selected.length}个对象\n                                </span>\n                            )}\n                            吗？\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRemove}\n                                color=\"primary\"\n                                disabled={this.props.modalsLoading}\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <CreatShare\n                    open={this.props.modalsStatus.share}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.music}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.selected.length !== 0 && (\n                                <audio\n                                    controls\n                                    src={\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )\n                                            ? baseURL +\n                                              \"/share/preview/\" +\n                                              this.props.selected[0].key +\n                                              (this.props.selected[0].key\n                                                  ? \"?path=\" +\n                                                    encodeURIComponent(\n                                                        this.props.selected[0]\n                                                            .path === \"/\"\n                                                            ? this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                            : this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  \"/\" +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                    )\n                                                  : \"\")\n                                            : baseURL +\n                                              \"/file/preview/\" +\n                                              this.props.selected[0].id\n                                    }\n                                />\n                            )}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remoteDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        新建离线下载任务\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                label=\"文件地址\"\n                                autoFocus\n                                fullWidth\n                                id=\"downloadURL\"\n                                onChange={this.handleInputChange}\n                                placeholder=\"输入文件下载地址，支持 HTTP(s)/FTP/磁力链\"\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                        <Button\n                            onClick={this.remoteDownloadNext}\n                            color=\"primary\"\n                            disabled={\n                                this.props.modalsLoading ||\n                                this.state.downloadURL === \"\"\n                            }\n                        >\n                            下一步\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.remoteDownloadPathSelect}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.torrentDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitTorrentDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <DecompressDialog\n                    open={this.props.modalsStatus.decompress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <CompressDialog\n                    open={this.props.modalsStatus.compress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n            </div>\n        );\n    }\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ModalsCompoment)));\n\nexport default Modals;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport Editor from \"for-editor\";\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    root: {\n        backgroundColor: \"white\",\n        borderRadius: \"8px\",\n    },\n    \"@global\": {\n        \".for-toolbar\": {\n            overflowX: \"auto!important\",\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function TextViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    const $vm = React.createRef();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = (file) =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addImg = async ($file) => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Editor\n                        ref={$vm}\n                        value={content}\n                        onSave={() => save()}\n                        addImg={($file) => addImg($file)}\n                        onChange={(value) => setContent(value)}\n                        toolbar={{\n                            h1: true, // h1\n                            h2: true, // h2\n                            h3: true, // h3\n                            h4: true, // h4\n                            img: true, // 图片\n                            link: true, // 链接\n                            code: true, // 代码块\n                            preview: true, // 预览\n                            expand: true, // 全屏\n                            /* v0.0.9 */\n                            undo: true, // 撤销\n                            redo: true, // 重做\n                            save: false, // 保存\n                            /* v0.2.3 */\n                            subfield: true, // 单双栏模式\n                        }}\n                    />\n                )}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && (\n                <SaveButton onClick={save} status={status} />\n            )}\n        </div>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Paper, useTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport SaveButton from \"../Dial/Save\";\nimport { codePreviewSuffix } from \"../../config\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nconst MonacoEditor = React.lazy(() =>\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 50,\n    },\n    editor: {\n        borderRadius: \"4px\",\n    },\n    \"@global\": {\n        \".overflow-guard\": {\n            borderRadius: \"4px!important\",\n        },\n    },\n    formControl: {\n        margin: \"8px 16px 8px 16px\",\n    },\n    toobar: {\n        textAlign: \"right\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function CodeViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [suffix, setSuffix] = useState(\"javascript\");\n\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            const extension = query.get(\"p\").split(\".\");\n            setSuffix(codePreviewSuffix[extension.pop()]);\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            const extension = query.get(\"name\").split(\".\");\n            setSuffix(codePreviewSuffix[extension.pop()]);\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const isSharePage = pathHelper.isSharePage(location.pathname);\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.toobar}>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={suffix}\n                            onChange={(e) => setSuffix(e.target.value)}\n                        >\n                            {Array.from(\n                                new Set(\n                                    Object.keys(codePreviewSuffix).map((k) => {\n                                        return codePreviewSuffix[k];\n                                    })\n                                )\n                            ).map((extension, index) => (\n                                <MenuItem value={extension} key={index}>\n                                    {extension}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <Divider />\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Suspense fallback={<TextLoading />}>\n                        <MonacoEditor\n                            height=\"600\"\n                            language={suffix}\n                            theme={\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\n                            }\n                            value={content}\n                            options={{\n                                readOnly: isSharePage,\n                                extraEditorClassName: classes.editor,\n                            }}\n                            onChange={(value) => setContent(value)}\n                        />\n                    </Suspense>\n                )}\n            </Paper>\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {} from \"../../actions\";\nimport classNames from \"classnames\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport { green, amber } from \"@material-ui/core/colors\";\n\nimport {\n    withStyles,\n    SnackbarContent,\n    Snackbar,\n    IconButton,\n} from \"@material-ui/core\";\n\nconst mapStateToProps = (state) => {\n    return {\n        snackbar: state.viewUpdate.snackbar,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles1 = (theme) => ({\n    success: {\n        backgroundColor: theme.palette.success.main,\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.info.main,\n    },\n    warning: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon\n                        className={classNames(\n                            classes.icon,\n                            classes.iconVariant\n                        )}\n                    />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\n        .isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = (theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n});\nclass SnackbarCompoment extends Component {\n    state = {\n        open: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\n            this.setState({ open: true });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: this.props.snackbar.vertical,\n                    horizontal: this.props.snackbar.horizontal,\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleClose}\n                    variant={this.props.snackbar.color}\n                    message={this.props.snackbar.msg}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SnackbarCompoment));\n\nexport default AlertBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    LogoutVariant,\n    HomeAccount,\n    DesktopMacDashboard,\n    AccountArrowRight,\n    AccountPlus,\n} from \"mdi-material-ui\";\nimport {\n    setSessionStatus,\n    setUserPopover,\n    toggleSnackbar,\n} from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Avatar,\n    Popover,\n    Typography,\n    Chip,\n    ListItemIcon,\n    MenuItem,\n    Divider,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus: (status) => {\n            dispatch(setSessionStatus(status));\n        },\n    };\n};\nconst styles = () => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    sigOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            登录\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus />\n                            </ListItemIcon>\n                            注册\n                        </MenuItem>\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    style={{\n                                        fontSize: \"0.875rem\",\n                                    }}\n                                    noWrap\n                                >\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            {!isAdminPage && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\n                                            \"/profile/\" + user.id\n                                        );\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <HomeAccount />\n                                    </ListItemIcon>\n                                    个人主页\n                                </MenuItem>\n                            )}\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    管理面板\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                style={{\n                                    padding: \" 11px 16px 11px 16px\",\n                                }}\n                                onClick={this.sigOut}\n                            >\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                退出登录\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarPopoverCompoment)));\n\nexport default UserAvatarPopover;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport { setUserPopover } from \"../../actions\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Grow,\n    Avatar,\n    IconButton,\n    Tooltip,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport { Home } from \"@material-ui/icons\";\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        whiteSpace: \"nowrap\",\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null,\n    };\n\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    returnHome = () => {\n        window.location.href = \"/home\";\n    };\n\n    render() {\n        const { classes } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && (\n                            <>\n                                <DarkModeSwitcher position=\"top\" />\n                                {loginCheck && (\n                                    <>\n                                        <Tooltip\n                                            title={\"设置\"}\n                                            placement=\"bottom\"\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/setting?\"\n                                                    )\n                                                }\n                                                color=\"inherit\"\n                                            >\n                                                <SettingIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {isAdminPage && (\n                            <Tooltip title={\"返回主页\"} placement=\"bottom\">\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={this.returnHome}\n                                >\n                                    <Home />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarCompoment)));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport {\n    drawerToggleAction,\n    setSelectedTarget,\n    navigateTo,\n    openCreateFolderDialog,\n    changeContextMenu,\n    searchMyFile,\n    saveFile,\n    openMusicDialog,\n    showImgPreivew,\n    toggleSnackbar,\n    openMoveDialog,\n    openRemoveDialog,\n    openShareDialog,\n    openRenameDialog,\n    openLoadingDialog,\n    setSessionStatus,\n    openPreview,\n} from \"../../actions\";\nimport {\n    allowSharePreview,\n    checkGetParameters,\n    changeThemeColor,\n} from \"../../utils\";\nimport Uploader from \"../Upload/Uploader.js\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport { AccountArrowRight, AccountPlus, LogoutVariant } from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    withStyles,\n    withTheme,\n    Drawer,\n    SwipeableDrawer,\n    IconButton,\n    Hidden,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    List,\n    Grow,\n    Tooltip,\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FileTag from \"./FileTags\";\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SubActions from \"../FileManager/Navigator/SubActions\";\n\nvhCheck();\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst mapStateToProps = (state) => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        keywords: state.explorer.keywords,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        searchMyFile: (keywords) => {\n            dispatch(searchMyFile(keywords));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        setSessionStatus: () => {\n            dispatch(setSessionStatus());\n        },\n        openPreview: () => {\n            dispatch(openPreview());\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile,\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\",\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0,\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    menuIcon: {\n        marginRight: 20,\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile,\n    },\n    upDrawer: {\n        overflowX: \"hidden\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 0,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    badge: {\n        top: 1,\n        right: -15,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    sectionForFile: {\n        display: \"flex\",\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\",\n    },\n    fabButton: {\n        borderRadius: \"100px\",\n    },\n    badgeFix: {\n        right: \"10px\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    dividerFix: {\n        marginTop: \"8px\",\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\",\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\",\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\",\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\",\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\",\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 145px)\",\n        },\n\n        [theme.breakpoints.down(\"sm\")]: {\n            minHeight: \"calc(var(--vh, 100vh) - 360px)\",\n        },\n    },\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false,\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    UNSAFE_componentWillMount() {\n        this.unlisten = this.props.history.listen(() => {\n            this.setState(() => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount() {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default\n        );\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)) !==\n            (nextProps.selected.length <= 1 &&\n                !(!nextProps.isMultiple && nextProps.withFile))\n        ) {\n            changeThemeColor(\n                !(\n                    this.props.selected.length <= 1 &&\n                    !(!this.props.isMultiple && this.props.withFile)\n                )\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    loadUploader = () => {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            return (\n                <>\n                    {this.props.loadUploader && this.props.isLogin && (\n                        <Uploader />\n                    )}\n                </>\n            );\n        }\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            return;\n        }\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    archiveDownload = () => {\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n\n    signOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .finally(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List>\n                                <ListItem\n                                    button\n                                    key=\"我的分享\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/shares?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"我的分享\" />\n                                </ListItem>\n                                {/* <ListItem\n                                    button\n                                    key=\"离线下载\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/aria2?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"离线下载\" />\n                                </ListItem>\n                                {user.group.webdav && (\n                                    <ListItem\n                                        button\n                                        key=\"WebDAV\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Devices\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"WebDAV\" />\n                                    </ListItem>\n                                )}\n\n                                <ListItem\n                                    button\n                                    key=\"任务队列\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/tasks?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Assignment\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"任务队列\" />\n                                </ListItem> */}\n                            </List>\n                        </div>\n\n                        {pathHelper.isMobile() && (\n                            <>\n                                <Divider />\n                                <List>\n                                    <ListItem\n                                        button\n                                        key=\"个人设置\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/setting?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Settings\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"个人设置\" />\n                                    </ListItem>\n\n                                    <ListItem\n                                        button\n                                        key=\"退出登录\"\n                                        onClick={this.signOut}\n                                    >\n                                        <ListItemIcon>\n                                            <LogoutVariant\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"退出登录\" />\n                                    </ListItem>\n                                </List>\n                            </>\n                        )}\n                        <div>\n                            <StorageBar></StorageBar>\n                        </div>\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary=\"登录\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            key=\"注册\"\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"注册\" />\n                        </ListItem>\n                    </div>\n                )}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={this.handleDrawerToggle}\n                                    className={classes.menuButton}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={() =>\n                                        this.props.handleDesktopToggle(\n                                            !this.props.desktopOpen\n                                        )\n                                    }\n                                    className={classes.menuButtonDesktop}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname\n                                )) && (\n                                <Grow\n                                    in={\n                                        this.props.selected.length > 1 ||\n                                        (!this.props.isMultiple &&\n                                            this.props.withFile)\n                                    }\n                                >\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <Typography\n                                    variant=\"h6\"\n                                    color=\"inherit\"\n                                    noWrap\n                                    onClick={() => {\n                                        this.props.history.push(\"/\");\n                                    }}\n                                >\n                                    {this.props.subTitle\n                                        ? this.props.subTitle\n                                        : this.props.title}\n                                </Typography>\n                            )}\n\n                        {!this.props.isMultiple &&\n                            this.props.withFile &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {(isHomePage ||\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected.length}个对象\n                                </Typography>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            !isHomePage &&\n                            !pathHelper.isSharePage(\n                                this.props.location.pathname\n                            ) &&\n                            Auth.Check(this.props.isLogin) &&\n                            !checkGetParameters(\"share\") && (\n                                <div className={classes.sectionForFile}>\n                                    <Tooltip title=\"保存\">\n                                        <IconButton\n                                            color=\"inherit\"\n                                            onClick={() =>\n                                                this.props.saveFile()\n                                            }\n                                        >\n                                            <SaveIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </div>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile &&\n                                        isPreviewable(\n                                            this.props.selected[0].name\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip title=\"打开\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openPreview()\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip title=\"下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) &&\n                                        user.group.allowArchiveDownload && (\n                                            <Grow\n                                                in={\n                                                    (this.props.isMultiple ||\n                                                        this.props\n                                                            .withFolder) &&\n                                                    user.group\n                                                        .allowArchiveDownload\n                                                }\n                                            >\n                                                <Tooltip title=\"打包下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.archiveDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n\n                                    {!this.props.isMultiple &&\n                                        this.props.withFolder && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFolder\n                                                }\n                                            >\n                                                <Tooltip title=\"进入目录\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.navigateTo(\n                                                                this.props\n                                                                    .path ===\n                                                                    \"/\"\n                                                                    ? this.props\n                                                                          .path +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                                    : this.props\n                                                                          .path +\n                                                                          \"/\" +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                            )\n                                                        }\n                                                    >\n                                                        <OpenFolderIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        !pathHelper.isMobile() &&\n                                        !isSharePage && (\n                                            <Grow in={!this.props.isMultiple}>\n                                                <Tooltip title=\"分享\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openShareDialog()\n                                                        }\n                                                    >\n                                                        <ShareIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"重命名\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip title=\"移动\">\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip title=\"删除\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n\n                                            {pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip title=\"更多操作\">\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.changeContextMenu(\n                                                                    \"file\",\n                                                                    true\n                                                                )\n                                                            }\n                                                        >\n                                                            <MoreHoriz />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <UserAvatar />}\n                        {this.props.selected.length <= 1 &&\n                            !(!this.props.isMultiple && this.props.withFile) &&\n                            isHomePage &&\n                            pathHelper.isMobile() && <SubActions inherit />}\n                    </Toolbar>\n                </AppBar>\n                {this.loadUploader()}\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(() => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classNames({\n                                [classes.drawerOpen]: this.props.desktopOpen,\n                                [classes.drawerClose]: !this.props.desktopOpen,\n                            }),\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen,\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTheme(withStyles(styles)(withRouter(NavbarCompoment))));\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\nimport { searchMyFile } from \"../../actions\";\n\nimport {\n    withStyles,\n    InputBase,\n    Popper,\n    Fade,\n    Paper,\n    MenuItem,\n    ListItemIcon,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport { HotKeys, configure } from \"react-hotkeys\";\n\nconfigure({\n    ignoreTags: [],\n});\n\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchMyFile: (keywords) => {\n            dispatch(searchMyFile(keywords));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\",\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300,\n            },\n        },\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364,\n    },\n});\n\nconst keyMap = {\n    SEARCH: \"enter\",\n};\n\nclass SearchBarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\",\n        };\n    }\n\n    handlers = {\n        SEARCH: (e) => {\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\n                this.searchMyFile();\n            } else {\n                this.searchShare();\n            }\n            e.target.blur();\n        },\n    };\n\n    handleChange = (event) => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value,\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\",\n        });\n    };\n\n    searchMyFile = () => {\n        this.props.searchMyFile(\"keywords/\" + this.input);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\n            \"/search?keywords=\" + encodeURIComponent(this.input)\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                    <InputBase\n                        placeholder=\"搜索...\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        onChange={this.handleChange}\n                        onBlur={this.cancelSuggest}\n                        value={this.state.input}\n                    />\n                </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary,\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    在我的文件中搜索{\" \"}\n                                                    <strong>\n                                                        {this.state.input}\n                                                    </strong>\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                在全站分享中搜索{\" \"}\n                                                <strong>\n                                                    {this.state.input}\n                                                </strong>\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SearchBarCompoment)));\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../utils\";\nimport { toggleSnackbar } from \"../../actions\";\n\nimport {\n    withStyles,\n    LinearProgress,\n    Typography,\n    Divider,\n    Tooltip,\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router\";\n\nconst mapStateToProps = (state) => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\",\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\",\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"11px\",\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\",\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\",\n        },\n        marginTop: \"5px\",\n    },\n    bar: {\n        marginTop: \"5px\",\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper,\n    },\n});\n\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false,\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then((response) => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"您的已用容量已超过容量配额，请尽快删除多余文件或购买容量\",\n                        \"warning\"\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total),\n                });\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            存储空间{\"   \"}\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={\n                                        \"已使用 \" +\n                                        (this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used) +\n                                        \", 共 \" +\n                                        (this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total)\n                                    }\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        {\" / \"}\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(StorageBarCompoment)));\n\nexport default StorageBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setUserPopover } from \"../../actions\";\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\",\n    },\n    nickName: {\n        color: \"#fff\",\n        marginLeft: \"10px\",\n        marginTop: \"15px\",\n        fontSize: \"17px\",\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"end\",\n    },\n    groupName: {\n        marginLeft: \"10px\",\n        color: \"#ffffff\",\n        opacity: \"0.54\",\n    },\n    storageCircle: {\n        width: \"200px\",\n    },\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    {/* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\" />\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin ? user.nickname : \"未登录\"}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin ? user.group.name : \"游客\"}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(UserInfoCompoment));\n\nexport default UserInfo;\n","import React, { useCallback, useState, Suspense } from \"react\";\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles,\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    Triangle,\n    TriangleOutline,\n    FolderHeartOutline,\n    TagPlus,\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\",\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    hiddenButton: {\n        display: \"none\",\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2),\n    },\n    overFlow: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline,\n};\n\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\n\nexport default function FileTag() {\n    const classes = useStyles();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal, setAddTagModal] = useState(false);\n    const [tagHover, setTagHover] = useState(null);\n    const [tags, setTags] = useState(\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\n    );\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback((k) => dispatch(searchMyFile(k)), [\n        dispatch,\n    ]);\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            const IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color,\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = (tag) => {\n        const newTags = [...tags, tag];\n        setTags(newTags);\n        const user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = (id) => {\n        API.delete(\"/tag/\" + id)\n            .then(() => {\n                const newTags = tags.filter((v) => {\n                    return v.id !== id;\n                });\n                setTags(newTags);\n                const user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag\n                    onSuccess={submitSuccess}\n                    open={addTagModal}\n                    onClose={() => setAddTagModal(false)}\n                />\n            </Suspense>\n            <ExpansionPanel\n                square\n                expanded={tagOpen && isHomePage}\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <ListItem\n                        button\n                        key=\"我的文件\"\n                        onClick={() =>\n                            !isHomePage && history.push(\"/home?path=%2F\")\n                        }\n                    >\n                        <ListItemIcon>\n                            <KeyboardArrowRight\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            tagOpen && isHomePage,\n                                        [classes.iconFix]: true,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                            {!(tagOpen && isHomePage) && (\n                                <FolderShared className={classes.iconFix} />\n                            )}\n                        </ListItemIcon>\n                        <ListItemText primary=\"我的文件\" />\n                    </ListItem>\n                    <Divider />\n                </ExpansionPanelSummary>\n\n                <ExpansionPanelDetails>\n                    <List onMouseLeave={() => setTagHover(null)}>\n                        <ListItem\n                            button\n                            id=\"pickfiles\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        <ListItem\n                            button\n                            id=\"pickfolder\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        {[\n                            {\n                                key: \"视频\",\n                                id: \"video\",\n                                icon: (\n                                    <VideoIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconVideo,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: \"图片\",\n                                id: \"image\",\n                                icon: (\n                                    <ImageIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconImg,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: \"音频\",\n                                id: \"audio\",\n                                icon: (\n                                    <MusicIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconAudio,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: \"文档\",\n                                id: \"doc\",\n                                icon: (\n                                    <DocIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconDoc,\n                                        ]}\n                                    />\n                                ),\n                            },\n                        ].map((v) => (\n                            <ListItem\n                                button\n                                key={v.key}\n                                onClick={() => SearchMyFile(v.id + \"/internal\")}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {v.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={v.key} />\n                            </ListItem>\n                        ))}\n                        {tags.map((v) => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={() => setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id);\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"FolderHeartOutline\",\n                                        v.type === 0 ? v.color : null\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    className={classes.overFlow}\n                                    primary={v.name}\n                                />\n\n                                {tagHover === v.id && (\n                                    <ListItemSecondaryAction\n                                        onClick={() => submitDelete(v.id)}\n                                    >\n                                        <IconButton\n                                            size={\"small\"}\n                                            edge=\"end\"\n                                            aria-label=\"delete\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        ))}\n\n                        {/* <ListItem button onClick={() => setAddTagModal(true)}>\n                            <ListItemIcon className={classes.subMenu}>\n                                <TagPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary={\"添加标签...\"} />\n                        </ListItem> */}\n                    </List>{\" \"}\n                    <Divider />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { showImgPreivew } from \"../../actions/index\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport { PhotoSlider } from \"react-photo-view\";\nimport \"react-photo-view/dist/index.css\";\nimport * as explorer from \"../../redux/explorer/reducer\";\n\nconst styles = () => ({});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newImg = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex: firstOne,\n                    items: items,\n                    isOpen: true,\n                });\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newImg = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex: firstOne,\n                items: items,\n                isOpen: true,\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen, items } = this.state;\n\n        return (\n            <div>\n                {isOpen && (\n                    <PhotoSlider\n                        images={items}\n                        visible={isOpen}\n                        onClose={() => this.handleClose()}\n                        index={photoIndex}\n                        onIndexChange={(n) =>\n                            this.setState({\n                                photoIndex: n,\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","export const isDefined = (val) => val != null;\nexport const isFunction = (val) => typeof val === \"function\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n\nexport const newScript = (src) => (cb) => {\n    const scriptElem = document.createElement(\"script\");\n    if (typeof src === \"object\") {\n        // copy every property to the element\n        for (const key in src) {\n            if (Object.prototype.hasOwnProperty.call(src, key)) {\n                scriptElem[key] = src[key];\n            }\n        }\n        src = src.src;\n    } else {\n        scriptElem.src = src;\n    }\n    scriptElem.addEventListener(\"load\", () => cb(null, src));\n    scriptElem.addEventListener(\"error\", () => cb(true, src));\n    document.body.appendChild(scriptElem);\n    return scriptElem;\n};\n\nconst keyIterator = (cols) => {\n    const keys = Object.keys(cols);\n    let i = -1;\n    return {\n        next() {\n            i++; // inc\n            if (i >= keys.length) return null;\n            else return keys[i];\n        },\n    };\n};\n\n// tasks should be a collection of thunk\nexport const parallel = (...tasks) => (each) => (cb) => {\n    let hasError = false;\n    let successed = 0;\n    const ret = [];\n    tasks = tasks.filter(isFunction);\n\n    if (tasks.length <= 0) cb(null);\n    else {\n        tasks.forEach((task, i) => {\n            const thunk = task;\n            thunk((err, ...args) => {\n                if (err) hasError = true;\n                else {\n                    // collect result\n                    if (args.length <= 1) args = args[0];\n\n                    ret[i] = args;\n                    successed++;\n                }\n\n                if (isFunction(each)) each.call(null, err, args, i);\n\n                if (hasError) cb(true);\n                else if (tasks.length === successed) {\n                    cb(null, ret);\n                }\n            });\n        });\n    }\n};\n\n// tasks should be a collection of thunk\nexport const series = (...tasks) => (each) => (cb) => {\n    tasks = tasks.filter((val) => val != null);\n    const nextKey = keyIterator(tasks);\n    const nextThunk = () => {\n        const key = nextKey.next();\n        let thunk = tasks[key];\n        // eslint-disable-next-line prefer-spread\n        if (Array.isArray(thunk))\n            // eslint-disable-next-line prefer-spread\n            thunk = parallel.apply(null, thunk).call(null, each);\n        return [+key, thunk]; // convert `key` to number\n    };\n    let key, thunk;\n    let next = nextThunk();\n    key = next[0];\n    thunk = next[1];\n    if (thunk == null) return cb(null);\n\n    const ret = [];\n    const iterator = () => {\n        thunk((err, ...args) => {\n            if (args.length <= 1) args = args[0];\n            if (isFunction(each)) each.call(null, err, args, key);\n\n            if (err) cb(err);\n            else {\n                // collect result\n                ret.push(args);\n\n                next = nextThunk();\n                key = next[0];\n                thunk = next[1];\n                if (thunk == null) return cb(null, ret);\n                // finished\n                else iterator();\n            }\n        });\n    };\n    iterator();\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport { newScript, series, noop } from \"./utils\";\n\nconst loadedScript = [];\nconst pendingScripts = {};\nlet failedScript = [];\n\nconst addCache = (entry) => {\n    if (loadedScript.indexOf(entry) < 0) {\n        loadedScript.push(entry);\n    }\n};\n\nconst removeFailedScript = () => {\n    if (failedScript.length > 0) {\n        failedScript.forEach((script) => {\n            const node = document.querySelector(`script[src='${script}']`);\n            if (node != null) {\n                node.parentNode.removeChild(node);\n            }\n        });\n\n        failedScript = [];\n    }\n};\n\nexport function startLoadingScripts(scripts, onComplete = noop) {\n    // sequence load\n    const loadNewScript = (script) => {\n        const src = typeof script === \"object\" ? script.src : script;\n        if (loadedScript.indexOf(src) < 0) {\n            return (taskComplete) => {\n                const callbacks = pendingScripts[src] || [];\n                callbacks.push(taskComplete);\n                pendingScripts[src] = callbacks;\n                if (callbacks.length === 1) {\n                    return newScript(script)((err) => {\n                        pendingScripts[src].forEach((cb) => cb(err, src));\n                        delete pendingScripts[src];\n                    });\n                }\n            };\n        }\n    };\n    const tasks = scripts.map((src) => {\n        if (Array.isArray(src)) {\n            return src.map(loadNewScript);\n        } else return loadNewScript(src);\n    });\n\n    series(...tasks)((err, src) => {\n        if (err) {\n            failedScript.push(src);\n        } else {\n            if (Array.isArray(src)) {\n                src.forEach(addCache);\n            } else addCache(src);\n        }\n    })((err) => {\n        removeFailedScript();\n        onComplete(err);\n    });\n}\n\nconst uploaderLoader = () => (WrappedComponent) => {\n    class ScriptLoader extends Component {\n        static propTypes = {\n            onScriptLoaded: PropTypes.func,\n        };\n\n        static defaultProps = {\n            onScriptLoaded: noop,\n        };\n\n        constructor(props, context) {\n            super(props, context);\n\n            this.state = {\n                isScriptLoaded: false,\n                isScriptLoadSucceed: false,\n            };\n\n            this._isMounted = false;\n        }\n\n        componentDidMount() {\n            this._isMounted = true;\n            const scripts = [\n                [\"/static/js/uploader/moxie.js\"],\n                [\"/static/js/uploader/plupload.dev.js\"],\n                [\"/static/js/uploader/i18n/zh_CN.js\"],\n                [\"/static/js/uploader/ui.js\"],\n                [\"/static/js/uploader/uploader_\" + window.policyType + \".js\"],\n            ];\n            startLoadingScripts(scripts, (err) => {\n                if (this._isMounted) {\n                    this.setState(\n                        {\n                            isScriptLoaded: true,\n                            isScriptLoadSucceed: !err,\n                        },\n                        () => {\n                            if (!err) {\n                                this.props.onScriptLoaded();\n                            }\n                        }\n                    );\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n\n        // getWrappedInstance() {\n        //     return this.refs.wrappedInstance;\n        // }\n\n        render() {\n            const props = {\n                ...this.props,\n                ...this.state,\n                ref: \"wrappedInstance\",\n            };\n\n            return <WrappedComponent {...props} />;\n        }\n    }\n\n    return hoistStatics(ScriptLoader, WrappedComponent);\n};\n\nexport default uploaderLoader;\n","import React, { Component } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { isWidthDown } from \"@material-ui/core/withWidth\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport {\n    withStyles,\n    Dialog,\n    ListItemText,\n    ListItem,\n    List,\n    Divider,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Slide,\n    ListItemSecondaryAction,\n    withWidth,\n    DialogContent,\n    Tooltip,\n} from \"@material-ui/core\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport { withTheme } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n    progressBar: {\n        marginTop: 5,\n    },\n    minHight: {\n        [theme.breakpoints.up(\"sm\")]: {\n            minWidth: 500,\n        },\n        padding: 0,\n    },\n    dialogContent: {\n        padding: 0,\n    },\n    successStatus: {\n        color: \"#4caf50\",\n    },\n    errorStatus: {\n        color: \"#ff5722\",\n        wordBreak: \"break-all\",\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    delete: {\n        zIndex: 9,\n    },\n    progressContainer: {\n        position: \"relative\",\n    },\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9,\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n    fileName: {\n        wordBreak: \"break-all\",\n    },\n});\nclass FileList extends Component {\n    state = {\n        open: false,\n        files: [],\n    };\n\n    //入队\n    enQueue(files) {\n        this.setState({\n            files: [...this.state.files, ...files],\n        });\n    }\n\n    deQueue(file) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex((f) => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow.splice(fileID, 1);\n            this.setState({\n                files: filesNow,\n                open: filesNow.length !== 0,\n            });\n        }\n    }\n\n    updateStatus(file) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex((f) => {\n            return f.id === file.id;\n        });\n        if (!file.errMsg || file.ignoreMsg) {\n            if (filesNow[fileID] && !filesNow[fileID].errMsg) {\n                filesNow[fileID] = file;\n                this.setState({\n                    files: filesNow,\n                });\n            }\n        } else {\n            file.ignoreMsg = true;\n        }\n    }\n\n    setComplete(file) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex((f) => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            if (filesNow[fileID].status !== 4) {\n                filesNow[fileID].status = 5;\n                this.setState({\n                    files: filesNow,\n                });\n            }\n        }\n    }\n\n    setError(file, errMsg) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex((f) => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow[fileID].status = 4;\n            filesNow[fileID].errMsg = errMsg;\n        } else {\n            file.status = 4;\n            file.errMsg = errMsg;\n            filesNow.push(file);\n        }\n        this.setState({\n            files: filesNow,\n        });\n    }\n\n    Transition(props) {\n        return <Slide direction=\"up\" {...props} />;\n    }\n    openFileList = () => {\n        if (!this.state.open) {\n            this.setState({ open: true });\n        }\n    };\n\n    cancelUpload = (file) => {\n        this.props.cancelUpload(file);\n        // this.deQueue(file);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    addNewFile = () => {\n        document.getElementsByClassName(\"uploadFileForm\")[0].click();\n    };\n\n    getProgressBackground = () => {\n        return this.props.theme.palette.type === \"light\"\n            ? lighten(this.props.theme.palette.primary.main, 0.8)\n            : darken(this.props.theme.palette.background.paper, 0.2);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { width } = this.props;\n\n        this.props.inRef({\n            openFileList: this.openFileList.bind(this),\n            enQueue: this.enQueue.bind(this),\n            updateStatus: this.updateStatus.bind(this),\n            setComplete: this.setComplete.bind(this),\n            setError: this.setError.bind(this),\n        });\n\n        return (\n            <Dialog\n                fullScreen={isWidthDown(\"sm\", width)}\n                open={this.state.open}\n                onClose={this.handleClose}\n                TransitionComponent={this.Transition}\n            >\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={this.handleClose}\n                            aria-label=\"Close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            className={classes.flex}\n                        >\n                            上传队列\n                        </Typography>\n                        <IconButton color=\"inherit\" onClick={this.addNewFile}>\n                            <AddIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.dialogContent}>\n                    <List className={classes.minHight}>\n                        {this.state.files.map((item, i) => (\n                            <div key={i} className={classes.progressContainer}>\n                                {item.status === 2 && (\n                                    <div\n                                        style={{\n                                            backgroundColor: this.getProgressBackground(),\n                                            width: item.percent + \"%\",\n                                        }}\n                                        className={classes.progress}\n                                    />\n                                )}\n                                <ListItem\n                                    className={classes.progressContent}\n                                    button\n                                >\n                                    <TypeIcon fileName={item.name} isUpload />\n                                    {item.status === 1 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={<div>排队中...</div>}\n                                        />\n                                    )}\n                                    {item.status === 2 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div>\n                                                    {item.percent <= 99 && (\n                                                        <>\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.speed\n                                                                )\n                                                                .toUpperCase()}\n                                                            /s 已上传{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.loaded\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            , 共{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.size\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            - {item.percent}%{\" \"}\n                                                        </>\n                                                    )}\n                                                    {item.percent > 99 && (\n                                                        <div>处理中...</div>\n                                                    )}\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 3 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={item.status}\n                                        />\n                                    )}\n                                    {item.status === 4 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.errorStatus\n                                                    }\n                                                >\n                                                    {item.errMsg}\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 5 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.successStatus\n                                                    }\n                                                >\n                                                    已完成\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    <ListItemSecondaryAction\n                                        className={classes.delete}\n                                    >\n                                        {item.status !== 4 && (\n                                            <IconButton\n                                                aria-label=\"Delete\"\n                                                onClick={() =>\n                                                    this.cancelUpload(item)\n                                                }\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        )}\n                                        {item.status === 4 && (\n                                            <Tooltip title={\"重试\"}>\n                                                <IconButton\n                                                    aria-label=\"Delete\"\n                                                    onClick={() =>\n                                                        this.reQueue(item)\n                                                    }\n                                                >\n                                                    <RefreshIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        )}\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider />\n                            </div>\n                        ))}\n                    </List>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\nFileList.propTypes = {};\n\nexport default withStyles(styles)(withWidth()(withTheme(FileList)));\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { makeStyles, Badge } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport {\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    toggleSnackbar,\n} from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { FolderUpload, FilePlus } from \"mdi-material-ui\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    \"@global\": {\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\n            width: 100,\n        },\n    },\n}));\n\nexport default function UploadButton(props) {\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const OpenNewFolderDialog = useCallback(\n        () => dispatch(openCreateFolderDialog()),\n        [dispatch]\n    );\n    const OpenNewFileDialog = useCallback(\n        () => dispatch(openCreateFileDialog()),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const openUpload = (id) => {\n        const uploadButton = document.getElementsByClassName(id)[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"上传组件还未加载完成\", \"warning\");\n        }\n    };\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                openUpload(\"uploadFileForm\");\n            }\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <AutoHidden enable>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge, // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    ariaLabel=\"SpeedDial openIcon example\"\n                    hidden={false}\n                    tooltipTitle=\"上传文件\"\n                    icon={\n                        <SpeedDialIcon\n                            openIcon={\n                                !statusHelper.isMobile() && <PublishIcon />\n                            }\n                        />\n                    }\n                    onClose={handleClose}\n                    FabProps={{\n                        onClick: () =>\n                            !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\",\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                >\n                    {statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFile\"\n                            icon={<PublishIcon />}\n                            tooltipOpen\n                            tooltipTitle=\"上传文件\"\n                            onClick={() => uploadClicked()}\n                            title={\"上传文件\"}\n                        />\n                    )}\n                    {!statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFolder\"\n                            icon={<FolderUpload />}\n                            tooltipOpen\n                            tooltipTitle=\"上传目录\"\n                            onClick={() => openUpload(\"uploadFolderForm\")}\n                            title={\"上传目录\"}\n                        />\n                    )}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipOpen\n                        tooltipTitle=\"新建目录\"\n                        onClick={() => OpenNewFolderDialog()}\n                        title={\"新建目录\"}\n                    />\n                    <SpeedDialAction\n                        key=\"NewFile\"\n                        icon={<FilePlus />}\n                        tooltipOpen\n                        tooltipTitle=\"新建文件\"\n                        onClick={() => OpenNewFileDialog()}\n                        title={\"新建文件\"}\n                    />\n                </SpeedDial>\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React, { Component } from \"react\";\nimport uploaderLoader from \"../../loader\";\nimport { connect } from \"react-redux\";\nimport { refreshFileList, refreshStorage, toggleSnackbar } from \"../../actions\";\nimport FileList from \"./FileList.js\";\nimport Auth from \"../../middleware/Auth\";\nimport UploadButton from \"../Dial/Create.js\";\nimport { basename, pathJoin } from \"../../utils\";\n\nlet loaded = false;\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        keywords: state.explorer.keywords,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass UploaderComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            queued: 0,\n        };\n    }\n\n    setRef(val) {\n        window.fileList = val;\n    }\n\n    cancelUpload(file) {\n        this.uploader.removeFile(file);\n    }\n\n    reQueue = (file) => {\n        this.uploader.addFile(file.getSource());\n        this.props.toggleSnackbar(\n            \"top\",\n            \"right\",\n            \"文件已经重新加入上传队列\",\n            \"info\"\n        );\n    };\n\n    getChunkSize(policyType) {\n        if (policyType === \"qiniu\") {\n            return 4 * 1024 * 1024;\n        }\n        if (policyType === \"onedrive\") {\n            return 100 * 1024 * 1024;\n        }\n        return 0;\n    }\n\n    fileAdd = (up, files) => {\n        const path = window.currntPath ? window.currntPath : this.props.path;\n        if (\n            this.props.keywords === \"\" &&\n            window.location.pathname.toLowerCase().startsWith(\"/home\")\n        ) {\n            window.fileList[\"openFileList\"]();\n            const enqueFiles = files\n                // 不上传Mac下的布局文件 .DS_Store\n                .filter((file) => {\n                    const isDsStore = file.name.toLowerCase() === \".ds_store\";\n                    if (isDsStore) {\n                        up.removeFile(file);\n                    }\n                    return !isDsStore;\n                })\n                .map((file) => {\n                    const source = file.getSource();\n                    if (source.relativePath && source.relativePath !== \"\") {\n                        file.path = basename(\n                            pathJoin([path, source.relativePath])\n                        );\n                        window.pathCache[file.id] = basename(\n                            pathJoin([path, source.relativePath])\n                        );\n                    } else {\n                        window.pathCache[file.id] = path;\n                        file.path = path;\n                    }\n                    return file;\n                });\n            window.fileList[\"enQueue\"](enqueFiles);\n        } else {\n            window.plupload.each(files, (files) => {\n                up.removeFile(files);\n            });\n        }\n    };\n\n    UNSAFE_componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\n        if (isScriptLoaded && !this.props.isScriptLoaded) {\n            // load finished\n            if (isScriptLoadSucceed) {\n                if (loaded) {\n                    return;\n                }\n                loaded = true;\n                const user = Auth.GetUser();\n                this.uploader = window.Qiniu.uploader({\n                    runtimes: \"html5\",\n                    browse_button: [\"pickfiles\", \"pickfolder\"],\n                    container: \"container\",\n                    drop_element: \"container\",\n                    max_file_size:\n                        user.policy.maxSize === \"0.00mb\"\n                            ? 0\n                            : user.policy.maxSize,\n                    dragdrop: true,\n                    chunk_size: this.getChunkSize(user.policy.saveType),\n                    filters: {\n                        mime_types:\n                            user.policy.allowedType === null ||\n                            user.policy.allowedType.length === 0\n                                ? []\n                                : [\n                                      {\n                                          title: \"files\",\n                                          extensions: user.policy.allowedType.join(\n                                              \",\"\n                                          ),\n                                      },\n                                  ],\n                    },\n                    // iOS不能多选？\n                    multi_selection: true,\n                    uptoken_url: \"/api/v3/file/upload/credential\",\n                    uptoken: user.policy.saveType === \"local\" ? \"token\" : null,\n                    domain: \"s\",\n                    max_retries: 0,\n                    get_new_uptoken: true,\n                    auto_start: true,\n                    log_level: 5,\n                    init: {\n                        FilesAdded: this.fileAdd,\n\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        BeforeUpload: function () {},\n                        QueueChanged: (up) => {\n                            this.setState({ queued: up.total.queued });\n                        },\n                        UploadProgress: (up, file) => {\n                            window.fileList[\"updateStatus\"](file);\n                        },\n                        UploadComplete: (up, file) => {\n                            if (file.length === 0) {\n                                return;\n                            }\n                            console.log(\n                                \"UploadComplete\",\n                                file[0].status,\n                                file[0]\n                            );\n                            for (let i = 0; i < file.length; i++) {\n                                if (file[i].status === 5) {\n                                    window.fileList[\"setComplete\"](file[i]);\n                                }\n                            }\n                            // 无异步操作的策略，直接刷新\n                            if (\n                                user.policy.saveType !== \"onedrive\" &&\n                                user.policy.saveType !== \"cos\"\n                            ) {\n                                this.props.refreshFileList();\n                                this.props.refreshStorage();\n                            }\n                        },\n                        Fresh: () => {\n                            this.props.refreshFileList();\n                            this.props.refreshStorage();\n                        },\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        FileUploaded: function () {},\n                        Error: (up, err, errTip) => {\n                            window.fileList[\"openFileList\"]();\n                            window.fileList[\"setError\"](err.file, errTip);\n                        },\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        FilesRemoved: () => {},\n                    },\n                });\n                // this.fileList[\"openFileList\"]();\n            } else this.onError();\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onError() {}\n\n    openFileList = () => {\n        window.fileList[\"openFileList\"]();\n    };\n\n    render() {\n        return (\n            <div>\n                <FileList\n                    inRef={this.setRef.bind(this)}\n                    cancelUpload={this.cancelUpload.bind(this)}\n                    reQueue={this.reQueue.bind(this)}\n                />\n                {this.props.keywords === \"\" && (\n                    <UploadButton\n                        Queued={this.state.queued}\n                        openFileList={this.openFileList}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nconst Uploader = connect(mapStateToProps, mapDispatchToProps, null, {\n    forwardRef: true,\n})(uploaderLoader()(UploaderComponent));\n\nexport default Uploader;\n","export const imgPreviewSuffix = [\n    \"bmp\",\n    \"png\",\n    \"gif\",\n    \"jpg\",\n    \"jpeg\",\n    \"svg\",\n    \"webp\",\n];\nexport const msDocPreviewSuffix = [\n    \"ppt\",\n    \"pptx\",\n    \"pps\",\n    \"doc\",\n    \"docx\",\n    \"xlsx\",\n    \"xls\",\n];\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\"];\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\"];\nexport const pdfPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\", \"txt\"];\nexport const codePreviewSuffix = {\n    json: \"json\",\n    php: \"php\",\n    py: \"python\",\n    bat: \"bat\",\n    cpp: \"cpp\",\n    c: \"cpp\",\n    h: \"cpp\",\n    cs: \"csharp\",\n    css: \"css\",\n    dockerfile: \"dockerfile\",\n    go: \"go\",\n    html: \"html\",\n    ini: \"ini\",\n    java: \"java\",\n    js: \"javascript\",\n    jsx: \"javascript\",\n    less: \"less\",\n    lua: \"lua\",\n    sh: \"shell\",\n    sql: \"sql\",\n    xml: \"xml\",\n    yaml: \"yaml\",\n};\nexport const mediaType = {\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\"],\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\n    pdf: [\"pdf\"],\n    word: [\"doc\", \"docx\"],\n    ppt: [\"ppt\", \"pptx\"],\n    excel: [\"xls\", \"xlsx\", \"csv\"],\n    text: [\"txt\", \"md\", \"html\"],\n    torrent: [\"torrent\"],\n    zip: [\"zip\", \"gz\", \"tar\", \"rar\", \"7z\"],\n    excute: [\"exe\"],\n    android: [\"apk\"],\n    php: [\"php\"],\n    go: [\"go\"],\n    python: [\"py\"],\n    cpp: [\"cpp\"],\n    c: [\"c\"],\n    js: [\"js\", \"jsx\"],\n};\nexport const policyTypeMap = {\n    local: \"本机\",\n    remote: \"从机\",\n    qiniu: \"七牛\",\n    upyun: \"又拍云\",\n    oss: \"阿里云 OSS\",\n    cos: \"腾讯云\",\n    onedrive: \"OneDrive\",\n    s3: \"Amazon S3\",\n};\nexport const isPreviewable = (name) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"img\";\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"msDoc\";\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"audio\";\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"video\";\n    } else if (editSuffix.indexOf(suffix) !== -1) {\n        return \"edit\";\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"pdf\";\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\n        return \"code\";\n    }\n    return false;\n};\nexport const isTorrent = (name) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\n        return true;\n    }\n    return false;\n};\n\nexport const isCompressFile = (name) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix === \"zip\";\n};\n\nconst taskStatus = [\"排队中\", \"处理中\", \"失败\", \"取消\", \"已完成\"];\nconst taskType = [\"压缩\", \"解压缩\", \"文件中转\", \"导入外部目录\"];\nconst taskProgress = [\n    \"等待中\",\n    \"压缩中\",\n    \"解压缩中\",\n    \"下载中\",\n    \"转存中\",\n    \"索引中\",\n    \"插入中\",\n];\n\nexport const getTaskStatus = (status) => {\n    return taskStatus[status];\n};\n\nexport const getTaskType = (status) => {\n    return taskType[status];\n};\n\nexport const getTaskProgress = (type, status) => {\n    if (type === 2) {\n        return \"已完成 \" + (status + 1) + \" 个文件\";\n    }\n    return taskProgress[status];\n};\n","import { isMac } from \"../utils\";\nimport pathHelper from \"../utils/page\";\nimport Auth from \"../middleware/Auth\";\nimport {\n    changeContextMenu,\n    openLoadingDialog,\n    openMusicDialog,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"./index\";\nimport { isPreviewable } from \"../config\";\nimport { push } from \"connected-react-router\";\n\nexport const removeSelectedTargets = (fileIds) => {\n    return {\n        type: \"RMOVE_SELECTED_TARGETS\",\n        fileIds,\n    };\n};\n\nexport const addSelectedTargets = (targets) => {\n    return {\n        type: \"ADD_SELECTED_TARGETS\",\n        targets,\n    };\n};\n\nexport const setSelectedTarget = (targets) => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets,\n    };\n};\n\nexport const setLastSelect = (file, index) => {\n    return {\n        type: \"SET_LAST_SELECT\",\n        file,\n        index,\n    };\n};\n\nexport const setShiftSelectedIds = (shiftSelectedIds) => {\n    return {\n        type: \"SET_SHIFT_SELECTED_IDS\",\n        shiftSelectedIds,\n    };\n};\n\nexport const openPreview = () => {\n    return (dispatch, getState) => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const isShare = pathHelper.isSharePage(pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                dispatch(toggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\"));\n                dispatch(changeContextMenu(\"file\", false));\n                return;\n            }\n        }\n\n        dispatch(changeContextMenu(\"file\", false));\n        const previewPath =\n            selected[0].path === \"/\"\n                ? selected[0].path + selected[0].name\n                : selected[0].path + \"/\" + selected[0].name;\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                dispatch(showImgPreivew(selected[0]));\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    dispatch(\n                        push(\n                            selected[0].key +\n                                \"/doc?name=\" +\n                                encodeURIComponent(selected[0].name) +\n                                \"&share_path=\" +\n                                encodeURIComponent(previewPath)\n                        )\n                    );\n                    return;\n                }\n                dispatch(\n                    push(\n                        \"/doc?p=\" +\n                            encodeURIComponent(previewPath) +\n                            \"&id=\" +\n                            selected[0].id\n                    )\n                );\n                return;\n            case \"audio\":\n                dispatch(openMusicDialog());\n                return;\n            case \"video\":\n                if (isShare) {\n                    dispatch(\n                        push(\n                            selected[0].key +\n                                \"/video?name=\" +\n                                encodeURIComponent(selected[0].name) +\n                                \"&share_path=\" +\n                                encodeURIComponent(previewPath)\n                        )\n                    );\n                    return;\n                }\n                dispatch(\n                    push(\n                        \"/video?p=\" +\n                            encodeURIComponent(previewPath) +\n                            \"&id=\" +\n                            selected[0].id\n                    )\n                );\n                return;\n            case \"pdf\":\n                if (isShare) {\n                    dispatch(\n                        push(\n                            selected[0].key +\n                                \"/pdf?name=\" +\n                                encodeURIComponent(selected[0].name) +\n                                \"&share_path=\" +\n                                encodeURIComponent(previewPath)\n                        )\n                    );\n                    return;\n                }\n                dispatch(\n                    push(\n                        \"/pdf?p=\" +\n                            encodeURIComponent(previewPath) +\n                            \"&id=\" +\n                            selected[0].id\n                    )\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    dispatch(\n                        push(\n                            selected[0].key +\n                                \"/text?name=\" +\n                                encodeURIComponent(selected[0].name) +\n                                \"&share_path=\" +\n                                encodeURIComponent(previewPath)\n                        )\n                    );\n                    return;\n                }\n                dispatch(\n                    push(\n                        \"/text?p=\" +\n                            encodeURIComponent(previewPath) +\n                            \"&id=\" +\n                            selected[0].id\n                    )\n                );\n                return;\n            case \"code\":\n                if (isShare) {\n                    dispatch(\n                        push(\n                            selected[0].key +\n                                \"/code?name=\" +\n                                encodeURIComponent(selected[0].name) +\n                                \"&share_path=\" +\n                                encodeURIComponent(previewPath)\n                        )\n                    );\n                    return;\n                }\n                dispatch(\n                    push(\n                        \"/code?p=\" +\n                            encodeURIComponent(previewPath) +\n                            \"&id=\" +\n                            selected[0].id\n                    )\n                );\n                return;\n            default:\n                dispatch(openLoadingDialog(\"获取下载地址...\"));\n                return;\n        }\n    };\n};\n\nexport const selectFile = (file, event, fileIndex) => {\n    const { ctrlKey, metaKey, shiftKey } = event;\n    return (dispatch, getState) => {\n        // 多种组合操作忽略\n        if ([ctrlKey, metaKey, shiftKey].filter(Boolean).length > 1) {\n            return;\n        }\n        const isMacbook = isMac();\n        const { explorer } = getState();\n        const { selected, lastSelect, dirList, fileList } = explorer;\n        if (\n            shiftKey &&\n            !ctrlKey &&\n            !metaKey &&\n            selected.length !== 0 &&\n            // 点击类型一样\n            file.type === lastSelect.file.type\n        ) {\n            // shift 多选\n            // 取消原有选择\n            dispatch(removeSelectedTargets(selected.map((v) => v.id)));\n            // 添加新选择\n            const begin = Math.min(lastSelect.index, fileIndex);\n            const end = Math.max(lastSelect.index, fileIndex);\n            const list = file.type === \"dir\" ? dirList : fileList;\n            const newShiftSelected = list.slice(begin, end + 1);\n            return dispatch(addSelectedTargets(newShiftSelected));\n        }\n        dispatch(setLastSelect(file, fileIndex));\n        dispatch(setShiftSelectedIds([]));\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\n            // Ctrl/Command 单击添加/删除\n            const presentIndex = selected.findIndex((value) => {\n                return value.id === file.id;\n            });\n            if (presentIndex !== -1) {\n                return dispatch(removeSelectedTargets([file.id]));\n            }\n            return dispatch(addSelectedTargets([file]));\n        }\n        // 单选\n        return dispatch(setSelectedTarget([file]));\n    };\n};\n","export * from \"./explorer\";\n\nexport const setNavigator = (path, navigatorLoading) => {\n    return {\n        type: \"SET_NAVIGATOR\",\n        path,\n        navigatorLoading,\n    };\n};\n\nexport const navigateTo = (path) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const navigatorLoading = path !== state.navigator.path;\n        dispatch(setNavigator(path, navigatorLoading));\n    };\n};\n\nexport const navigateUp = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const pathSplit = state.navigator.path.split(\"/\");\n        pathSplit.pop();\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\n        const navigatorLoading = newPath !== state.navigator.path;\n        dispatch(setNavigator(newPath, navigatorLoading));\n    };\n};\n\nexport const drawerToggleAction = (open) => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open,\n    };\n};\n\nexport const dragAndDrop = (source, target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target,\n    };\n};\n\nexport const changeViewMethod = (method) => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method,\n    };\n};\n\nexport const toggleDaylightMode = () => {\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\",\n    };\n};\n\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\n\nexport const setNavigatorLoadingStatus = (status) => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status,\n    };\n};\n\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg,\n    };\n};\n\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\n    };\n};\n\nexport const openCreateFileDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FILE_DIALOG\",\n    };\n};\n\nexport const setUserPopover = (anchor) => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\n\nexport const setShareUserPopover = (anchor) => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\n\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\",\n    };\n};\n\nexport const openResaveDialog = (key) => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key: key,\n    };\n};\n\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\",\n    };\n};\n\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\",\n    };\n};\n\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\",\n    };\n};\n\nexport const applyThemes = (theme) => {\n    return {\n        type: \"APPLY_THEME\",\n        theme: theme,\n    };\n};\n\nexport const setSessionStatus = (status) => {\n    return {\n        type: \"SET_SESSION_STATUS\",\n        status: status,\n    };\n};\n\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\",\n    };\n};\n\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\n    };\n};\n\nexport const openTorrentDownloadDialog = () => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\n    };\n};\n\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\",\n    };\n};\n\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\",\n    };\n};\n\nexport const openGetSourceDialog = () => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\",\n    };\n};\n\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\",\n    };\n};\n\nexport const openLoadingDialog = (text) => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text,\n    };\n};\n\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\",\n    };\n};\n\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color,\n    };\n};\n\nexport const enableLoadUploader = () => {\n    return {\n        type: \"ENABLE_LOAD_UPLOADER\",\n    };\n};\n\nexport const setModalsLoading = (status) => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status,\n    };\n};\n\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\",\n    };\n};\n\nexport const searchMyFile = (keywords) => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords,\n    };\n};\n\nexport const showImgPreivew = (first) => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first,\n    };\n};\n\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\",\n    };\n};\n\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\",\n    };\n};\n\nexport const setSiteConfig = (config) => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config,\n    };\n};\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox,\n    LanguageC,\n    LanguageCpp,\n    LanguageGo,\n    LanguageJavascript,\n    LanguagePhp,\n    LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox,\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon,\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon,\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon,\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon,\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox,\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox,\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox,\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText,\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn,\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox,\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore,\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android,\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon,\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp,\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo,\n    },\n    python: {\n        color: \"#3776ab\",\n        icon: LanguagePython,\n    },\n    c: {\n        color: \"#a8b9cc\",\n        icon: LanguageC,\n    },\n    cpp: {\n        color: \"#004482\",\n        icon: LanguageCpp,\n    },\n    js: {\n        color: \"#f4d003\",\n        icon: LanguageJavascript,\n    },\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = (props) => {\n    const theme = useTheme();\n\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach((k) => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    const IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color,\n                    }}\n                >\n                    <IconComponent\n                        className={props.iconClassName}\n                        style={{\n                            color: theme.palette.background.paper,\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color,\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","import dayjs from \"dayjs\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport utc from \"dayjs/plugin/utc\";\nimport Auth from \"../middleware/Auth\";\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst defaultTimeZone = \"Asia/Shanghai\";\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\nexport let timeZone = preferTimeZone ? preferTimeZone : defaultTimeZone;\n\nexport function refreshTimeZone() {\n    timeZone = Auth.GetPreference(\"timeZone\");\n    timeZone = timeZone ? timeZone : defaultTimeZone;\n}\n\nexport function formatLocalTime(time, format) {\n    return dayjs(time).tz(timeZone).format(format);\n}\n\nexport function validateTimeZone(name) {\n    try {\n        dayjs().tz(name).format();\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n","import { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nexport interface ActionSetSubtitle extends AnyAction {\n    type: \"SET_SUBTITLE\";\n    title: string;\n}\n\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\n    return {\n        type: \"SET_SUBTITLE\",\n        title,\n    };\n};\n\nexport const closeContextMenu = () => {\n    return {\n        type: \"CLOSE_CONTEXT_MENU\",\n    };\n};\n\nexport const changeSubTitle = (\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const state = getState();\n        document.title =\n            title === null || title === undefined\n                ? state.siteConfig.title\n                : title + \" - \" + state.siteConfig.title;\n        dispatch(setSubtitle(title));\n    };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        fontSize: \"160px\",\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n    },\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\n        </div>\n    );\n}\n","import axios from \"axios\";\n\nexport const baseURL = \"/api/v1\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n    crossDomain: true,\n});\n\nexport default instance;\n","import {\n    setSiteConfig,\n    toggleSnackbar,\n    enableLoadUploader,\n    changeViewMethod,\n} from \"../actions/index\";\nimport API from \"./Api\";\nimport Auth from \"./Auth\";\nimport pathHelper from \"../utils/page\";\n\nconst initUserConfig = (siteConfig) => {\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\n        const themes = JSON.parse(siteConfig.themes);\n        const user = siteConfig.user;\n        delete siteConfig.user;\n\n        //更换用户自定配色\n        if (\n            user[\"preferred_theme\"] !== \"\" &&\n            themes[user[\"preferred_theme\"]] !== undefined\n        ) {\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig;\n};\n\nexport const InitSiteConfig = (rawStore) => {\n    // 从缓存获取默认配置\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache;\n    }\n    // 检查是否有path参数\n    const url = new URL(window.location.href);\n    const c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c === null ? \"/\" : c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n    return rawStore;\n};\n\nexport function enableUploaderLoad() {\n    // 开启上传组件加载\n    const user = Auth.GetUser();\n    window.policyType = user !== null ? user.policy.saveType : \"local\";\n    window.uploadConfig = user !== null ? user.policy : {};\n    window.pathCache = [];\n}\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\")\n        .then(function (response) {\n            const themes = JSON.parse(response.data.themes);\n            response.data.theme = themes[response.data.defaultTheme];\n            response.data = initUserConfig(response.data);\n            store.dispatch(setSiteConfig(response.data));\n            localStorage.setItem(\n                \"siteConfigCache\",\n                JSON.stringify(response.data)\n            );\n\n            // 偏爱的列表样式\n            const preferListMethod = Auth.GetPreference(\"view_method\");\n            if (preferListMethod) {\n                store.dispatch(changeViewMethod(preferListMethod));\n            } else {\n                if (pathHelper.isSharePage(window.location.pathname)) {\n                    store.dispatch(\n                        changeViewMethod(response.data.share_view_method)\n                    );\n                } else {\n                    store.dispatch(\n                        changeViewMethod(response.data.home_view_method)\n                    );\n                }\n            }\n        })\n        .catch(function (error) {\n            store.dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载站点配置：\" + error.message,\n                    \"error\"\n                )\n            );\n        })\n        .then(function () {\n            enableUploaderLoad(store);\n            store.dispatch(enableLoadUploader());\n        });\n}\n","import { Link, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport pageHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(() => ({\n    icp: {\n        padding: \"8px 24px\",\n        position: \"absolute\",\n        bottom: 0,\n    },\n}));\n\nexport const ICPFooter = () => {\n    const siteICPId = useSelector((state) => state.siteConfig.siteICPId);\n    const classes = useStyles();\n    const location = useLocation();\n    const [show, setShow] = useState(true);\n\n    useEffect(() => {\n        // 只在分享和登录界面显示\n        const isSharePage = pageHelper.isSharePage(location.pathname);\n        const isLoginPage = pageHelper.isLoginPage(location.pathname);\n        setShow(siteICPId && (isSharePage || isLoginPage));\n    }, [siteICPId, location]);\n\n    if (!show) {\n        return <></>;\n    }\n    return (\n        <div className={classes.icp}>\n            {`备案号: `}\n            <Link\n                href=\"https://beian.miit.gov.cn/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                {siteICPId}\n            </Link>\n        </div>\n    );\n};\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst MyLoader = () => (\n    <ContentLoader\n        height={80}\n        width={200}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#e4e4e4\"\n    >\n        <rect x=\"4\" y=\"4\" rx=\"7\" ry=\"7\" width=\"392\" height=\"116\" />\n    </ContentLoader>\n);\n\nfunction captchaPlacholder() {\n    return <MyLoader />;\n}\n\nexport default captchaPlacholder;\n","import React, {\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../actions\";\nimport API from \"../middleware/Api\";\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport Placeholder from \"../component/Placeholder/Captcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\n\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\n    { captchaRef, setLoading },\n    ref\n) {\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then((response) => {\n                setCaptchaData(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        ref.current = refreshCaptcha;\n        refreshCaptcha();\n    }, []);\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"captcha\">验证码</InputLabel>\n                <Input\n                    name=\"captcha\"\n                    onChange={(e) => setCaptcha(e.target.value)}\n                    type=\"text\"\n                    id=\"captcha\"\n                    value={captcha}\n                    autoComplete\n                />\n            </FormControl>{\" \"}\n            <div>\n                {captchaData === null && (\n                    <div className={classes.captchaPlaceholder}>\n                        <Placeholder />\n                    </div>\n                )}\n                {captchaData !== null && (\n                    <img\n                        src={captchaData}\n                        alt=\"captcha\"\n                        onClick={refreshCaptcha}\n                    />\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function Normal() {\n            return (\n                <NormalCaptcha\n                    captchaRef={captchaParamsRef}\n                    ref={captchaRefreshRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, captchaRefreshRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (\n            this.props.grecaptcha &&\n            this.props.grecaptcha.render &&\n            this._widgetId === undefined\n        ) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge,\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (\n            this._executeRequested &&\n            this.props.grecaptcha &&\n            this._widgetId !== undefined\n        ) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\n};\nReCAPTCHA.defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\",\n};\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName,\n})(ReCAPTCHA);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FormControl } from \"@material-ui/core\";\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\n\nconst Recaptcha = ({ captchaRef, setLoading }) => {\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n\n    const reCaptchaKey = useSelector(\n        (state) => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    useEffect(() => setLoading(false), []);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <div>\n                    <ReCaptcha\n                        style={{\n                            display: \"inline-block\",\n                        }}\n                        sitekey={reCaptchaKey}\n                        onChange={(value) => setCaptcha(value)}\n                        id=\"captcha\"\n                        name=\"captcha\"\n                    />\n                </div>\n            </FormControl>{\" \"}\n        </div>\n    );\n};\n\nexport default function useRecaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function RecaptchaRender() {\n            return (\n                <Recaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React, { forwardRef, useCallback, useRef } from \"react\";\nimport Script from \"react-load-script\";\nimport { useSelector } from \"react-redux\";\n\nconst TCaptcha = forwardRef(function TCaptcha(\n    { captchaRef, setLoading, isValidateRef, submitRef },\n    ref\n) {\n    const appid = useSelector(\n        (state) => state.siteConfig.tcaptcha_captcha_app_id\n    );\n    const onLoad = () => {\n        try {\n            ref.current = new window.TencentCaptcha(appid, function (res) {\n                if (res.ret === 0) {\n                    captchaRef.current.ticket = res.ticket;\n                    captchaRef.current.randstr = res.randstr;\n\n                    isValidateRef.current.isValidate = true;\n                    submitRef.current.submit();\n                    console.log(submitRef);\n                } else {\n                    submitRef.current.setLoading(false);\n                }\n            });\n        } catch (e) {\n            console.error(e);\n        }\n        setLoading(false);\n    };\n    return (\n        <Script\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\n            onLoad={onLoad}\n        />\n    );\n});\n\nexport default function useTCaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: false,\n    });\n    const captchaParamsRef = useRef({\n        ticket: \"\",\n        randstr: \"\",\n    });\n    const submitRef = useRef({\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        submit: () => {},\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        setLoading: () => {},\n    });\n\n    const captchaRef = useRef();\n\n    const CaptchaRender = useCallback(\n        function TCaptchaRender() {\n            return (\n                <TCaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                    isValidateRef={isValidate}\n                    submitRef={submitRef}\n                    ref={captchaRef}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef]\n    );\n\n    return {\n        isValidate: isValidate,\n        validate: (submit, setLoading) => {\n            submitRef.current.submit = submit;\n            submitRef.current.setLoading = setLoading;\n            captchaRef.current.show();\n        },\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import { useSelector } from \"react-redux\";\nimport { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useNormalCaptcha from \"./normal\";\nimport useRecaptcha from \"./recaptcha\";\nimport useTCaptcha from \"./tcaptcha\";\n\nexport const useStyle = makeStyles((theme) => ({\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\nexport const defaultValidate = (submit, setLoading) => {};\n\nexport const useCaptcha = () => {\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\n\n    const [captchaLoading, setCaptchaLoading] = useState(true);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const captchaRefreshRef = useRef(() => {});\n\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\n    const recaptcha = useRecaptcha(setCaptchaLoading);\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\n\n    switch (captchaType) {\n        case \"normal\":\n            return { ...normal, captchaRefreshRef, captchaLoading };\n        case \"recaptcha\":\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\n        case \"tcaptcha\":\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\n        default:\n            return { ...normal, captchaRefreshRef, captchaLoading };\n    }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport {\n    applyThemes,\n    setSessionStatus,\n    toggleSnackbar,\n} from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport V1 from \"../../middleware/v1\";\nimport Auth from \"../../middleware/Auth\";\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\nimport { enableUploaderLoad } from \"../../middleware/Init\";\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useLocation } from \"react-router\";\nimport { ICPFooter } from \"../Common/ICPFooter\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    captchaPlaceholder: {\n        width: 200,\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [twoFA, setTwoFA] = useState(false);\n    const [faCode, setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\n    const title = useSelector((state) => state.siteConfig.title);\n    const authn = useSelector((state) => state.siteConfig.authn);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback((theme) => dispatch(applyThemes(theme)), [\n        dispatch,\n    ]);\n    const SetSessionStatus = useCallback(\n        (status) => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const query = useQuery();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n    }, [location]);\n\n    const afterLogin = (data) => {\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n        enableUploaderLoad();\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        history.push(\"/home\");\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    const authnLogin = (e) => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then((response) => {\n                const credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function (listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    }\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey,\n                });\n            })\n            .then((assertion) => {\n                const authData = assertion.response.authenticatorData;\n                const clientDataJSON = assertion.response.clientDataJSON;\n                const rawId = assertion.rawId;\n                const sig = assertion.response.signature;\n                const userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const login = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && loginCaptcha) {\n            validate(() => login(e), setLoading);\n            return;\n        }\n        V1.post(\"/auth/login\",{\n            \"account\":\"admin\",\n            \"password\":\"12345678\",\n        })\n        .then((response) => {\n            localStorage.setItem(\"user_info\", JSON.stringify(response.data.data));\n            V1.get(\"/auth/info\",{\n                headers:{\n                    \"Authorization\":response.data.data.account_token\n                }\n            })\n        })\n        .catch((error) => {});\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setTwoFA(true);\n                } else {\n                    afterLogin(response.data);\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const twoFALogin = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\", {\n            code: faCode,\n        })\n            .then((response) => {\n                setLoading(false);\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA && (\n                <>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            登录 {title}\n                        </Typography>\n                        {!useAuthn && (\n                            <form className={classes.form} onSubmit={login}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"password\">\n                                        密码\n                                    </InputLabel>\n                                    <Input\n                                        name=\"password\"\n                                        onChange={(e) => setPwd(e.target.value)}\n                                        type=\"password\"\n                                        id=\"password\"\n                                        value={pwd}\n                                        autoComplete\n                                    />\n                                </FormControl>\n                                {loginCaptcha && <CaptchaRender />}\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={\n                                        loading ||\n                                        (loginCaptcha ? captchaLoading : false)\n                                    }\n                                    className={classes.submit}\n                                >\n                                    登录\n                                </Button>\n                            </form>\n                        )}\n                        {useAuthn && (\n                            <form className={classes.form}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    onClick={authnLogin}\n                                    className={classes.submit}\n                                >\n                                    下一步\n                                </Button>\n                            </form>\n                        )}\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/signup\"}>注册账号</Link>\n                            </div>\n                        </div>\n\n                        <ICPFooter />\n                    </Paper>\n\n                    {authn && (\n                        <div className={classes.authnLink}>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setUseAuthn(!useAuthn)}\n                            >\n                                {!useAuthn && (\n                                    <>\n                                        <Fingerprint\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        使用外部验证器登录\n                                    </>\n                                )}\n                                {useAuthn && (\n                                    <>\n                                        <VpnKey\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        使用密码登录\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    )}\n                </>\n            )}\n            {twoFA && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <VpnIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        二步验证\n                    </Typography>\n                    <form className={classes.form} onSubmit={twoFALogin}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"code\">\n                                请输入六位二步验证代码\n                            </InputLabel>\n                            <Input\n                                id=\"code\"\n                                type=\"number\"\n                                name=\"code\"\n                                onChange={(event) =>\n                                    setFACode(event.target.value)\n                                }\n                                autoComplete\n                                value={faCode}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            继续登录\n                        </Button>{\" \"}\n                    </form>{\" \"}\n                    <Divider />\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport {\n    withStyles,\n    ButtonBase,\n    Typography,\n    Tooltip,\n    fade,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport statusHelper from \"../../utils/page\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { Folder } from \"@material-ui/icons\";\n\nconst styles = (theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass SmallIconCompoment extends Component {\n    state = {};\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <ButtonBase\n                focusRipple\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected,\n                    },\n                    classes.button\n                )}\n            >\n                <div\n                    onClick={this.props.onIconClick}\n                    className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected,\n                    })}\n                >\n                    {(!isSelected || !isMobile) && (\n                        <>\n                            {this.props.isFolder && <Folder />}\n                            {!this.props.isFolder && (\n                                <TypeIcon fileName={this.props.file.name} />\n                            )}\n                        </>\n                    )}\n                    {isSelected && isMobile && (\n                        <Grow in={isSelected && isMobile}>\n                            <CheckCircleRoundedIcon\n                                className={classes.checkIcon}\n                            />\n                        </Grow>\n                    )}\n                </div>\n                <Tooltip\n                    title={this.props.file.name}\n                    aria-label={this.props.file.name}\n                >\n                    <Typography\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                        variant=\"body2\"\n                    >\n                        {this.props.file.name}\n                    </Typography>\n                </Tooltip>\n            </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SmallIconCompoment));\n\nexport default SmallIcon;\n","import {\n    ButtonBase,\n    Divider,\n    Tooltip,\n    Typography,\n    withStyles,\n    fade,\n} from \"@material-ui/core\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { baseURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport statusHelper from \"../../utils/page\";\nimport Grow from \"@material-ui/core/Grow\";\n\nconst styles = (theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"6px 6px 0 0\",\n        backgroundColor: theme.palette.background.default,\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"5px 5px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\",\n    },\n    iconBig: {\n        fontSize: 50,\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n        height: \"100%\",\n        width: \"100%\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false,\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false,\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected,\n                        },\n                        classes.button\n                    )}\n                >\n                    {this.props.file.pic !== \"\" &&\n                        !this.state.showPicIcon &&\n                        this.props.file.pic !== \" \" &&\n                        this.props.file.pic !== \"null,null\" && (\n                            <div className={classes.preview}>\n                                <LazyLoadImage\n                                    className={classNames({\n                                        [classes.hide]: this.state.loading,\n                                        [classes.picPreview]: !this.state\n                                            .loading,\n                                    })}\n                                    src={\n                                        baseURL +\n                                        (isSharePage\n                                            ? \"/share/thumb/\" +\n                                              window.shareInfo.key +\n                                              \"/\" +\n                                              this.props.file.id +\n                                              \"?path=\" +\n                                              encodeURIComponent(\n                                                  this.props.file.path\n                                              )\n                                            : \"/file/thumb/\" +\n                                              this.props.file.id)\n                                    }\n                                    afterLoad={() =>\n                                        this.setState({ loading: false })\n                                    }\n                                    beforeLoad={() =>\n                                        this.setState({ loading: true })\n                                    }\n                                    onError={() =>\n                                        this.setState({ showPicIcon: true })\n                                    }\n                                />\n                                <ContentLoader\n                                    height={150}\n                                    width={170}\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: !this.state.loading,\n                                        },\n                                        classes.loadingAnimation\n                                    )}\n                                >\n                                    <rect\n                                        x=\"0\"\n                                        y=\"0\"\n                                        width=\"100%\"\n                                        height=\"150\"\n                                    />\n                                </ContentLoader>\n                            </div>\n                        )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && <Divider />}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                onClick={this.props.onIconClick}\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected,\n                                })}\n                            >\n                                {(!isSelected || !isMobile) && (\n                                    <TypeIcon fileName={this.props.file.name} />\n                                )}\n                                {isSelected && isMobile && (\n                                    <Grow in={isSelected && isMobile}>\n                                        <CheckCircleRoundedIcon\n                                            className={classes.checkIcon}\n                                        />\n                                    </Grow>\n                                )}\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]: !isSelected,\n                                    [classes.shareFix]: this.props.share,\n                                })}\n                            >\n                                {this.props.file.name}\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    Typography,\n    Tooltip,\n    makeStyles,\n    fade,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport statusHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nexport default function Folder({ folder, isActive, onIconClick }) {\n    const selected = useSelector((state) => state.explorer.selected);\n    const classes = useStyles();\n    const isMobile = statusHelper.isMobile();\n    const isSelected =\n        selected.findIndex((value) => {\n            return value === folder;\n        }) !== -1;\n\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive,\n                },\n                classes.button\n            )}\n        >\n            <div\n                onClick={onIconClick}\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected,\n                })}\n            >\n                {(!isSelected || !isMobile) && <FolderIcon />}\n                {isSelected && isMobile && (\n                    <CheckCircleRoundedIcon className={classes.checkIcon} />\n                )}\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected,\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Folder from \"../Folder\";\n\nconst useStyles = makeStyles(() => ({\n    dragging: {\n        width: \"200px\",\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\",\n    },\n}));\n\nconst diliverIcon = (object, viewMethod, classes) => {\n    if (object.type === \"dir\") {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} isFolder />\n            </div>\n        );\n    }\n    if (object.type === \"file\" && viewMethod === \"icon\") {\n        return (\n            <div className={classes.dragging}>\n                <FileIcon file={object} />\n            </div>\n        );\n    }\n    if (\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\n        viewMethod === \"list\"\n    ) {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} />\n            </div>\n        );\n    }\n};\n\nconst Preview = (props) => {\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 &&\n                diliverIcon(props.object, viewMethod, classes)}\n            {selected.length > 0 && (\n                <>\n                    {selected.slice(0, 3).map((card, i) => (\n                        <div\n                            key={card.id}\n                            className={classes.cardDragged}\n                            style={{\n                                zIndex: selected.length - i,\n                                transform: `rotateZ(${-i * 2.5}deg)`,\n                            }}\n                        >\n                            {diliverIcon(card, viewMethod, classes)}\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\nexport default Preview;\n","import React from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport Preview from \"./Preview\";\nimport { useSelector } from \"react-redux\";\nconst layerStyles = {\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n};\n\nfunction getItemStyles(\n    initialOffset,\n    currentOffset,\n    pointerOffset,\n    viewMethod\n) {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: \"none\",\n        };\n    }\n    let { x, y } = currentOffset;\n    if (viewMethod === \"list\") {\n        x += pointerOffset.x - initialOffset.x;\n        y += pointerOffset.y - initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        opacity: 0.5,\n        transform,\n        WebkitTransform: transform,\n    };\n}\nconst CustomDragLayer = (props) => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset,\n        pointerOffset,\n    } = useDragLayer((monitor) => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        pointerOffset: monitor.getInitialClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    function renderItem() {\n        switch (itemType) {\n            case \"object\":\n                return <Preview object={item.object} />;\n            default:\n                return null;\n        }\n    }\n    if (!isDragging) {\n        return null;\n    }\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialOffset,\n                    currentOffset,\n                    pointerOffset,\n                    viewMethod\n                )}\n            >\n                {renderItem()}\n            </div>\n        </div>\n    );\n};\nexport default CustomDragLayer;\n","import * as actions from \"./action\";\nimport * as reducers from \"./reducer\";\n\nexport default {\n    actions,\n    reducers,\n};\n","import {\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { FolderUpload, MagnetOn, FilePlus } from \"mdi-material-ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    openCompressDialog,\n    openCreateFileDialog,\n    refreshFileList,\n} from \"../../actions\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    openCopyDialog,\n    openCreateFolderDialog,\n    openDecompressDialog,\n    openGetSourceDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openRemoteDownloadDialog,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    openTorrentDownloadDialog,\n    setNavigatorLoadingStatus,\n    setSelectedTarget,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../actions/index\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport Auth from \"../../middleware/Auth\";\nimport { allowSharePreview } from \"../../utils/index\";\nimport pathHelper from \"../../utils/page\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { openPreview } from \"../../actions\";\nimport {\n    setSideBar,\n    toggleObjectInfoSidebar,\n} from \"../../redux/explorer/action\";\n\nconst styles = () => ({\n    propover: {},\n    divider: {\n        marginTop: 4,\n        marginBottom: 4,\n    },\n});\n\nconst StyledListItemIcon = withStyles({\n    root: {\n        minWidth: 38,\n    },\n})(ListItemIcon);\n\nconst mapStateToProps = (state) => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        keywords: state.explorer.keywords,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownloadDialog());\n        },\n        openGetSourceDialog: () => {\n            dispatch(openGetSourceDialog());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        openPreview: () => {\n            dispatch(openPreview());\n        },\n        toggleObjectInfoSidebar: (open) => {\n            dispatch(toggleObjectInfoSidebar(open));\n        },\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = (e) => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            this.props.changeContextMenu(\"file\", false);\n            return;\n        }\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    enterFolder = () => {\n        this.props.navigateTo(\n            this.props.path === \"/\"\n                ? this.props.path + this.props.selected[0].name\n                : this.props.path + \"/\" + this.props.selected[0].name\n        );\n    };\n\n    clickUpload = (id) => {\n        this.props.changeContextMenu(\"empty\", false);\n        const uploadButton = document.getElementsByClassName(id)[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"上传组件还未加载完成\",\n                \"warning\"\n            );\n        }\n    };\n\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\n    renderMenuItems = (items) => {\n        const res = [];\n        let key = 0;\n\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\n            let visibleCount = 0;\n            items[position].forEach((item) => {\n                if (item.condition) {\n                    res.push(\n                        <MenuItem dense key={key} onClick={item.onClick}>\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <Typography variant=\"inherit\">\n                                {item.text}\n                            </Typography>\n                        </MenuItem>\n                    );\n                    key++;\n                    visibleCount++;\n                }\n            });\n            if (visibleCount > 0 && position != \"bottom\") {\n                res.push(\n                    <Divider key={key} className={this.props.classes.divider} />\n                );\n                key++;\n            }\n        });\n\n        return res;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const emptyMenuList = {\n            top: [\n                {\n                    condition: true,\n                    onClick: () => {\n                        this.props.refreshFileList();\n                        this.props.changeContextMenu(\n                            this.props.menuType,\n                            false\n                        );\n                    },\n                    icon: <RefreshIcon />,\n                    text: \"刷新\",\n                },\n            ],\n            center: [\n                {\n                    condition: true,\n                    onClick: () => this.clickUpload(\"uploadFileForm\"),\n                    icon: <UploadIcon />,\n                    text: \"上传文件\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.clickUpload(\"uploadFolderForm\"),\n                    icon: <FolderUpload />,\n                    text: \"上传目录\",\n                },\n                {\n                    condition: user.group.allowRemoteDownload,\n                    onClick: () => this.props.openRemoteDownloadDialog(),\n                    icon: <DownloadIcon />,\n                    text: \"离线下载\",\n                },\n            ],\n            bottom: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFolderDialog(),\n                    icon: <NewFolderIcon />,\n                    text: \"创建文件夹\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFileDialog(),\n                    icon: <FilePlus />,\n                    text: \"创建文件\",\n                },\n            ],\n        };\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <div>\n                            <MenuItem\n                                dense\n                                onClick={() => {\n                                    this.props.refreshFileList();\n                                    this.props.changeContextMenu(\n                                        this.props.menuType,\n                                        false\n                                    );\n                                }}\n                            >\n                                <StyledListItemIcon>\n                                    <RefreshIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">刷新</Typography>\n                            </MenuItem>\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.clickUpload(\"uploadFileForm\")\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <UploadIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传文件\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.clickUpload(\"uploadFolderForm\")\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <FolderUpload />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传目录\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        离线下载\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <NewFolderIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件夹\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFileDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <FilePlus />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件\n                                </Typography>\n                            </MenuItem>\n                        </div>\n                    )}\n                    {this.props.menuType !== \"empty\" && (\n                        <div>\n                            {!this.props.isMultiple && this.props.withFolder && (\n                                <div>\n                                    <MenuItem dense onClick={this.enterFolder}>\n                                        <StyledListItemIcon>\n                                            <OpenFolderIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            进入\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <div>\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openPreview()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <OpenIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                打开\n                                            </Typography>\n                                        </MenuItem>\n                                    </div>\n                                )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() => this.openDownload()}\n                                    >\n                                        <StyledListItemIcon>\n                                            <DownloadIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            下载\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n\n                            {(this.props.isMultiple || this.props.withFolder) &&\n                                (user.group.allowArchiveDownload ||\n                                    !isHomePage) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.openArchiveDownload()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DownloadIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            打包下载\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                isHomePage &&\n                                user.policy.allowSource && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openGetSourceDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <LinkIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            获取外链\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <MagnetOn />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            创建离线下载任务\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <Unarchive />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            解压缩\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <Archive />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建压缩文件\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <StyledListItemIcon>\n                                        <ShareIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建分享链接\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.toggleObjectInfoSidebar(true)\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <InfoOutlined />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        详细信息\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <Divider className={classes.divider} />\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <RenameIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            重命名\n                                        </Typography>\n                                    </MenuItem>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <FileCopyIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                复制\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n                                </div>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <MoveIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                移动\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        dense\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DeleteIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            删除\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired,\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ContextMenuCompoment)));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../utils/index\";\nimport {\n    withStyles,\n    TableCell,\n    TableRow,\n    Typography,\n    fade,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport statusHelper from \"../../utils/page\";\nimport Grow from \"@material-ui/core/Grow\";\nimport dayjs from \"dayjs\";\nimport { formatLocalTime } from \"../../utils/datetime\";\n\nconst styles = (theme) => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary,\n    },\n    tableIcon: {\n        marginRight: \"20px\",\n        verticalAlign: \"middle\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\",\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    tableRow: {\n        padding: \"10px 16px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    active: {\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        } else if (this.props.file.type === \"up\") {\n            icon = <KeyboardReturnIcon className={classes.icon} />;\n        } else {\n            icon = (\n                <TypeIcon\n                    className={classes.tableIcon}\n                    fileName={this.props.file.name}\n                />\n            );\n        }\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <TableRow\n                ref={this.props.pref}\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames({\n                    [classes.selected]: isSelected && !isShare,\n                    [classes.selectedShared]: isSelected && isShare,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: this.props.isActive,\n                })}\n            >\n                <TableCell\n                    ref={this.props.dref}\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.tableRow}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        <div\n                            onClick={\n                                this.props.file.type !== \"up\"\n                                    ? this.props.onIconClick\n                                    : null\n                            }\n                        >\n                            {(!isSelected || !isMobile) && icon}\n                            {isSelected && isMobile && (\n                                <Grow in={isSelected && isMobile}>\n                                    <CheckCircleRoundedIcon\n                                        className={classNames(\n                                            classes.checkIcon,\n                                            classes.icon\n                                        )}\n                                    />\n                                </Grow>\n                            )}\n                        </div>\n                        {this.props.file.name}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&\n                            this.props.file.type !== \"up\" &&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {formatLocalTime(\n                            this.props.file.date,\n                            \"YYYY-MM-DD H:mm:ss\"\n                        )}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\";\nimport classNames from \"classnames\";\nimport TableItem from \"../TableRow\";\nexport default function FolderDropWarpper({\n    isListView,\n    folder,\n    onIconClick,\n    contextMenu,\n    handleClick,\n    handleDoubleClick,\n    className,\n    pref,\n}) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n    const isActive = canDrop && isOver;\n    if (!isListView) {\n        return (\n            <div ref={drop}>\n                <Folder\n                    folder={folder}\n                    onIconClick={onIconClick}\n                    isActive={isActive}\n                />\n            </div>\n        );\n    }\n    return (\n        <TableItem\n            pref={pref}\n            dref={drop}\n            className={className}\n            onIconClick={onIconClick}\n            contextMenu={contextMenu}\n            handleClick={handleClick}\n            handleDoubleClick={handleDoubleClick}\n            file={folder}\n            isActive={isActive}\n        />\n    );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    changeContextMenu,\n    setSelectedTarget,\n    selectFile as selectFileAction,\n    navigateTo,\n    showImgPreivew,\n    openMusicDialog,\n    toggleSnackbar,\n    dragAndDrop,\n    openLoadingDialog,\n} from \"../../actions/index\";\nimport statusHelper from \"../../utils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { isPreviewable } from \"../../config\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport { pathBack } from \"../../utils\";\nimport { openPreview } from \"../../actions\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: \"7px\",\n    },\n    fixFlex: {\n        minWidth: 0,\n    },\n    dragging: {\n        opacity: 0.4,\n    },\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector((state) => state.navigator.path);\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const navigatorPath = useSelector((state) => state.navigator.path);\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n\n    const NavitateTo = useCallback((targets) => dispatch(navigateTo(targets)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch]\n    );\n    const OpenLoadingDialog = useCallback(\n        (text) => dispatch(openLoadingDialog(text)),\n        [dispatch]\n    );\n    const OpenPreview = useCallback(() => dispatch(openPreview()), [dispatch]);\n\n    const classes = useStyles();\n\n    const contextMenu = (e) => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex((value) => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const selectFile = (e) => {\n        dispatch(selectFileAction(props.file, e, props.index));\n    };\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\n        );\n    };\n    const handleClick = (e) => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n        }\n        if (\n            statusHelper.isMobile() ||\n            statusHelper.isSharePage(location.pathname)\n        ) {\n            selectFile(e);\n            if (props.file.type === \"dir\" && !e.ctrlKey) {\n                enterFolder();\n                return;\n            }\n        } else {\n            selectFile(e);\n        }\n    };\n\n    const handleDoubleClick = () => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n        const isShare = statusHelper.isSharePage(location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                ToggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\");\n                return;\n            }\n        }\n        if (window.shareInfo && !window.shareInfo.preview) {\n            OpenLoadingDialog(\"获取下载地址...\");\n            return;\n        }\n\n        OpenPreview();\n    };\n\n    const handleIconClick = (e) => {\n        if (statusHelper.isMobile()) {\n            e.stopPropagation();\n            e.ctrlKey = true;\n            selectFile(e);\n            return false;\n        }\n    };\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod,\n        },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <>\n                {props.file.type === \"dir\" && (\n                    <DropWarpper\n                        isListView={true}\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type !== \"dir\" && (\n                    <TableItem\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        file={props.file}\n                    />\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging,\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper\n                        isListView={false}\n                        onIconClick={handleIconClick}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon\n                        onIconClick={handleIconClick}\n                        ref={drag}\n                        file={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon\n                        onIconClick={handleIconClick}\n                        file={props.file}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n","import {\n    CircularProgress,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport SadIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport EmptyIcon from \"@material-ui/icons/Unarchive\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    navigateUp,\n    openRemoveDialog,\n    setSelectedTarget,\n} from \"../../actions/index\";\nimport explorer from \"../../redux/explorer\";\nimport { isMac } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport ContextMenu from \"./ContextMenu\";\nimport ImgPreivew from \"./ImgPreview\";\nimport ObjectIcon from \"./ObjectIcon\";\n\nconst styles = (theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\",\n    },\n    root: {\n        flexGrow: 1,\n        padding: \"10px\",\n        overflowY: \"auto\",\n        height: \"calc(100vh - 113px)\",\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\",\n        },\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\",\n        },\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\",\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\",\n    },\n    errorBox: {\n        padding: theme.spacing(4),\n    },\n    errorMsg: {\n        marginTop: \"10px\",\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: theme.palette.text.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyIcon: {\n        fontSize: \"160px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.text.disabled,\n    },\n    emptyInfoSmall: {\n        color: theme.palette.text.hint,\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    flexFix: {\n        minWidth: 0,\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\",\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        sortMethod: state.viewUpdate.sortMethod,\n        fileList: state.explorer.fileList,\n        dirList: state.explorer.dirList,\n        loading: state.viewUpdate.navigatorLoading,\n        navigatorError: state.viewUpdate.navigatorError,\n        navigatorErrorMsg: state.viewUpdate.navigatorErrorMsg,\n        keywords: state.explorer.keywords,\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigateToPath: (path) => {\n            dispatch(navigateTo(path));\n        },\n\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        changeSort: (method) => {\n            dispatch(explorer.actions.changeSortMethod(method));\n        },\n    };\n};\n\nclass ExplorerCompoment extends Component {\n    constructor() {\n        super();\n        this.keyMap = {\n            DELETE_FILE: \"del\",\n            SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+a`,\n        };\n\n        this.handlers = {\n            DELETE_FILE: () => {\n                if (this.props.selected.length > 0 && !this.props.share) {\n                    this.props.openRemoveDialog();\n                }\n            },\n            SELECT_ALL: (e) => {\n                e.preventDefault();\n                if (\n                    this.props.selected.length >=\n                    this.props.dirList.length + this.props.fileList.length\n                ) {\n                    this.props.setSelectedTarget([]);\n                } else {\n                    this.props.setSelectedTarget([\n                        ...this.props.dirList,\n                        ...this.props.fileList,\n                    ]);\n                }\n            },\n        };\n\n        configure({\n            ignoreTags: [\"input\", \"select\", \"textarea\"],\n        });\n    }\n\n    contextMenu = (e) => {\n        e.preventDefault();\n        if (\n            this.props.keywords === \"\" &&\n            !pathHelper.isSharePage(this.props.location.pathname)\n        ) {\n            if (!this.props.loading) {\n                this.props.changeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    componentDidUpdate() {\n        this.away = 0;\n    }\n\n    ClickAway = (e) => {\n        const element = e.target;\n        if (element.dataset.clickaway) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        const showView =\n            !this.props.loading &&\n            (this.props.dirList.length !== 0 ||\n                this.props.fileList.length !== 0);\n        const listView = (\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"namePos\" ||\n                                    this.props.sortMethod === \"nameRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"namePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"namePos\"\n                                            ? \"nameRev\"\n                                            : \"namePos\"\n                                    );\n                                }}\n                            >\n                                名称\n                                {this.props.sortMethod === \"namePos\" ||\n                                this.props.sortMethod === \"nameRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"nameRev\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"sizePos\" ||\n                                    this.props.sortMethod === \"sizeRes\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"sizePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"sizePos\"\n                                            ? \"sizeRes\"\n                                            : \"sizePos\"\n                                    );\n                                }}\n                            >\n                                大小\n                                {this.props.sortMethod === \"sizePos\" ||\n                                this.props.sortMethod === \"sizeRes\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"timePos\" ||\n                                    this.props.sortMethod === \"timeRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"timePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"timePos\"\n                                            ? \"timeRev\"\n                                            : \"timePos\"\n                                    );\n                                }}\n                            >\n                                日期\n                                {this.props.sortMethod === \"timePos\" ||\n                                this.props.sortMethod === \"timeRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pathHelper.isMobile() && this.props.path !== \"/\" && (\n                        <ObjectIcon\n                            file={{\n                                type: \"up\",\n                                name: \"上级目录\",\n                            }}\n                        />\n                    )}\n                    {this.props.dirList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                    {this.props.fileList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                </TableBody>\n            </Table>\n        );\n\n        const normalView = (\n            <div className={classes.flexFix}>\n                {this.props.dirList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件夹\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                        >\n                            {this.props.dirList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    xs={6}\n                                    md={3}\n                                    sm={4}\n                                    lg={2}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        file={value}\n                                        index={index}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n                {this.props.fileList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                        >\n                            {this.props.fileList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    xs={6}\n                                    md={3}\n                                    sm={4}\n                                    lg={2}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        index={index}\n                                        file={value}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n            </div>\n        );\n        const view = this.props.viewMethod === \"list\" ? listView : normalView;\n        return (\n            <div\n                onContextMenu={this.contextMenu}\n                onClick={this.ClickAway}\n                className={classNames(\n                    {\n                        [classes.root]: this.props.viewMethod !== \"list\",\n                        [classes.rootTable]: this.props.viewMethod === \"list\",\n                        [classes.rootShare]: this.props.share,\n                    },\n                    classes.button\n                )}\n            >\n                <GlobalHotKeys handlers={this.handlers} keyMap={this.keyMap} />\n                <ContextMenu share={this.props.share} />\n                <ImgPreivew />\n                {this.props.navigatorError && (\n                    <Paper elevation={1} className={classes.errorBox}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            :( 请求时出现错误\n                        </Typography>\n                        <Typography\n                            color={\"textSecondary\"}\n                            className={classes.errorMsg}\n                        >\n                            {this.props.navigatorErrorMsg.message}\n                        </Typography>\n                    </Paper>\n                )}\n\n                {this.props.loading && !this.props.navigatorError && (\n                    <div className={classes.loading}>\n                        <CircularProgress />\n                    </div>\n                )}\n\n                {this.props.keywords === \"\" &&\n                    isHomePage &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError && (\n                        <div className={classes.emptyContainer}>\n                            <EmptyIcon className={classes.emptyIcon} />\n                            <div className={classes.emptyInfoBig}>\n                                拖拽文件至此\n                            </div>\n                            <div className={classes.emptyInfoSmall}>\n                                或点击右下方“上传文件”按钮添加文件\n                            </div>\n                        </div>\n                    )}\n                {((this.props.keywords !== \"\" &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError) ||\n                    (this.props.dirList.length === 0 &&\n                        this.props.fileList.length === 0 &&\n                        !this.props.loading &&\n                        !this.props.navigatorError &&\n                        !isHomePage)) && (\n                    <div className={classes.emptyContainer}>\n                        <SadIcon className={classes.emptyIcon} />\n                        <div className={classes.emptyInfoBig}>\n                            什么都没有找到\n                        </div>\n                    </div>\n                )}\n                {showView && view}\n            </div>\n        );\n    }\n}\n\nExplorerCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n};\n\nconst Explorer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ExplorerCompoment)));\n\nexport default Explorer;\n","import React, { useEffect } from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    button: {\n        textTransform: \"none\",\n    },\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder,\n                    },\n                };\n            }\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (props.more && isActive) {\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <span onClick={props.onClick} ref={inputRef}>\n            <Button\n                ref={drop}\n                className={classNames(\n                    {\n                        [classes.active]: isActive,\n                    },\n                    classes.button\n                )}\n                component=\"span\"\n                title={props.title}\n            >\n                {props.more && <MoreIcon />}\n                {!props.more && (\n                    <>\n                        {props.folder}\n                        {props.last && (\n                            <ExpandMore className={classes.expandMore} />\n                        )}\n                    </>\n                )}\n            </Button>\n        </span>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light,\n    },\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder,\n                },\n            });\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id, isActive);\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive,\n            })}\n            onClick={(e) => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\nexport default function DropDown(props) {\n    let timer;\n    let first = props.folders.length;\n    const status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n    }\n\n    const setActiveStatus = (id, value) => {\n        status[id] = value;\n        if (value) {\n            clearTimeout(timer);\n        } else {\n            let shouldClose = true;\n            status.forEach((element) => {\n                if (element) {\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose) {\n                if (first <= 0) {\n                    timer = setTimeout(() => {\n                        props.onClose();\n                    }, 100);\n                } else {\n                    first--;\n                }\n            }\n        }\n        console.log(status);\n    };\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    key={id}\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus={setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    navigateTo,\n    navigateUp,\n    setNavigatorError,\n    setNavigatorLoadingStatus,\n    refreshFileList,\n    setSelectedTarget,\n    openCreateFolderDialog,\n    openShareDialog,\n    drawerToggleAction,\n    openCompressDialog,\n} from \"../../../actions/index\";\nimport explorer from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { setCookie, setGetParameter, fixUrlHash } from \"../../../utils/index\";\nimport {\n    withStyles,\n    Divider,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../utils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Archive } from \"@material-ui/icons\";\nimport { FilePlus } from \"mdi-material-ui\";\nimport { openCreateFileDialog } from \"../../../actions\";\nimport SubActions from \"./SubActions\";\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        keywords: state.explorer.keywords,\n        sortMethod: state.viewUpdate.sortMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigateToPath: (path) => {\n            dispatch(navigateTo(path));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: (list) => {\n            dispatch(explorer.actions.updateFileList(list));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: (target) => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n    };\n};\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst styles = (theme) => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        height: \"49px\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper,\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\",\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\",\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\",\n    },\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\",\n    },\n});\n\nclass NavigatorComponent extends Component {\n    keywords = \"\";\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        const url = new URL(fixUrlHash(window.location.href));\n        const c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\" : c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n\n        // 后退操作时重新导航\n        window.onpopstate = () => {\n            const url = new URL(fixUrlHash(window.location.href));\n            const c = url.searchParams.get(\"path\");\n            if (c !== null) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\"),\n        });\n        let newPath = path !== null ? path : this.props.path;\n        const apiURL = this.props.share\n            ? \"/share/list/\" + this.props.share.key\n            : this.keywords === \"\"\n            ? \"/directory\"\n            : \"/file/search/\";\n        newPath = this.keywords === \"\" ? newPath : this.keywords;\n\n        API.get(apiURL + encodeURIComponent(newPath))\n            .then((response) => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                const pathTemp = (path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\")\n                ).join(\",\");\n                setCookie(\"path_tmp\", encodeURIComponent(pathTemp), 1);\n                if (this.keywords === \"\") {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n            })\n            .catch((error) => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = (path) => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.keywords !== nextProps.keywords) {\n            this.keywords = nextProps.keywords;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = (force) => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = (e) => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    performAction = (e) => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        const presentPath = this.props.path.split(\"/\");\n        const newTarget = [\n            {\n                id: this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\n            },\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            case \"newFile\":\n                this.props.openCreateFileDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        const presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    刷新\n                </MenuItem>\n                {this.props.keywords === \"\" && isHomePage && (\n                    <div>\n                        <Divider />\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            分享\n                        </MenuItem>\n                        {user.group.compress && (\n                            <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                压缩\n                            </MenuItem>\n                        )}\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.performAction(\"newfolder\")}\n                        >\n                            <ListItemIcon>\n                                <NewFolderIcon />\n                            </ListItemIcon>\n                            创建文件夹\n                        </MenuItem>\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\n                            <ListItemIcon>\n                                <FilePlus />\n                            </ListItemIcon>\n                            创建文件\n                        </MenuItem>\n                    </div>\n                )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare,\n                    },\n                    classes.container\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        <span>\n                            <PathButton\n                                folder=\"/\"\n                                path=\"/\"\n                                onClick={(e) => this.navigateTo(e, -1)}\n                            />\n                            <RightIcon className={classes.rightIcon} />\n                        </span>\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title=\"显示路径\"\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                {/* <Button component=\"span\" onClick={(e)=>this.navigateTo(e,this.state.folders.length-1)}>\n                                    {this.state.folders.slice(-1)}  \n                                    <ExpandMore className={classes.expandMore}/>\n                                </Button> */}\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={(e) =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={(e) =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        <SubActions isSmall share={this.props.share} />\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(NavigatorComponent)));\n\nexport default Navigator;\n","import React from \"react\";\nimport { BulletList } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"100%\",\n        // padding: 40,\n        // [theme.breakpoints.down(\"md\")]: {\n        //     width: \"100%\",\n        //     padding: 10\n        // }\n    },\n}));\n\nconst MyLoader = (props) => (\n    <BulletList\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction ListLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default ListLoading;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Clear, Folder } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { setSideBar } from \"../../../redux/explorer/action\";\nimport TypeIcon from \"../TypeIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../../middleware/Api\";\nimport { navigateTo, toggleSnackbar } from \"../../../actions\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TimeAgo from \"timeago-react\";\nimport ListLoading from \"../../Placeholder/ListLoading\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        boxShadow:\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    header: {\n        display: \"flex\",\n        padding: theme.spacing(3),\n        placeContent: \"space-between\",\n    },\n    fileIcon: { width: 33, height: 33 },\n    fileIconSVG: { fontSize: 20 },\n    folderIcon: {\n        color: theme.palette.text.secondary,\n        width: 33,\n        height: 33,\n    },\n    fileName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        wordBreak: \"break-all\",\n        flexGrow: 2,\n    },\n    closeIcon: {\n        placeSelf: \"flex-start\",\n        marginTop: 2,\n    },\n    propsContainer: {\n        padding: theme.spacing(3),\n    },\n    propsLabel: {\n        color: theme.palette.text.secondary,\n        padding: theme.spacing(1),\n    },\n    propsTime: {\n        color: theme.palette.text.disabled,\n        padding: theme.spacing(1),\n    },\n    propsValue: {\n        padding: theme.spacing(1),\n        wordBreak: \"break-all\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SideDrawer() {\n    const dispatch = useDispatch();\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\n    const selected = useSelector((state) => state.explorer.selected);\n    const SetSideBar = useCallback((open) => dispatch(setSideBar(open)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const keywords = useSelector((state) => state.explorer.keywords);\n    const [target, setTarget] = useState(null);\n    const [details, setDetails] = useState(null);\n    const loadProps = (object) => {\n        API.get(\n            \"/object/property/\" +\n                object.id +\n                \"?trace_root=\" +\n                (keywords !== \"\" ? \"true\" : \"false\") +\n                \"&is_folder=\" +\n                (object.type === \"dir\").toString()\n        )\n            .then((response) => {\n                setDetails(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        setDetails(null);\n        if (sideBarOpen) {\n            if (selected.length !== 1) {\n                SetSideBar(false);\n            } else {\n                setTarget(selected[0]);\n                loadProps(selected[0]);\n            }\n        }\n    }, [selected, sideBarOpen]);\n\n    const classes = useStyles();\n    const propsItem = [\n        {\n            label: \"大小\",\n            value: (d, t) =>\n                sizeToString(d.size) +\n                \"  (\" +\n                d.size.toLocaleString() +\n                \" 字节)\",\n            show: (d) => true,\n        },\n        {\n            label: \"存储策略\",\n            value: (d, t) => d.policy,\n            show: (d) => d.type === \"file\",\n        },\n        {\n            label: \"包含目录\",\n            value: (d, t) => d.child_folder_num.toLocaleString() + \" \" + \"个\",\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: \"包含文件\",\n            value: (d, t) => d.child_file_num.toLocaleString() + \" \" + \"个\",\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: \"所在目录\",\n            // eslint-disable-next-line react/display-name\n            value: (d, t) => {\n                const path = d.path === \"\" ? t.path : d.path;\n                const name = filename(path);\n                return (\n                    <Tooltip title={path}>\n                        <Link\n                            href={\"javascript:void\"}\n                            onClick={() => NavigateTo(path)}\n                        >\n                            {name === \"\" ? \"根目录\" : name}\n                        </Link>\n                    </Tooltip>\n                );\n            },\n            show: (d) => true,\n        },\n        {\n            label: \"修改于\",\n            value: (d, t) =>\n                formatLocalTime(d.updated_at, \"YYYY/MM/DD  H:mm:ss\"),\n            show: (d) => true,\n        },\n        {\n            label: \"创建于\",\n            value: (d) => formatLocalTime(d.created_at, \"YYYY/MM/DD  H:mm:ss\"),\n            show: (d) => true,\n        },\n    ];\n    const content = (\n        <Grid container className={classes.propsContainer}>\n            {!details && <ListLoading />}\n            {details && (\n                <>\n                    {propsItem.map((item) => {\n                        if (item.show(target)) {\n                            return (\n                                <>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.propsLabel}\n                                    >\n                                        {item.label}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.propsValue}\n                                    >\n                                        {item.value(details, target)}\n                                    </Grid>\n                                </>\n                            );\n                        }\n                    })}\n                    {target.type === \"dir\" && (\n                        <Grid item xs={12} className={classes.propsTime}>\n                            统计于{\" \"}\n                            <TimeAgo\n                                datetime={details.query_date}\n                                locale=\"zh_CN\"\n                            />\n                        </Grid>\n                    )}\n                </>\n            )}\n        </Grid>\n    );\n    return (\n        <>\n            <Hidden smUp>\n                <Dialog\n                    fullScreen\n                    open={sideBarOpen}\n                    TransitionComponent={Transition}\n                >\n                    {target && (\n                        <>\n                            <AppBar className={classes.appBar}>\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        color=\"inherit\"\n                                        onClick={() => SetSideBar(false)}\n                                        aria-label=\"close\"\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        {target.name}\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            {content}\n                        </>\n                    )}\n                </Dialog>\n            </Hidden>\n            <Hidden xsDown>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    open={sideBarOpen}\n                    anchor=\"right\"\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        {target && (\n                            <>\n                                <div className={classes.header}>\n                                    {target.type === \"dir\" && (\n                                        <Folder\n                                            className={classes.folderIcon}\n                                        />\n                                    )}\n                                    {target.type !== \"dir\" && (\n                                        <TypeIcon\n                                            isUpload\n                                            className={classes.fileIcon}\n                                            iconClassName={classes.fileIconSVG}\n                                            fileName={target.name}\n                                        />\n                                    )}\n                                    <div className={classes.fileName}>\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            {target.name}\n                                        </Typography>\n                                    </div>\n                                    <IconButton\n                                        onClick={() => SetSideBar(false)}\n                                        className={classes.closeIcon}\n                                        aria-label=\"close\"\n                                        size={\"small\"}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                </div>\n                            </>\n                        )}\n                        <Divider />\n                        {content}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    closeAllModals,\n    navigateTo,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport DragLayer from \"./DnD/DragLayer\";\nimport Explorer from \"./Explorer\";\nimport Modals from \"./Modals\";\nimport Navigator from \"./Navigator/Navigator\";\nimport SideDrawer from \"./Sidebar/SideDrawer\";\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSubTitle: (text) => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n    };\n};\n\nclass FileManager extends Component {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n    }\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navigateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            this.props.changeSubTitle(null);\n        }\n    }\n    render() {\n        return (\n            <div>\n                <DndProvider backend={HTML5Backend}>\n                    <Modals share={this.props.share} />\n                    <Navigator\n                        isShare={this.props.isShare}\n                        share={this.props.share}\n                    />\n                    <Explorer share={this.props.share} />\n                    <DragLayer />\n                </DndProvider>\n                <SideDrawer />\n            </div>\n        );\n    }\n}\n\nFileManager.propTypes = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(FileManager));\n","import React, { useCallback, useEffect } from \"react\";\nimport DPlayer from \"react-dplayer\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { getBaseURL } from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer() {\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <DPlayer\n                    className={classes.player}\n                    options={{\n                        video: {\n                            url:\n                                getBaseURL() +\n                                (pathHelper.isSharePage(location.pathname)\n                                    ? \"/share/preview/\" +\n                                      id +\n                                      (query.get(\"share_path\") !== \"\"\n                                          ? \"?path=\" +\n                                            encodeURIComponent(\n                                                query.get(\"share_path\")\n                                            )\n                                          : \"\")\n                                    : \"/file/preview/\" + query.get(\"id\")),\n                        },\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    Typography,\n    Grid,\n    IconButton,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const query = useQuery();\n    const location = useLocation();\n    const history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = useCallback((keywords, page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords)\n        )\n            .then((response) => {\n                if (response.data.items.length === 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"找不到符合条件的分享\",\n                        \"info\"\n                    );\n                }\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(() => {\n                ToggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    }, []);\n\n    useEffect(() => {\n        const keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"请输入搜索关键词\", \"warning\");\n        }\n    }, [location]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = (event) => {\n        setOrderBy(event.target.value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        搜索结果\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                创建日期由晚到早\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                创建日期由早到晚\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                下载次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                下载次数由小到大\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                浏览次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                浏览次数由小到大\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.map((value) => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\"/s/\" + value.key)\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"}{\" \"}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={\n                                    <span>\n                                        分享于{\" \"}\n                                        <TimeAgo\n                                            datetime={value.create_date}\n                                            locale=\"zh_CN\"\n                                        />\n                                    </span>\n                                }\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    withStyles,\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    CardActions,\n    Typography,\n    Grid,\n    IconButton,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Button,\n    TextField,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withRouter } from \"react-router-dom\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { formatLocalTime } from \"../../utils/datetime\";\n\nconst styles = (theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy: \"created_at DESC\",\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, this.state.orderBy);\n    };\n\n    showPwd = (pwd) => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = (id) => {\n        API.delete(\"/share/\" + id)\n            .then(() => {\n                let oldList = this.state.shareList;\n                oldList = oldList.filter((value) => {\n                    return value.key !== id;\n                });\n                this.setState({\n                    shareList: oldList,\n                    total: this.state.total - 1,\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"分享已取消\",\n                    \"success\"\n                );\n                if (oldList.length === 0) {\n                    this.loadList(1, this.state.orderBy);\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePermission = (id) => {\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"password\",\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\n        })\n            .then((response) => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePreviewOption = (id) => {\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"preview_enabled\",\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\n        })\n            .then((response) => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadList = (page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1]\n        )\n            .then((response) => {\n                if (response.data.items.length === 0) {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"没有更多了\",\n                        \"info\"\n                    );\n                }\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value,\n        });\n        this.loadList(value, this.state.orderBy);\n    };\n\n    handleOrderChange = (event) => {\n        this.setState({\n            orderBy: event.target.value,\n        });\n        this.loadList(this.state.page, event.target.value);\n    };\n\n    isExpired = (share) => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n                            我的分享\n                        </Typography>\n                    </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select\n                                color={\"secondary\"}\n                                onChange={this.handleOrderChange}\n                                value={this.state.orderBy}\n                            >\n                                <MenuItem value={\"created_at DESC\"}>\n                                    创建日期由晚到早\n                                </MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>\n                                    创建日期由早到晚\n                                </MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>\n                                    下载次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>\n                                    下载次数由小到大\n                                </MenuItem>\n                                <MenuItem value={\"views DESC\"}>\n                                    浏览次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"views ASC\"}>\n                                    浏览次数由小到大\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={24} className={classes.gird}>\n                    {this.state.shareList.map((value) => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"}{\" \"}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {formatLocalTime(\n                                                value.create_date,\n                                                \"YYYY-MM-DD H:mm:ss\"\n                                            )}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label=\"已失效\"\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\",\n                                    }}\n                                >\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/s/\" +\n                                                        value.key +\n                                                        (value.password === \"\"\n                                                            ? \"\"\n                                                            : \"?password=\" +\n                                                              value.password)\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"变更为公开分享\"\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"查看密码\"\n                                                onClick={() =>\n                                                    this.showPwd(value.password)\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title=\"变更为私密分享\"\n                                            onClick={() =>\n                                                this.changePermission(value.key)\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon\n                                                    fontSize={\"small\"}\n                                                />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? \"禁止预览\"\n                                                : \"允许预览\"\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <ToggleIcon\n                                                on={value.preview}\n                                                onIcon={\n                                                    <EyeIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                                offIcon={\n                                                    <VisibilityOff\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                            />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title=\"取消分享\"\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                        count={Math.ceil(this.state.total / 18)}\n                        onChange={this.handlePageChange}\n                        color=\"secondary\"\n                    />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> 分享密码 </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭{\" \"}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(MyShareCompoment)));\n\nexport default MyShare;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    content: {\n        padding: 0,\n    },\n}));\n\nexport default function SelectFileDialog(props) {\n    const [files, setFiles] = useState(props.files);\n\n    useEffect(() => {\n        setFiles(props.files);\n    }, [props.files]);\n\n    const handleChange = (index) => (event) => {\n        const filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v, k) => {\n            if (v.index === index) {\n                filesCopy[k] = {\n                    ...filesCopy[k],\n                    selected: event.target.checked ? \"true\" : \"false\",\n                };\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = () => {\n        const index = [];\n        // eslint-disable-next-line\n        files.map((v) => {\n            if (v.selected === \"true\") {\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">选择要下载的文件</DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                {files.map((v, k) => {\n                    return (\n                        <MenuItem key={k}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange(v.index)}\n                                            checked={v.selected === \"true\"}\n                                            value=\"checkedA\"\n                                        />\n                                    }\n                                    label={v.path}\n                                />\n                            </FormGroup>\n                        </MenuItem>\n                    );\n                })}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        onClick={submit}\n                        disabled={props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport { hex2bin, sizeToString } from \"../../utils\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\nimport { useHistory } from \"react-router\";\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    scroll: {\n        overflowY: \"auto\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default,\n    },\n}));\n\nexport default function DownloadingCard(props) {\n    const canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\n                ];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield, task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter((v) => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const deleteFile = (index) => {\n        setLoading(true);\n        const current = activeFiles();\n        const newIndex = [];\n        const newFiles = [];\n        // eslint-disable-next-line\n        current.map((v) => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\",\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\",\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex,\n        })\n            .then(() => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles,\n                    },\n                });\n                ToggleSnackbar(\"top\", \"right\", \"文件已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? \"[未知]\" : task.name;\n    }, [task]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid)\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已取消，状态会在稍后更新\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const changeSelectedFile = (fileIndex) => {\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"操作成功，状态会在稍后更新\",\n                    \"success\"\n                );\n                setSelectDialogOpen(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open={selectDialogOpen}\n                onClose={() => setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={selectFileOption}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" && (\n                        <div className={classes.scroll}>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {activeFiles().map((value) => {\n                                        return (\n                                            <TableRow\n                                                key={value.index}\n                                                style={{\n                                                    background:\n                                                        \"linear-gradient(to right, \" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" 0%,\" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" 100%)\",\n                                                }}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"删除此文件\">\n                                                        <IconButton\n                                                            onClick={() =>\n                                                                deleteFile(\n                                                                    value.index\n                                                                )\n                                                            }\n                                                            disabled={loading}\n                                                            size={\"small\"}\n                                                        >\n                                                            <HighlightOff />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" && (\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => {\n                                    setSelectDialogOpen(true);\n                                    setSelectFileOption([\n                                        ...props.task.info.files,\n                                    ]);\n                                }}\n                            >\n                                选择要下载的文件\n                            </Button>\n                        )}\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            取消任务\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    更新于：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={task.update}\n                                        locale=\"zh_CN\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传速度：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                            {task.info.bittorrent.mode !== \"\" && (\n                                <>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            InfoHash：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak: \"break-all\",\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种者：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种中：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? \"是\"\n                                                : \"否\"}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片数量：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport { sizeToString } from \"../../utils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { useHistory } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n        textAlign: \"left\",\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    scroll: {\n        overflowY: \"auto\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function FinishedCard(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = () => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + props.task.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"删除成功\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                window.location.reload();\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? \"[未知]\" : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter((v) => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = (error) => {\n        try {\n            const res = JSON.parse(error);\n            return res.msg + \"：\" + res.error;\n        } catch (e) {\n            return \"文件转存失败\";\n        }\n    };\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3 && (\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    下载出错：{props.task.error}\n                                </Typography>\n                            </Tooltip>\n                        )}\n                        {props.task.status === 5 && (\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                已取消\n                                {props.task.error !== \"\" && (\n                                    <span>：{props.task.error}</span>\n                                )}\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 4 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.main,\n                                    }}\n                                    noWrap\n                                >\n                                    已完成\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 0 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    已完成，转存排队中\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 1 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    已完成，转存处理中\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 2 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    color={\"error\"}\n                                    noWrap\n                                >\n                                    {getTaskError(props.task.task_error)}\n                                </Typography>\n                            )}\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]: expanded,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length > 1 && (\n                        <div className={classes.scroll}>\n                            <Table>\n                                <TableBody>\n                                    {activeFiles().map((value) => {\n                                        return (\n                                            <TableRow key={value.index}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(props.task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            删除记录\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    创建日期：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {formatLocalTime(\n                                        props.task.create,\n                                        \"YYYY-MM-DD H:mm:ss\"\n                                    )}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    最后更新：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {formatLocalTime(\n                                        props.task.update,\n                                        \"YYYY-MM-DD H:mm:ss\"\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { openRemoteDownloadDialog } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport Modals from \"../FileManager/Modals\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n}));\n\nexport default function RemoteDownloadButton() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const OpenRemoteDownloadDialog = useCallback(\n        () => dispatch(openRemoteDownloadDialog()),\n        [dispatch]\n    );\n\n    return (\n        <>\n            <Modals />\n            <AutoHidden enable>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    onClick={() => OpenRemoteDownloadDialog()}\n                >\n                    <Add />\n                </Fab>\n            </AutoHidden>\n        </>\n    );\n}\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\nimport RemoteDownloadButton from \"../Dial/Aria2\";\nimport Auth from \"../../middleware/Auth\";\n\nconst styles = (theme) => ({\n    actions: {\n        display: \"flex\",\n    },\n    title: {\n        marginTop: \"20px\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n    },\n    margin: {\n        marginTop: theme.spacing(2),\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true,\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n        this.loadMore();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/downloading\")\n            .then((response) => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false,\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if (response.data.length > 0) {\n                    this.interval = setTimeout(\n                        this.loadDownloading,\n                        1000 * response.data[0].interval\n                    );\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/finished?page=\" + ++this.page)\n            .then((response) => {\n                this.setState({\n                    finishedList: [\n                        ...this.state.finishedList,\n                        ...response.data,\n                    ],\n                    loading: false,\n                    continue: response.data.length >= 10,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n\n        return (\n            <div className={classes.layout}>\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    进行中\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={k} task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    已完成\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return <FinishedCard key={k} task={value} />;\n                        }\n                        return null;\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        加载更多\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(DownloadComponent));\n\nexport default Download;\n","import React from \"react\";\nimport { Facebook } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\",\n        },\n\n        marginTop: 30,\n    },\n}));\n\nconst MyLoader = (props) => {\n    return (\n        <Facebook\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n            className={props.className}\n        />\n    );\n};\n\nfunction PageLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\",\n            }}\n        >\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\n\nimport {\n    withStyles,\n    Button,\n    Card,\n    Divider,\n    CardHeader,\n    CardContent,\n    CardActions,\n    TextField,\n    Avatar,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\n\nconst styles = (theme) => ({\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    continue: {\n        marginLeft: \"auto\",\n        marginRight: \"10px\",\n        marginRottom: \"10px\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass LockedFileCompoment extends Component {\n    constructor(props) {\n        super(props);\n        const query = new URLSearchParams(this.props.location.search);\n        this.state = {\n            pwd: query.get(\"password\"),\n        };\n    }\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        if (this.state.pwd === \"\") {\n            return;\n        }\n        this.props.setPassowrd(this.state.pwd);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={\n                                    \"/api/v3/user/avatar/\" +\n                                    this.props.share.creator.key +\n                                    \"/l\"\n                                }\n                            />\n                        }\n                        title={this.props.share.creator.nick + \" 的加密分享\"}\n                        subheader={this.props.share.create_date}\n                    />\n                    <Divider />\n                    <CardContent>\n                        <form onSubmit={this.submit}>\n                            <TextField\n                                id=\"pwd\"\n                                label=\"输入分享密码\"\n                                value={this.state.pwd}\n                                onChange={this.handleChange(\"pwd\")}\n                                margin=\"normal\"\n                                type=\"password\"\n                                autoFocus\n                                fullWidth\n                                color=\"secondary\"\n                            />\n                        </form>\n                    </CardContent>\n                    <CardActions\n                        className={classes.actions}\n                        disableActionSpacing\n                    >\n                        <Button\n                            onClick={this.submit}\n                            color=\"secondary\"\n                            className={classes.continue}\n                            variant=\"contained\"\n                            disabled={\n                                this.state.pwd === \"\" || this.props.loading\n                            }\n                        >\n                            继续\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst LockedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(LockedFileCompoment)));\n\nexport default LockedFile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\nimport { formatLocalTime } from \"../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    boxHeader: {\n        textAlign: \"center\",\n        padding: 24,\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: \"0 auto\",\n        width: 50,\n        height: 50,\n        cursor: \"pointer\",\n    },\n    shareDes: {\n        marginTop: 12,\n    },\n    shareInfo: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n}));\n\nexport default function Creator(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const getSecondDes = () => {\n        if (props.share.expire > 0) {\n            if (props.share.expire >= 24 * 3600) {\n                return (\n                    Math.round(props.share.expire / (24 * 3600)) + \" 天后到期\"\n                );\n            }\n            return Math.round(props.share.expire / 3600) + \" 小时后到期\";\n        }\n        return formatLocalTime(props.share.create_date, \"YYYY-MM-DD H:mm:ss\");\n    };\n\n    const userProfile = () => {\n        history.push(\"/profile/\" + props.share.creator.key);\n        props.onClose && props.onClose();\n    };\n\n    return (\n        <div className={classes.boxHeader}>\n            <Avatar\n                className={classes.avatar}\n                alt={props.share.creator.nick}\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\n                onClick={() => userProfile()}\n            />\n            <Typography variant=\"h6\" className={classes.shareDes}>\n                {props.isFolder && (\n                    <>\n                        此分享由{\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        创建\n                    </>\n                )}\n                {!props.isFolder && (\n                    <>\n                        {\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        向您分享了 1 个文件\n                    </>\n                )}\n            </Typography>\n            <Typography className={classes.shareInfo}>\n                {props.share.views} 次浏览 • {props.share.downloads} 次下载 •{\" \"}\n                {getSecondDes()}\n            </Typography>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../actions\";\nimport { isPreviewable } from \"../../config\";\nimport { withStyles, Button, Typography } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport { withRouter } from \"react-router-dom\";\nimport Creator from \"./Creator\";\nimport pathHelper from \"../../utils/page\";\n\nvhCheck();\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"90px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginTop: \"90px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0,\n        },\n        justifyContent: \"center\",\n        display: \"flex\",\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    fileCotainer: {\n        width: \"200px\",\n        margin: \"0 auto\",\n    },\n    buttonCotainer: {\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\",\n        marginTop: \"20px\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    icon: {\n        borderRadius: \"10%\",\n        marginTop: 2,\n    },\n\n    box: {\n        width: \"100%\",\n        maxWidth: 440,\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 12,\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 56px)\",\n            borderRadius: 0,\n            maxWidth: 1000,\n        },\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    boxContent: {\n        padding: 24,\n        display: \"flex\",\n        flex: \"1\",\n    },\n    fileName: {\n        marginLeft: 20,\n    },\n    fileSize: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n    boxFooter: {\n        display: \"flex\",\n        padding: \"20px 16px\",\n        justifyContent: \"space-between\",\n    },\n    downloadButton: {\n        marginLeft: 8,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n    };\n};\n\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\n\nclass SharedFileCompoment extends Component {\n    state = {\n        anchorEl: null,\n        open: false,\n        purchaseCallback: null,\n        loading: false,\n    };\n\n    downloaded = false;\n\n    // TODO merge into react thunk\n    preview = () => {\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        switch (isPreviewable(this.props.share.source.name)) {\n            case \"img\":\n                this.props.showImgPreivew({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name,\n                });\n                return;\n            case \"msDoc\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/doc?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"audio\":\n                this.props.setSelectedTarget([\n                    {\n                        key: this.props.share.key,\n                        type: \"share\",\n                    },\n                ]);\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/video?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"edit\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/text?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"pdf\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/pdf?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"code\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/code?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            default:\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"此文件无法预览\",\n                    \"warning\"\n                );\n                return;\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n    }\n\n    scoreHandle = (callback) => (event) => {\n        callback(event);\n    };\n\n    download = () => {\n        this.setState({ loading: true });\n        API.put(\"/share/download/\" + this.props.share.key)\n            .then((response) => {\n                this.downloaded = true;\n                window.location.assign(response.data);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.layout}>\n                <Modals />\n                <ImgPreview />\n                <div className={classes.box}>\n                    <Creator share={this.props.share} />\n                    <Divider />\n                    <div className={classes.boxContent}>\n                        <TypeIcon\n                            className={classes.icon}\n                            isUpload\n                            fileName={this.props.share.source.name}\n                        />\n                        <div className={classes.fileName}>\n                            <Typography style={{ wordBreak: \"break-all\" }}>\n                                {this.props.share.source.name}\n                            </Typography>\n                            <Typography className={classes.fileSize}>\n                                {sizeToString(this.props.share.source.size)}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.boxFooter}>\n                        <div className={classes.actionLeft}>\n                            {this.props.share.preview && (\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={this.scoreHandle(this.preview)}\n                                    disabled={this.state.loading}\n                                >\n                                    预览\n                                </Button>\n                            )}\n                        </div>\n                        <div className={classes.actions}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.downloadButton}\n                                onClick={this.scoreHandle(this.download)}\n                                disabled={this.state.loading}\n                            >\n                                下载\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst SharedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFileCompoment)));\n\nexport default SharedFile;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    setShareUserPopover,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../actions\";\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Creator from \"./Creator\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport pathHelper from \"../../utils/page\";\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 30,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n    },\n    managerContainer: {\n        overflowY: \"auto\",\n    },\n});\n\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\n        fileList: state.explorer.fileList,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        setShareUserPopover: (e) => {\n            dispatch(setShareUserPopover(e));\n        },\n    };\n};\n\nclass SharedFolderComponent extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n        window.shareInfo = this.props.share;\n    }\n\n    componentWillUnmount() {\n        window.shareInfo = null;\n        this.props.setSelectedTarget([]);\n    }\n\n    handleClickAway = () => {\n        if (!pathHelper.isMobile()) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        let readmeShowed = false;\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\n\n        return (\n            <div className={classes.layout}>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <Paper className={classes.managerContainer}>\n                        <FileManager isShare share={this.props.share} />\n                    </Paper>\n                </ClickAwayListener>\n                {/* eslint-disable-next-line */}\n                {this.props.fileList.map((value) => {\n                    if (\n                        (value.name.toLowerCase() === \"readme.md\" ||\n                            value.name.toLowerCase() === \"readme.txt\") &&\n                        !readmeShowed\n                    ) {\n                        readmeShowed = true;\n                        return <ReadMe share={this.props.share} file={value} />;\n                    }\n                })}\n                <Popover\n                    id={id}\n                    open={this.props.anchorEl !== null}\n                    anchorEl={this.props.anchorEl}\n                    onClose={() => this.props.setShareUserPopover(null)}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\",\n                    }}\n                >\n                    <Typography>\n                        <Creator\n                            isFolder\n                            onClose={() => this.props.setShareUserPopover(null)}\n                            share={this.props.share}\n                        />\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nconst SharedFolder = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\n\nexport default SharedFolder;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\nimport LockedFile from \"./LockedFile\";\nimport SharedFile from \"./SharedFile\";\nimport SharedFolder from \"./SharedFolder\";\n\nexport default function SharePreload() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(share.creator.nick + \"的加密分享\");\n                if (password !== \"\") {\n                    ToggleSnackbar(\"top\", \"right\", \"密码不正确\", \"warning\");\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n    }, [share, SetSubTitle, ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then((response) => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password, ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={\"分享不存在或已过期\"} />}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share && !share.locked && !share.is_dir && (\n                <SharedFile share={share} />\n            )}\n            {share && !share.locked && share.is_dir && (\n                <SharedFolder share={share} />\n            )}\n        </Suspense>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(() => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"-48px\",\n    },\n\n    container: {\n        border: \"none\",\n        width: \"100%\",\n        height: \"calc(100vh - 18px)\",\n        marginBottom: -3,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer() {\n    const [url, setURL] = useState(\"\");\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/doc/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n        API.get(requestURL)\n            .then((response) => {\n                setURL(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            {url !== \"\" && (\n                <iframe title={\"ms\"} className={classes.container} src={url} />\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nconst useStyles = makeStyles((theme) => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1),\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary,\n    },\n    input: {\n        width: 250,\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24,\n    },\n    button: {\n        marginTop: 8,\n    },\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\",\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = (name) => (e) => {\n        setValue({\n            ...value,\n            [name]: e.target.value,\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\n        });\n        setPathSelectDialog(false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        取消\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label=\"备注名\"\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label=\"相对根目录\"\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                选择目录\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <Button\n                    disabled={value.path === \"\" || value.name === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    确定\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    copy: {\n        marginLeft: 10,\n    },\n}));\n\nexport default function WebDAV() {\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const copyToClipboard = (text) => {\n        navigator.clipboard.writeText(text);\n        ToggleSnackbar(\"top\", \"center\", \"已复制到剪切板\", \"success\");\n    };\n\n    const loadList = () => {\n        API.get(\"/webdav/accounts\")\n            .then((response) => {\n                setAccounts(response.data.accounts);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const deleteAccount = (id) => {\n        const account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(() => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = (account) => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name,\n        })\n            .then((response) => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path,\n                    },\n                    ...accounts,\n                ]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                WebDAV\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label=\"账号管理\" />\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                WebDAV的地址为：\n                                {window.location.origin + \"/dav\"}\n                                ；登陆用户名统一为：{user.user_name}{\" \"}\n                                ；密码为所创建账号的密码。\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>备注名</TableCell>\n                                            <TableCell>密码</TableCell>\n                                            <TableCell align=\"right\">\n                                                根目录\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                创建日期\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                操作\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Password}\n                                                    <Link\n                                                        className={classes.copy}\n                                                        onClick={() =>\n                                                            copyToClipboard(\n                                                                row.Password\n                                                            )\n                                                        }\n                                                        href={\"javascript:void\"}\n                                                    >\n                                                        复制\n                                                    </Link>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        size={\"small\"}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                创建新账号\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX: \"auto\",\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    noWrap: {\n        wordBreak: \"keepAll\",\n    },\n    footer: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function Tasks() {\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = (page) => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then((response) => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                任务队列\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">创建于</TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                任务类型\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                状态\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                最后进度\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\">错误信息</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell\n                                    nowrap=\"nowrap\"\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    {formatLocalTime(\n                                        row.create_date,\n                                        \"YYYY-MM-DD H:mm:ss\"\n                                    )}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskStatus(row.status)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type, row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <div className={classes.footer}>\n                    <Pagination\n                        count={Math.ceil(total / 10)}\n                        onChange={(e, v) => setPage(v)}\n                        color=\"secondary\"\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    withStyles,\n    Paper,\n    Avatar,\n    Typography,\n    Tabs,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Grid,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    userNav: {\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\",\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\",\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\",\n    },\n    th: {\n        minWidth: \"106px\",\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\",\n        },\n    },\n    tableLink: {\n        cursor: \"pointer\",\n    },\n    navigator: {\n        padding: theme.spacing(2),\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\",\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\",\n    },\n    infoContainer: {\n        marginTop: \"30px\",\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user: null,\n        total: 0,\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page, order) => {\n        API.get(\n            \"/user/profile/\" +\n                this.props.match.params.id +\n                \"?page=\" +\n                page +\n                \"&type=\" +\n                order\n        )\n            .then((response) => {\n                this.setState({\n                    shareList: response.data.items,\n                    user: response.data.user,\n                    total: response.data.total,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null && <div></div>}\n                {this.state.user !== null && (\n                    <Paper square>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.state.user.id +\n                                        \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label=\"全部分享\" />\n                            <Tab label=\"热门分享\" />\n                            <Tab label=\"个人资料\" />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            UID\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            昵称\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            用户组\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            分享总数\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            注册日期\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>文件名</TableCell>\n                                                <TableCell\n                                                    className={\n                                                        classes.mobileHide\n                                                    }\n                                                >\n                                                    分享日期\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    下载次数\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    浏览次数\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.shareList.map(\n                                                (row, id) => (\n                                                    <TableRow\n                                                        key={id}\n                                                        className={\n                                                            classes.tableLink\n                                                        }\n                                                        onClick={() =>\n                                                            this.props.history.push(\n                                                                \"/s/\" + row.key\n                                                            )\n                                                        }\n                                                    >\n                                                        <TableCell>\n                                                            <Typography>\n                                                                {row.source\n                                                                    ? row.source\n                                                                          .name\n                                                                    : \"[已失效]\"}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell\n                                                            nowrap={\"nowrap\"}\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.create_date}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.downloads}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.views}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                    this.state.listType === 0 && (\n                                        <div className={classes.navigator}>\n                                            <Pagination\n                                                count={Math.ceil(\n                                                    this.state.total / 10\n                                                )}\n                                                onChange={(e, v) =>\n                                                    this.loadList(\n                                                        v,\n                                                        this.state.listType ===\n                                                            0\n                                                            ? \"default\"\n                                                            : \"hot\"\n                                                    )\n                                                }\n                                                color=\"secondary\"\n                                            />\n                                        </div>\n                                    )}\n                            </div>\n                        )}\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ProfileCompoment)));\n\nexport default Profile;\n","import React, { useState, useCallback } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport { bufferDecode, bufferEncode } from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n}));\n\nexport default function Authn(props) {\n    const [selected, setSelected] = useState(\"\");\n    const [confirm, setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteCredential = (id) => {\n        API.patch(\"/user/setting/authn\", {\n            id: id,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"凭证已删除\", \"success\");\n                props.remove(id);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setConfirm(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    const addCredential = () => {\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n        API.put(\"/user/authn\", {})\n            .then((response) => {\n                const credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        let i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                        ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey,\n                });\n            })\n            .then((credential) => {\n                const attestationObject = credential.response.attestationObject;\n                const clientDataJSON = credential.response.clientDataJSON;\n                const rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                props.add(response.data);\n                ToggleSnackbar(\"top\", \"right\", \"验证器已添加\", \"success\");\n                return;\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            {/* <Dialog open={confirm} onClose={() => setConfirm(false)}>\n                <DialogTitle>删除凭证</DialogTitle>\n                <DialogContent>确定要吊销这个凭证吗？</DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => deleteCredential(selected)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                外部认证器\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map((v) => (\n                        <>\n                            <ListItem\n                                button\n                                style={{\n                                    paddingRight: 60,\n                                }}\n                                onClick={() => {\n                                    setConfirm(true);\n                                    setSelected(v.id);\n                                }}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() => deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff\n                                        className={classes.rightIcon}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={() => addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText primary=\"添加新验证器\" />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexConta仪表盘iner}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper> */}\n        </div>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { FormLabel, makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {\n    refreshTimeZone,\n    timeZone,\n    validateTimeZone,\n} from \"../../utils/datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function TimeZoneDialog(props) {\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const saveZoneInfo = () => {\n        if (!validateTimeZone(timeZoneValue)) {\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\n            return;\n        }\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\n        refreshTimeZone();\n        props.onClose();\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">更改时区</DialogTitle>\n\n            <DialogContent>\n                <FormControl>\n                    <TextField\n                        label={\"IANA 时区名称标识\"}\n                        value={timeZoneValue}\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={timeZoneValue === \"\"}\n                        onClick={() => saveZoneInfo()}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport {\n    applyThemes,\n    changeViewMethod,\n    toggleDaylightMode,\n    toggleSnackbar,\n} from \"../../actions\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch,\n} from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport QRCode from \"qrcode-react\";\nimport { Brightness3, ListAlt, PermContactCalendar,Schedule } from \"@material-ui/icons\";\nimport { transformTime } from \"../../utils\";\nimport Authn from \"./Authn\";\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\nimport TimeZoneDialog from \"../Modals/TimeZone\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    infoText: {\n        marginRight: \"17px\",\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\",\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\",\n        },\n    },\n    desText: {\n        marginTop: \"10px\",\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\",\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\",\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\",\n    },\n    paddingBottom: {\n        marginBottom: \"30px\",\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2),\n    },\n    qrcode: {\n        width: 128,\n        marginTop: 16,\n        marginRight: 16,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.siteConfig.title,\n        authn: state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: (color) => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode: () => {\n            dispatch(toggleDaylightMode());\n        },\n        changeView: (method) => {\n            dispatch(changeViewMethod(method));\n        },\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        changeTimeZone: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\",\n                },\n                options: [],\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn: [],\n        },\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false,\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then((response) => {\n                const theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\",\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\",\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"昵称已更改，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\",\n        });\n        const formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设置已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage,\n                    },\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"两次密码输入不一致\",\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\",\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码已更新\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\",\n        });\n        API.patch(\"/user/setting/theme\", {\n            theme: this.state.chosenTheme,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"主题配色已更换\",\n                    \"success\"\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\",\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd,\n            })\n            .then((response) => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor) {\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then((response) => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\",\n        });\n        API.patch(\"/user/setting/2fa\", {\n            code: this.state.authCode,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设定已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                    settings: {\n                        ...this.state.settings,\n                        two_factor: !this.state.settings.two_factor,\n                    },\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = (current) => {\n        if (current !== null) {\n            this.props.toggleDaylightMode();\n            Auth.SetPreference(\"theme_mode\", null);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\");\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个人资料\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary=\"头像\" />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary=\"UID\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"昵称\" />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Email\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"用户组\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"注册时间\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {formatLocalTime(\n                                            user.created_at,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        安全隐私\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            {/* <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"个人主页\" />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem> */}\n                            {/* <Divider /> */}\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"登录密码\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            {/* <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"二步验证\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? \"未开启\"\n                                            : \"已开启\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem> */}\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add={(credential) => {\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: [\n                                        ...this.state.settings.authn,\n                                        credential,\n                                    ],\n                                },\n                            });\n                        }}\n                        remove={(id) => {\n                            let credentials = [...this.state.settings.authn];\n                            credentials = credentials.filter((v) => {\n                                return v.id !== id;\n                            });\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: credentials,\n                                },\n                            });\n                        }}\n                    />\n\n                    {/* <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个性化\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主题配色\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor}></div>\n                                    <div className={classes.secondColor}></div>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleThemeMode(dark)}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary=\"黑暗模式\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark &&\n                                            (dark === \"dark\"\n                                                ? \"偏好开启\"\n                                                : \"偏好关闭\")}\n                                        {dark === null && \"跟随系统\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleViewMethod()}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文件列表\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" &&\n                                            \"大图标\"}\n                                        {this.props.viewMethod === \"list\" &&\n                                            \"列表\"}\n                                        {this.props.viewMethod ===\n                                            \"smallIcon\" && \"小图标\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() =>\n                                    this.setState({ changeTimeZone: true })\n                                }\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Schedule />\n                                </ListItemIcon>\n                                <ListItemText primary=\"时区\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {timeZone}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper> */}\n                    {/* {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"连接地址\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"用户名\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"账号管理\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )} */}\n                    <div className={classes.paddingBottom}></div>\n                </div>\n                <TimeZoneDialog\n                    onClose={() => this.setState({ changeTimeZone: false })}\n                    open={this.state.changeTimeZone}\n                />\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改头像</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"从文件上传\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary=\"使用 Gravatar 头像 \"\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            取消\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>修改昵称</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"昵称\"\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改登录密码</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"原密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"确认新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>\n                        {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                        二步验证\n                    </DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n                            {!this.state.settings.two_factor && (\n                                <div className={classes.qrcode}>\n                                    <QRCode\n                                        value={\n                                            \"otpauth://totp/\" +\n                                            this.props.title +\n                                            \"?secret=\" +\n                                            this.state.two_fa_secret\n                                        }\n                                    />\n                                </div>\n                            )}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && (\n                                    <Typography>\n                                        请使用任意二步验证APP或者支持二步验证的密码管理软件扫描左侧二维码添加本站。扫描完成后请填写二步验证APP给出的6位验证码以开启二步验证。\n                                    </Typography>\n                                )}\n                                {this.state.settings.two_factor && (\n                                    <Typography>\n                                        请验证当前二步验证代码。\n                                    </Typography>\n                                )}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label=\"6位验证码\"\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                            二步验证\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>更改主题配色</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                )\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV连接地址</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={window.location.origin + \"/dav\"}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV用户名</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserSettingCompoment)));\n\nexport default UserSetting;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    captchaPlaceholder: {\n        width: 200,\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n    avatarSuccess: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nfunction Register() {\n    const [input, setInput] = useState({\n        email: \"\",\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n\n    const title = useSelector((state) => state.siteConfig.title);\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const classes = useStyles();\n\n    const register = (e) => {\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        if (!isValidate.current.isValidate && regCaptcha) {\n            validate(() => register(e), setLoading);\n            return;\n        }\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setEmailActive(true);\n                } else {\n                    history.push(\"/login?username=\" + input.email);\n                    ToggleSnackbar(\"top\", \"right\", \"注册成功\", \"success\");\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <RegIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            注册 {title}\n                        </Typography>\n\n                        <form className={classes.form} onSubmit={register}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">\n                                    电子邮箱\n                                </InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleInputChange(\"email\")}\n                                    autoComplete\n                                    value={input.email}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">密码</InputLabel>\n                                <Input\n                                    name=\"password\"\n                                    onChange={handleInputChange(\"password\")}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={input.password}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">\n                                    确认密码\n                                </InputLabel>\n                                <Input\n                                    name=\"pwdRepeat\"\n                                    onChange={handleInputChange(\n                                        \"password_repeat\"\n                                    )}\n                                    type=\"password\"\n                                    id=\"pwdRepeat\"\n                                    value={input.password_repeat}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            {regCaptcha && <CaptchaRender />}\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={\n                                    loading ||\n                                    (regCaptcha ? captchaLoading : false)\n                                }\n                                className={classes.submit}\n                            >\n                                注册账号\n                            </Button>\n                        </form>\n\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/login\"}>返回登录</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                {emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatarSuccess}>\n                            <EmailIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            邮件激活\n                        </Typography>\n                        <Typography style={{ marginTop: \"10px\" }}>\n                            一封激活邮件已经发送至您的邮箱，请访问邮件中的链接以继续完成注册。\n                        </Typography>\n                    </Paper>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport { Button, Paper, Avatar, Typography } from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useLocation } from \"react-router\";\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    const query = useQuery();\n    const location = useLocation();\n\n    const [success, setSuccess] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        API.get(\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\n        )\n            .then((response) => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        激活成功\n                    </Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>\n                        您的账号已被成功激活。\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push(\"/login?username=\" + email)}\n                    >\n                        返回登录\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography,\n} from \"@material-ui/core\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    const query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\"top\", \"right\", \"密码已重设\", \"success\");\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">新密码</InputLabel>\n                        <Input\n                            id=\"pwd\"\n                            type=\"password\"\n                            name=\"pwd\"\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">重复新密码</InputLabel>\n                        <Input\n                            id=\"pwdRepeat\"\n                            type=\"password\"\n                            name=\"pwdRepeat\"\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        重设密码\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/#/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/#/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport API from \"../../middleware/Api\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n    },\n    captchaPlaceholder: {\n        width: 200,\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction Reset() {\n    const [input, setInput] = useState({\n        email: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(\n        (state) => state.siteConfig.forgetCaptcha\n    );\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && forgetCaptcha) {\n            validate(() => submit(e), setLoading);\n            return;\n        }\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            ...captchaParamsRef.current,\n        })\n            .then(() => {\n                setLoading(false);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码重置邮件已发送，请注意查收\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">注册邮箱</InputLabel>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && <CaptchaRender />}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={\n                            loading || (forgetCaptcha ? captchaLoading : false)\n                        }\n                        className={classes.submit}\n                    >\n                        发送密码重置邮件\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { changeThemeColor } from \"./utils\";\nimport NotFound from \"./component/Share/NotFound\";\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\";\nimport FileManager from \"./component/FileManager/FileManager.js\";\nimport VideoPreview from \"./component/Viewer/Video.js\";\nimport SearchResult from \"./component/Share/SearchResult\";\nimport MyShare from \"./component/Share/MyShare\";\nimport Download from \"./component/Download/Download\";\nimport SharePreload from \"./component/Share/SharePreload\";\nimport DocViewer from \"./component/Viewer/Doc\";\nimport TextViewer from \"./component/Viewer/Text\";\nimport WebDAV from \"./component/Setting/WebDAV\";\nimport Tasks from \"./component/Setting/Tasks\";\nimport Profile from \"./component/Setting/Profile\";\nimport UserSetting from \"./component/Setting/UserSetting\";\nimport Register from \"./component/Login/Register\";\nimport Activation from \"./component/Login/Activication\";\nimport ResetForm from \"./component/Login/ResetForm\";\nimport Reset from \"./component/Login/Reset\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport CodeViewer from \"./component/Viewer/Code\";\nconst PDFViewer = React.lazy(() =>\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\n);\n\nexport default function App() {\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        const prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        const theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main,\n                },\n            },\n        });\n        changeThemeColor(\n            themeConfig.palette.type === \"dark\"\n                ? theme.palette.background.default\n                : theme.palette.primary.main\n        );\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(0),\n            minWidth: 0,\n        },\n        toolbar: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n    const { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\",\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\n                                <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\n                                <CodeViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                <MyShare />\n                            </AuthRoute>\n\n                            <Route path={`${path}search`} isLogin={isLogin}>\n                                <SearchResult />\n                            </Route>\n\n                            <Route path={`${path}setting`} isLogin={isLogin}>\n                                <UserSetting />\n                            </Route>\n\n                            <AuthRoute\n                                path={`${path}profile/:id`}\n                                isLogin={isLogin}\n                            >\n                                <Profile />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                <Tasks />\n                            </AuthRoute>\n\n                            <Route path={`${path}login`} exact>\n                                <LoginForm />\n                            </Route>\n\n                            <Route path={`${path}signup`} exact>\n                                <Register />\n                            </Route>\n\n                            <Route path={`${path}activate`} exact>\n                                <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                <Reset />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                <TextViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/pdf(/)*`}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </Route>\n\n                            <Route path={`${path}s/:id/code(/)*`}>\n                                <CodeViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound msg={\"页面不存在\"} />\n                            </Route>\n                        </Switch>\n                    </main>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\n\nexport interface ViewUpdateState {\n    isLogin: boolean;\n    loadUploader: boolean;\n    open: boolean;\n    explorerViewMethod: string;\n    sortMethod:\n        | \"sizePos\"\n        | \"sizeRes\"\n        | \"namePos\"\n        | \"nameRev\"\n        | \"timePos\"\n        | \"timeRev\";\n    subTitle: string | null;\n    contextType: string;\n    contextOpen: boolean;\n    menuOpen: boolean;\n    navigatorLoading: boolean;\n    navigatorError: boolean;\n    navigatorErrorMsg: string | null;\n    modalsLoading: boolean;\n    storageRefresh: boolean;\n    userPopoverAnchorEl: any;\n    shareUserPopoverAnchorEl: any;\n    modals: {\n        createNewFolder: boolean;\n        createNewFile: boolean;\n        rename: boolean;\n        move: boolean;\n        remove: boolean;\n        share: boolean;\n        music: boolean;\n        remoteDownload: boolean;\n        torrentDownload: boolean;\n        getSource: boolean;\n        copy: boolean;\n        resave: boolean;\n        compress: boolean;\n        decompress: boolean;\n        loading: boolean;\n        loadingText: string;\n    };\n    snackbar: {\n        toggle: boolean;\n        vertical: string;\n        horizontal: string;\n        msg: string;\n        color: string;\n    };\n}\nexport const initState: ViewUpdateState = {\n    // 是否登录\n    isLogin: Auth.Check(),\n    loadUploader: false,\n    open: false,\n    explorerViewMethod: \"icon\",\n    sortMethod: \"timePos\",\n    subTitle: null,\n    contextType: \"none\",\n    contextOpen: false,\n    menuOpen: false,\n    navigatorLoading: true,\n    navigatorError: false,\n    navigatorErrorMsg: null,\n    modalsLoading: false,\n    storageRefresh: false,\n    userPopoverAnchorEl: null,\n    shareUserPopoverAnchorEl: null,\n    modals: {\n        createNewFolder: false,\n        createNewFile: false,\n        rename: false,\n        move: false,\n        remove: false,\n        share: false,\n        music: false,\n        remoteDownload: false,\n        torrentDownload: false,\n        getSource: false,\n        copy: false,\n        resave: false,\n        compress: false,\n        decompress: false,\n        loading: false,\n        loadingText: \"\",\n    },\n    snackbar: {\n        toggle: false,\n        vertical: \"top\",\n        horizontal: \"center\",\n        msg: \"\",\n        color: \"\",\n    },\n};\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\n    switch (action.type) {\n        case \"DRAWER_TOGGLE\":\n            return Object.assign({}, state, {\n                open: action.open,\n            });\n        case \"CHANGE_VIEW_METHOD\":\n            return Object.assign({}, state, {\n                explorerViewMethod: action.method,\n            });\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\n            return Object.assign({}, state, {\n                navigatorLoading: action.status,\n            });\n        case \"SET_NAVIGATOR_ERROR\":\n            return Object.assign({}, state, {\n                navigatorError: action.status,\n                navigatorErrorMsg: action.msg,\n            });\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_CREATE_FILE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFile: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RENAME_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    rename: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remove: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    move: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RESAVE_DIALOG\":\n            // window.shareKey = action.key;\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    resave: true,\n                }),\n                contextOpen: false,\n            });\n        case \"SET_USER_POPOVER\":\n            return Object.assign({}, state, {\n                userPopoverAnchorEl: action.anchor,\n            });\n        case \"SET_SHARE_USER_POPOVER\":\n            return Object.assign({}, state, {\n                shareUserPopoverAnchorEl: action.anchor,\n            });\n        case \"OPEN_SHARE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    share: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MUSIC_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    music: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    torrentDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_DECOMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    decompress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    compress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_GET_SOURCE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getSource: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COPY_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    copy: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_LOADING_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    loading: true,\n                    loadingText: action.text,\n                }),\n                contextOpen: false,\n            });\n        case \"CLOSE_CONTEXT_MENU\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n            });\n        case \"CLOSE_ALL_MODALS\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: false,\n                    createNewFile: false,\n                    rename: false,\n                    move: false,\n                    remove: false,\n                    share: false,\n                    music: false,\n                    remoteDownload: false,\n                    torrentDownload: false,\n                    getSource: false,\n                    resave: false,\n                    copy: false,\n                    loading: false,\n                    compress: false,\n                    decompress: false,\n                }),\n            });\n        case \"TOGGLE_SNACKBAR\":\n            return Object.assign({}, state, {\n                snackbar: {\n                    toggle: !state.snackbar.toggle,\n                    vertical: action.vertical,\n                    horizontal: action.horizontal,\n                    msg: action.msg,\n                    color: action.color,\n                },\n            });\n        case \"SET_MODALS_LOADING\":\n            return Object.assign({}, state, {\n                modalsLoading: action.status,\n            });\n        case \"SET_SESSION_STATUS\":\n            return {\n                ...state,\n                isLogin: action.status,\n            };\n        case \"ENABLE_LOAD_UPLOADER\":\n            return Object.assign({}, state, {\n                loadUploader: true,\n            });\n        case \"REFRESH_STORAGE\":\n            return Object.assign({}, state, {\n                storageRefresh: !state.storageRefresh,\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: true,\n            });\n        case \"CHANGE_CONTEXT_MENU\":\n            if (state.contextOpen && action.open) {\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                contextOpen: action.open,\n                contextType: action.menuType,\n            });\n        case \"SET_SUBTITLE\":\n            return Object.assign({}, state, {\n                subTitle: action.title,\n            });\n        case \"SET_SORT_METHOD\":\n            return {\n                ...state,\n                sortMethod: action.method,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: action.navigatorLoading,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default viewUpdate;\n","/* eslint-disable no-case-declarations */\nimport { InitSiteConfig } from \"../middleware/Init\";\nimport { combineReducers } from \"../redux/combineReducers\";\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\nimport explorer from \"../redux/explorer/reducer\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst doNavigate = (path, state) => {\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator: Object.assign({}, state.navigator, {\n            path: path,\n        }),\n    });\n};\n\nexport const initState = {\n    siteConfig: {\n        title: window.subTitle,\n        siteICPId: \"\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes: null,\n        authn: false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\",\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\",\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\",\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\",\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\",\n                },\n            },\n        },\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_type: \"normal\",\n        tcaptcha_captcha_app_id: \"\",\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true,\n    },\n};\n\nconst defaultStatus = InitSiteConfig(initState);\n\n// TODO: 将cloureveApp切分成小的reducer\nconst cloudreveApp = (state = defaultStatus, action) => {\n    switch (action.type) {\n        case \"SET_NAVIGATOR\":\n            return doNavigate(action.path, state);\n        case \"TOGGLE_DAYLIGHT_MODE\": {\n            const copy = Object.assign({}, state);\n            if (\n                copy.siteConfig.theme.palette.type === undefined ||\n                copy.siteConfig.theme.palette.type === \"light\"\n            ) {\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme: {\n                            ...state.siteConfig.theme,\n                            palette: {\n                                ...state.siteConfig.theme.palette,\n                                type: \"dark\",\n                            },\n                        },\n                    },\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme: {\n                        ...state.siteConfig.theme,\n                        palette: {\n                            ...state.siteConfig.theme.palette,\n                            type: \"light\",\n                        },\n                    },\n                },\n            };\n        }\n        case \"APPLY_THEME\":\n            if (state.siteConfig.themes !== null) {\n                const themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined) {\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme: themes[action.theme],\n                    }),\n                });\n            }\n            break;\n        case \"NAVIGATOR_UP\":\n            return doNavigate(action.path, state);\n        case \"SET_SITE_CONFIG\":\n            return Object.assign({}, state, {\n                siteConfig: action.config,\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh: !state.navigator.refresh,\n                }),\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/搜索结果\",\n                    refresh:\n                        state.explorer.keywords === \"\"\n                            ? state.navigator.refresh\n                            : !state.navigator.refresh,\n                }),\n            });\n        default:\n            return state;\n    }\n};\n\nexport default (history) => (state, action) => {\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\n        state || {};\n    const appState = cloudreveApp(state, action);\n    const combinedState = combineReducers({\n        viewUpdate,\n        explorer,\n        router: connectRouter(history),\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\n    return {\n        ...appState,\n        ...combinedState,\n    };\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = {\n    h1: {\n        color: \"#a4a4a4\",\n        margin: \"5px 0px\",\n    },\n    h2: {\n        margin: \"15px 0px\",\n    },\n};\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        // 更新 state 使下一次渲染能够显示降级后的 UI\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.hasError) {\n            // 你可以自定义降级后的 UI 并渲染\n            return (\n                <>\n                    <h1 className={classes.h1}>:(</h1>\n                    <h2 className={classes.h2}>\n                        页面渲染出现错误，请尝试刷新此页面。\n                    </h2>\n                    {this.state.error &&\n                        this.state.errorInfo &&\n                        this.state.errorInfo.componentStack && (\n                            <details>\n                                <summary>错误详情</summary>\n                                <pre>\n                                    <code>{this.state.error.toString()}</code>\n                                </pre>\n                                <pre>\n                                    <code>\n                                        {this.state.errorInfo.componentStack}\n                                    </code>\n                                </pre>\n                            </details>\n                        )}\n                </>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default withStyles(styles)(ErrorBoundary);\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { ConnectedRouter } from \"connected-react-router\";\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nif (window.location.hash !== \"\") {\n    window.location.href = window.location.hash.split(\"#\")[1];\n}\n\nserviceWorker.register();\nexport const history = createBrowserHistory();\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\nif (\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nconst store = createStore(cloureveApp(history), reduxEnhance);\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <ErrorBoundary>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <Switch>\n                    <Route path=\"/admin\">\n                        <Suspense fallback={\"Loading...\"}>\n                            <Admin />\n                        </Suspense>\n                    </Route>\n                    <Route exact path=\"\">\n                        <App />\n                    </Route>\n                </Switch>\n            </ConnectedRouter>\n        </Provider>\n    </ErrorBoundary>,\n    document.getElementById(\"root\")\n);\n","import {\n    combineReducers as combine,\n    ReducersMapObject,\n    AnyAction,\n} from \"redux\";\nimport invariant from \"invariant\";\n\nexport const combineReducers = (reducers: ReducersMapObject) => {\n    const combinedReducer = combine(reducers);\n    // TODO: define state type\n    return (state: any, action: AnyAction) => {\n        if (\n            action.type &&\n            !action.type.startsWith(\"@@\") &&\n            action.type.split(\"/\").length > 1\n        ) {\n            const namespace = action.type.split(\"/\")[0];\n            const reducer = reducers[namespace];\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\n            return reducer && reducer(state, action);\n        }\n        return combinedReducer(state, action);\n    };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { toggleSnackbar } from \"../../actions/index\";\n\nimport {\n    MenuList,\n    MenuItem,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    withStyles,\n    ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\n\nconst mapStateToProps = (state) => {\n    return {\n        keywords: state.explorer.keywords,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconWhite: {\n        color: theme.palette.common.white,\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main + \"!important\",\n        \"& $primary, & $icon\": {\n            color: theme.palette.common.white,\n        },\n    },\n    primary: {},\n    icon: {},\n    buttonIcon: {},\n    selector: {\n        minWidth: \"300px\",\n    },\n    container: {\n        maxHeight: \"330px\",\n        overflowY: \" auto\",\n    },\n});\n\nclass PathSelectorCompoment extends Component {\n    state = {\n        presentPath: \"/\",\n        dirList: [],\n        selectedTarget: null,\n    };\n\n    componentDidMount = () => {\n        const toBeLoad = this.props.presentPath;\n        this.enterFolder(this.props.keywords === \"\" ? toBeLoad : \"/\");\n    };\n\n    back = () => {\n        const paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        const toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\n    };\n\n    enterFolder = (toBeLoad) => {\n        API.get(\n            (this.props.api ? this.props.api : \"/directory\") +\n                encodeURIComponent(toBeLoad)\n        )\n            .then((response) => {\n                const dirList = response.data.objects.filter((x) => {\n                    return (\n                        x.type === \"dir\" &&\n                        this.props.selected.findIndex((value) => {\n                            return (\n                                value.name === x.name && value.path === x.path\n                            );\n                        }) === -1\n                    );\n                });\n                if (toBeLoad === \"/\") {\n                    dirList.unshift({ name: \"/\", path: \"\" });\n                }\n                this.setState({\n                    presentPath: toBeLoad,\n                    dirList: dirList,\n                    selectedTarget: null,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            });\n    };\n\n    handleSelect = (index) => {\n        this.setState({ selectedTarget: index });\n        this.props.onSelect(this.state.dirList[index]);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.container}>\n                <MenuList className={classes.selector}>\n                    {this.state.presentPath !== \"/\" && (\n                        <MenuItem onClick={this.back}>\n                            <ListItemIcon>\n                                <UpIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"返回上一层\" />\n                        </MenuItem>\n                    )}\n                    {this.state.dirList.map((value, index) => (\n                        <MenuItem\n                            classes={{\n                                selected: classes.selected,\n                            }}\n                            key={index}\n                            selected={this.state.selectedTarget === index}\n                            onClick={() => this.handleSelect(index)}\n                        >\n                            <ListItemIcon className={classes.icon}>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                classes={{ primary: classes.primary }}\n                                primary={value.name}\n                                primaryTypographyProps={{\n                                    style: { whiteSpace: \"normal\" },\n                                }}\n                            />\n                            {value.name !== \"/\" && (\n                                <ListItemSecondaryAction\n                                    className={classes.buttonIcon}\n                                >\n                                    <IconButton\n                                        className={classNames({\n                                            [classes.iconWhite]:\n                                                this.state.selectedTarget ===\n                                                index,\n                                        })}\n                                        onClick={() =>\n                                            this.enterFolder(\n                                                value.path === \"/\"\n                                                    ? value.path + value.name\n                                                    : value.path +\n                                                          \"/\" +\n                                                          value.name\n                                            )\n                                        }\n                                    >\n                                        <RightIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            )}\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath: PropTypes.string.isRequired,\n    selected: PropTypes.array.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(PathSelectorCompoment));\n"],"sourceRoot":""}